{"id":"1473767413ccb72c3832d7ba7ca047b2","_format":"hh-sol-build-info-1","solcVersion":"zkVM-0.8.24-1.0.1","solcLongVersion":"zkVM-0.8.24-1.0.1","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/DeathRaceGame.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n// Revert to standard OpenZeppelin imports\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\"; // Import ECDSA\n\n/**\n * @title DeathRaceGame\n * @dev Smart contract to manage Death Race game on Abstract L2 (zkSync Era)\n * \n * The contract handles game creation, payout management, and provable fairness\n * for the Death Race game, where players navigate through a grid to maximize \n * their potential winnings. Requires server-signed parameters for critical actions.\n */\ncontract DeathRaceGame is ReentrancyGuard, Ownable {\n    using Strings for uint256;\n\n    // ===================\n    // State Variables\n    // ===================\n\n    /// @notice Counter for unique on-chain game IDs\n    uint256 public gameCounter;\n\n    /// @notice Address authorized to sign parameters for critical actions (server backend)\n    address public serverSignerAddress;\n\n    /// @notice Mapping from preliminary game ID to on-chain game ID\n    mapping(string => uint256) public preliminaryToOnChainId;\n\n    /// @notice Game status enum\n    enum GameStatus {\n        Active,\n        Won,\n        Lost\n    }\n\n    /// @notice Game data structure\n    struct Game {\n        uint256 createdAt;       // Block timestamp when game was created\n        address player;          // Player's wallet address\n        uint256 betAmount;       // Original bet amount in wei\n        GameStatus status;       // Current game status\n        uint256 payoutAmount;    // Final payout amount (0 if lost)\n        bytes32 gameSeedHash;    // Hash of the seed + rows + algoVersion\n        string gameSeed;         // Seed used to generate the death tiles\n        string algoVersion;      // Algorithm version for going from seed to death tiles\n        uint8[] rows;            // Array of tile counts per row\n        uint8[] selectedTiles;   // Array of selected tile indices\n    }\n\n    /// @notice Mapping from on-chain game ID to Game data\n    mapping(uint256 => Game) public games;\n\n    // ===================\n    // Events\n    // ===================\n\n    /// @notice Emitted when a new game is created\n    event GameCreated(\n        string preliminaryGameId,\n        uint256 indexed onChainGameId,\n        address indexed player,\n        uint256 betAmount,\n        bytes32 gameSeedHash // Keep seed hash in event for listener correlation\n    );\n\n    /// @notice Emitted when a payout is sent to a player\n    event PayoutSent(\n        uint256 indexed onChainGameId,\n        uint256 amount,\n        address indexed recipient\n    );\n\n    /// @notice Emitted when a game status is updated\n    event GameStatusUpdated(\n        uint256 indexed onChainGameId,\n        GameStatus status\n    );\n\n    /// @notice Emitted when the server signer address is updated\n    event ServerSignerAddressUpdated(address newAddress);\n\n    /// @notice Emitted when funds are deposited directly into the contract\n    event DepositReceived(address indexed sender, uint256 amount);\n\n    // ===================\n    // Errors\n    // ===================\n\n    /// @notice Error when game already exists\n    error GameAlreadyExists(string preliminaryGameId);\n\n    /// @notice Error when game doesn't exist\n    error GameDoesNotExist(uint256 onChainGameId);\n\n    /// @notice Error when caller is not the player\n    error NotGamePlayer(uint256 onChainGameId, address caller);\n\n    /// @notice Error when game is not in active status\n    error GameNotActive(uint256 onChainGameId);\n\n    /// @notice Error when payout fails\n    error PayoutFailed(uint256 onChainGameId, uint256 amount);\n\n    /// @notice Error when server signature is invalid or doesn't match expected signer\n    error InvalidServerSignature();\n\n    // ===================\n    // Constructor\n    // ===================\n\n    /**\n     * @dev Constructor sets the contract owner and initial server signer address\n     */\n    constructor() Ownable() { // Initialize Ownable (owner defaults to deployer)\n        gameCounter = 1; // Start from 1 rather than 0 for easier identification\n        serverSignerAddress = msg.sender; // Default to deployer, should be updated\n        emit ServerSignerAddressUpdated(msg.sender);\n    }\n\n    // ===================\n    // External Functions\n    // ===================\n\n    /**\n     * @notice Creates a new game placeholder on-chain. Requires server signature.\n     * Only gameSeedHash is needed for provable fairness.\n     * @param preliminaryGameId The preliminary game ID generated by the backend\n     * @param gameSeedHash Hash of the actual game seed (used for listener correlation)\n     * @param algoVersion The algorithm version for provable fairness\n     * @param rows The array of tile counts per row\n     * @param serverSignature Signature from the server authorizing this game creation\n     */\n    function createGame(\n        string calldata preliminaryGameId,\n        bytes32 gameSeedHash,\n        string calldata algoVersion,\n        uint8[] calldata rows,\n        bytes calldata serverSignature\n    ) external payable {\n        // Use domain separation and abi.encode for signature\n        bytes32 messageHash = keccak256(\n            abi.encode(\n                \"DeathRaceGame:createGame\",\n                preliminaryGameId,\n                gameSeedHash,\n                algoVersion,\n                rows,\n                msg.sender,\n                msg.value\n            )\n        );\n        _verifyServerSignature(messageHash, serverSignature);\n\n        if (preliminaryToOnChainId[preliminaryGameId] != 0) {\n            revert GameAlreadyExists(preliminaryGameId);\n        }\n\n        uint256 onChainGameId = gameCounter;\n        gameCounter += 1;\n        preliminaryToOnChainId[preliminaryGameId] = onChainGameId;\n\n        // Create game struct with all metadata\n        games[onChainGameId] = Game({\n            player: msg.sender,\n            betAmount: msg.value,\n            gameSeedHash: gameSeedHash,\n            status: GameStatus.Active,\n            payoutAmount: 0,\n            selectedTiles: new uint8[](0),\n            gameSeed: \"\",\n            algoVersion: algoVersion,\n            rows: rows,\n            createdAt: block.timestamp\n        });\n\n        emit GameCreated(preliminaryGameId, onChainGameId, msg.sender, msg.value, gameSeedHash);\n    }\n\n    /**\n     * @notice Processes a cash out. Only callable by the server signer.\n     * @param onChainGameId The on-chain game ID.\n     * @param payoutAmount The NET amount to pay out.\n     * @param selectedTiles Array of selected tiles for verification.\n     * @param gameSeed The final game seed to store for provable fairness\n     */\n    function cashOut(\n        uint256 onChainGameId,\n        uint256 payoutAmount,\n        uint8[] calldata selectedTiles,\n        string calldata gameSeed // Add gameSeed parameter\n    ) external nonReentrant {\n        // Ensure only the designated server can call this function\n        require(msg.sender == serverSignerAddress, \"Only server can cash out\");\n\n        Game storage game = games[onChainGameId];\n        if (game.player == address(0)) {\n             revert GameDoesNotExist(onChainGameId);\n        }\n\n        // Check status - This prevents cashing out already Won/Lost games\n        if (game.status != GameStatus.Active) {\n            revert GameNotActive(onChainGameId);\n        }\n\n        require(payoutAmount > 0, \"PayoutZero\");\n        // Note: We trust the server signature implicitly guarantees the payoutAmount\n        // and selectedTiles correctness based on the game state known by the server.\n\n        address playerAddress = game.player; // Store player address\n\n        // --- EFFECTS (set state before external call) ---\n        game.status = GameStatus.Won;\n        game.payoutAmount = payoutAmount;\n        game.selectedTiles = selectedTiles;\n        game.gameSeed = gameSeed; // Store the game seed\n\n        // --- INTERACTION ---\n        (bool success, ) = payable(playerAddress).call{value: payoutAmount}(\"\");\n        if (!success) {\n            revert PayoutFailed(onChainGameId, payoutAmount);\n        }\n\n        emit GameStatusUpdated(onChainGameId, GameStatus.Won);\n        emit PayoutSent(onChainGameId, payoutAmount, playerAddress);\n    }\n\n    /**\n     * @notice Mark a game as lost. Only callable by the server signer.\n     * Stores the game seed for verification.\n     * @param onChainGameId The on-chain game ID\n     * @param selectedTiles Array of selected tiles for verification\n     * @param gameSeed The final game seed to store for provable fairness\n     */\n    function markGameAsLost(\n        uint256 onChainGameId,\n        uint8[] calldata selectedTiles,\n        string calldata gameSeed // Add gameSeed parameter\n    ) external {\n        // Ensure only the designated server can call this function\n        require(msg.sender == serverSignerAddress, \"Only server can mark game lost\");\n\n        Game storage game = games[onChainGameId];\n         if (game.player == address(0)) {\n             revert GameDoesNotExist(onChainGameId);\n         }\n\n        if (game.status != GameStatus.Active) {\n            revert GameNotActive(onChainGameId);\n        }\n\n        game.status = GameStatus.Lost;\n        game.selectedTiles = selectedTiles;\n        game.gameSeed = gameSeed; // Store the game seed\n\n        emit GameStatusUpdated(onChainGameId, GameStatus.Lost);\n    }\n\n    /**\n     * @notice Get details for a specific game\n     * @param onChainGameId The on-chain game ID\n     * @return Game struct with all game details\n     */\n    function getGameDetails(uint256 onChainGameId) external view returns (Game memory) {\n         if (games[onChainGameId].player == address(0)) { // Check if game actually exists\n             revert GameDoesNotExist(onChainGameId);\n         }\n        return games[onChainGameId];\n    }\n\n    /**\n     * @notice Get on-chain ID from preliminary ID\n     * @param preliminaryGameId The preliminary game ID\n     * @return onChainGameId The corresponding on-chain game ID (0 if not found)\n     */\n    function getOnChainGameId(string calldata preliminaryGameId) external view returns (uint256) {\n        return preliminaryToOnChainId[preliminaryGameId];\n    }\n\n    // ===================\n    // Admin Functions\n    // ===================\n\n    /**\n     * @notice Sets the address authorized to sign critical parameters.\n     * @param _newAddress The new server signer address.\n     */\n    function setServerSignerAddress(address _newAddress) external onlyOwner {\n        require(_newAddress != address(0), \"Invalid server address\");\n        serverSignerAddress = _newAddress;\n        emit ServerSignerAddressUpdated(_newAddress);\n    }\n\n    /**\n     * @notice Withdraw contract funds to a specified recipient. Only callable by the owner.\n     * Funds represent implicitly collected fees (Total Bets - Total Net Payouts).\n     * @param amount The amount to withdraw.\n     * @param recipient The address to send the withdrawn funds to.\n     */\n    function withdrawFunds(uint256 amount, address payable recipient) external onlyOwner nonReentrant {\n        require(amount > 0, \"Withdraw amount must be positive\");\n        require(recipient != address(0), \"Invalid recipient address\");\n        require(amount <= address(this).balance, \"Insufficient contract balance\");\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Withdrawal failed\");\n    }\n\n    /**\n     * @notice Receive function to accept direct Ether deposits into the treasury.\n     */\n    receive() external payable {\n        emit DepositReceived(msg.sender, msg.value);\n    }\n\n    // ===============================\n    // Internal Helper Functions\n    // ===============================\n\n    /**\n     * @dev Verifies that the provided signature for the given hash was generated by the serverSignerAddress.\n     * Reverts with InvalidServerSignature if verification fails.\n     * @param _hash The hash that was signed.\n     * @param _signature The signature bytes (expected length 65).\n     */\n    function _verifyServerSignature(bytes32 _hash, bytes calldata _signature) internal view {\n        if (serverSignerAddress == address(0)) {\n             revert InvalidServerSignature(); // Server address not set\n        }\n\n        // Use OpenZeppelin's ECDSA library for robust verification\n        // 1. Create the hash that is actually signed by signMessage (prefixed)\n        bytes32 prefixedHash = ECDSA.toEthSignedMessageHash(_hash);\n\n        // 2. Recover the signer address\n        address recoveredSigner = ECDSA.recover(prefixedHash, _signature);\n\n        // 3. Check if recovery was successful and matches the expected signer\n        if (recoveredSigner == address(0) || recoveredSigner != serverSignerAddress) {\n            revert InvalidServerSignature();\n        }\n    }\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"z","fallback_to_optimizing_for_size":true},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"detectMissingLibraries":false,"forceEVMLA":false,"enableEraVMExtensions":true,"codegen":"evmla","libraries":{}}},"output":{"version":"0.8.24","long_version":"0.8.24+commit.3a2587f6.Darwin.appleclang","zk_version":"1.5.12","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[207],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":208,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":207,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,207],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[],"usedEvents":[]}],"src":"112:3015:1"}},"@openzeppelin/contracts/utils/Context.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[207]},"id":208,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"126:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":207,"linearizedBaseContracts":[207],"name":"Context","nameLocation":"641:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":188,"nodeType":"Block","src":"717:34:2","statements":[{"expression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:2","memberName":"sender","nodeType":"MemberAccess","src":"734:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":184,"id":187,"nodeType":"Return","src":"727:17:2"}]},"id":189,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:2","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"674:2:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"708:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:2"},"scope":207,"src":"655:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":197,"nodeType":"Block","src":"824:32:2","statements":[{"expression":{"expression":{"id":194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:2","memberName":"data","nodeType":"MemberAccess","src":"841:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":193,"id":196,"nodeType":"Return","src":"834:15:2"}]},"id":198,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:2","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"774:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"808:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":191,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:2"},"scope":207,"src":"757:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":205,"nodeType":"Block","src":"934:25:2","statements":[{"expression":{"hexValue":"30","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"944:8:2"}]},"id":206,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:2","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"891:2:2"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"925:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:2"},"scope":207,"src":"862:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":208,"src":"623:338:2","usedErrors":[],"usedEvents":[]}],"src":"101:861:2"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1668],"SignedMath":[1773],"Strings":[436]},"id":437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":209,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":437,"sourceUnit":1669,"src":"126:25:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":437,"sourceUnit":1774,"src":"152:31:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"185:34:3","text":" @dev String operations."},"fullyImplemented":true,"id":436,"linearizedBaseContracts":[436],"name":"Strings","nameLocation":"228:7:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":215,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:3","nodeType":"VariableDeclaration","scope":436,"src":"242:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":213,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":218,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:3","nodeType":"VariableDeclaration","scope":436,"src":"302:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":216,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":265,"nodeType":"Block","src":"518:625:3","statements":[{"id":264,"nodeType":"UncheckedBlock","src":"528:609:3","statements":[{"assignments":[227],"declarations":[{"constant":false,"id":227,"mutability":"mutable","name":"length","nameLocation":"560:6:3","nodeType":"VariableDeclaration","scope":264,"src":"552:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":234,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"580:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":228,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"569:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1668_$","typeString":"type(library Math)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:3","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"569:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:3"},{"assignments":[236],"declarations":[{"constant":false,"id":236,"mutability":"mutable","name":"buffer","nameLocation":"618:6:3","nodeType":"VariableDeclaration","scope":264,"src":"604:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":235,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":241,"initialValue":{"arguments":[{"id":239,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"638:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":237,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:3"},{"assignments":[243],"declarations":[{"constant":false,"id":243,"mutability":"mutable","name":"ptr","nameLocation":"667:3:3","nodeType":"VariableDeclaration","scope":264,"src":"659:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":244,"nodeType":"VariableDeclarationStatement","src":"659:11:3"},{"AST":{"nativeSrc":"740:67:3","nodeType":"YulBlock","src":"740:67:3","statements":[{"nativeSrc":"758:35:3","nodeType":"YulAssignment","src":"758:35:3","value":{"arguments":[{"name":"buffer","nativeSrc":"769:6:3","nodeType":"YulIdentifier","src":"769:6:3"},{"arguments":[{"kind":"number","nativeSrc":"781:2:3","nodeType":"YulLiteral","src":"781:2:3","type":"","value":"32"},{"name":"length","nativeSrc":"785:6:3","nodeType":"YulIdentifier","src":"785:6:3"}],"functionName":{"name":"add","nativeSrc":"777:3:3","nodeType":"YulIdentifier","src":"777:3:3"},"nativeSrc":"777:15:3","nodeType":"YulFunctionCall","src":"777:15:3"}],"functionName":{"name":"add","nativeSrc":"765:3:3","nodeType":"YulIdentifier","src":"765:3:3"},"nativeSrc":"765:28:3","nodeType":"YulFunctionCall","src":"765:28:3"},"variableNames":[{"name":"ptr","nativeSrc":"758:3:3","nodeType":"YulIdentifier","src":"758:3:3"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":236,"isOffset":false,"isSlot":false,"src":"769:6:3","valueSize":1},{"declaration":227,"isOffset":false,"isSlot":false,"src":"785:6:3","valueSize":1},{"declaration":243,"isOffset":false,"isSlot":false,"src":"758:3:3","valueSize":1}],"id":245,"nodeType":"InlineAssembly","src":"731:76:3"},{"body":{"id":260,"nodeType":"Block","src":"833:267:3","statements":[{"expression":{"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:3","subExpression":{"id":247,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"851:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":249,"nodeType":"ExpressionStatement","src":"851:5:3"},{"AST":{"nativeSrc":"934:84:3","nodeType":"YulBlock","src":"934:84:3","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"964:3:3","nodeType":"YulIdentifier","src":"964:3:3"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"978:5:3","nodeType":"YulIdentifier","src":"978:5:3"},{"kind":"number","nativeSrc":"985:2:3","nodeType":"YulLiteral","src":"985:2:3","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"974:3:3","nodeType":"YulIdentifier","src":"974:3:3"},"nativeSrc":"974:14:3","nodeType":"YulFunctionCall","src":"974:14:3"},{"name":"_SYMBOLS","nativeSrc":"990:8:3","nodeType":"YulIdentifier","src":"990:8:3"}],"functionName":{"name":"byte","nativeSrc":"969:4:3","nodeType":"YulIdentifier","src":"969:4:3"},"nativeSrc":"969:30:3","nodeType":"YulFunctionCall","src":"969:30:3"}],"functionName":{"name":"mstore8","nativeSrc":"956:7:3","nodeType":"YulIdentifier","src":"956:7:3"},"nativeSrc":"956:44:3","nodeType":"YulFunctionCall","src":"956:44:3"},"nativeSrc":"956:44:3","nodeType":"YulExpressionStatement","src":"956:44:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":215,"isOffset":false,"isSlot":false,"src":"990:8:3","valueSize":1},{"declaration":243,"isOffset":false,"isSlot":false,"src":"964:3:3","valueSize":1},{"declaration":221,"isOffset":false,"isSlot":false,"src":"978:5:3","valueSize":1}],"id":250,"nodeType":"InlineAssembly","src":"925:93:3"},{"expression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1035:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":254,"nodeType":"ExpressionStatement","src":"1035:11:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1068:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":259,"nodeType":"IfStatement","src":"1064:21:3","trueBody":{"id":258,"nodeType":"Break","src":"1080:5:3"}}]},"condition":{"hexValue":"74727565","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":261,"nodeType":"WhileStatement","src":"820:280:3"},{"expression":{"id":262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"1120:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":225,"id":263,"nodeType":"Return","src":"1113:13:3"}]}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"352:90:3","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:3","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"473:5:3","nodeType":"VariableDeclaration","scope":266,"src":"465:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:3"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":266,"src":"503:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":223,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:3"},"scope":436,"src":"447:696:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"1313:103:3","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1354:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:3","trueExpression":{"hexValue":"2d","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1400:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":285,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1385:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1773_$","typeString":"type(library SignedMath)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:3","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"1385:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":284,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[266,294],"referencedDeclaration":266,"src":"1376:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":276,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":274,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:3","typeDescriptions":{}}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":273,"id":292,"nodeType":"Return","src":"1323:86:3"}]},"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1149:89:3","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:3","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"value","nameLocation":"1268:5:3","nodeType":"VariableDeclaration","scope":294,"src":"1261:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":268,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:3"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"1298:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":271,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:3"},"scope":436,"src":"1243:173:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"1595:100:3","statements":[{"id":312,"nodeType":"UncheckedBlock","src":"1605:84:3","statements":[{"expression":{"arguments":[{"id":303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1648:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"1667:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":304,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1655:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1668_$","typeString":"type(library Math)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:3","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1628,"src":"1655:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":302,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[314,390,410],"referencedDeclaration":390,"src":"1636:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":301,"id":311,"nodeType":"Return","src":"1629:49:3"}]}]},"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"1422:94:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:3","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"value","nameLocation":"1550:5:3","nodeType":"VariableDeclaration","scope":314,"src":"1542:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:3"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"1580:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":299,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:3"},"scope":436,"src":"1521:174:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":389,"nodeType":"Block","src":"1908:347:3","statements":[{"assignments":[325],"declarations":[{"constant":false,"id":325,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:3","nodeType":"VariableDeclaration","scope":389,"src":"1918:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":324,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":334,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":329,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1954:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":326,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:3"},{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":335,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"1975:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":337,"indexExpression":{"hexValue":"30","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":340,"nodeType":"ExpressionStatement","src":"1975:15:3"},{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":341,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"2000:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":343,"indexExpression":{"hexValue":"31","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":346,"nodeType":"ExpressionStatement","src":"2000:15:3"},{"body":{"id":375,"nodeType":"Block","src":"2070:83:3","statements":[{"expression":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":361,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"2084:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":363,"indexExpression":{"id":362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2091:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":364,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2096:8:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":368,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2105:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":370,"nodeType":"ExpressionStatement","src":"2084:33:3"},{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2131:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":374,"nodeType":"ExpressionStatement","src":"2131:11:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2058:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":376,"initializationExpression":{"assignments":[348],"declarations":[{"constant":false,"id":348,"mutability":"mutable","name":"i","nameLocation":"2038:1:3","nodeType":"VariableDeclaration","scope":376,"src":"2030:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":354,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":350,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2046:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:3"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:3","subExpression":{"id":358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2067:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":360,"nodeType":"ExpressionStatement","src":"2065:3:3"},"nodeType":"ForStatement","src":"2025:128:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2170:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"2162:55:3"},{"expression":{"arguments":[{"id":386,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"2241:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":384,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:3","typeDescriptions":{}}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":323,"id":388,"nodeType":"Return","src":"2227:21:3"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"1701:112:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":390,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:3","nodeType":"FunctionDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"value","nameLocation":"1847:5:3","nodeType":"VariableDeclaration","scope":390,"src":"1839:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"length","nameLocation":"1862:6:3","nodeType":"VariableDeclaration","scope":390,"src":"1854:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:3"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"1893:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:3"},"scope":436,"src":"1818:437:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"2480:76:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":403,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2525:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":401,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:3","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:3","typeDescriptions":{}}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":406,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2533:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":398,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[314,390,410],"referencedDeclaration":390,"src":"2497:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":397,"id":408,"nodeType":"Return","src":"2490:59:3"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"2261:141:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":410,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:3","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"addr","nameLocation":"2436:4:3","nodeType":"VariableDeclaration","scope":410,"src":"2428:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:3"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"2465:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:3"},"scope":436,"src":"2407:149:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":434,"nodeType":"Block","src":"2711:66:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":423,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2744:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":421,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:3","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":420,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2767:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":427,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:3","typeDescriptions":{}}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":426,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":419,"id":433,"nodeType":"Return","src":"2721:49:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"2562:66:3","text":" @dev Returns true if the two strings are equal."},"id":435,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"a","nameLocation":"2662:1:3","nodeType":"VariableDeclaration","scope":435,"src":"2648:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":412,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"b","nameLocation":"2679:1:3","nodeType":"VariableDeclaration","scope":435,"src":"2665:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":414,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2705:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:3"},"scope":436,"src":"2633:144:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":437,"src":"220:2559:3","usedErrors":[],"usedEvents":[]}],"src":"101:2679:3"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[802],"Math":[1668],"SignedMath":[1773],"Strings":[436]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":438,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":437,"src":"137:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"163:205:4","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":802,"linearizedBaseContracts":[802],"name":"ECDSA","nameLocation":"377:5:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":446,"members":[{"id":441,"name":"NoError","nameLocation":"417:7:4","nodeType":"EnumValue","src":"417:7:4"},{"id":442,"name":"InvalidSignature","nameLocation":"434:16:4","nodeType":"EnumValue","src":"434:16:4"},{"id":443,"name":"InvalidSignatureLength","nameLocation":"460:22:4","nodeType":"EnumValue","src":"460:22:4"},{"id":444,"name":"InvalidSignatureS","nameLocation":"492:17:4","nodeType":"EnumValue","src":"492:17:4"},{"id":445,"name":"InvalidSignatureV","nameLocation":"519:17:4","nodeType":"EnumValue","src":"519:17:4"}],"name":"RecoverError","nameLocation":"394:12:4","nodeType":"EnumDefinition","src":"389:175:4"},{"body":{"id":489,"nodeType":"Block","src":"624:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":452,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"638:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":453,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"647:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:4","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":441,"src":"647:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"734:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":459,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"743:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:4","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":442,"src":"743:29:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"843:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":468,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"852:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:4","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":443,"src":"852:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":476,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"965:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":477,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"974:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:4","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":444,"src":"974:30:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":485,"nodeType":"IfStatement","src":"961:114:4","trueBody":{"id":484,"nodeType":"Block","src":"1006:69:4","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":480,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"1020:44:4"}]}},"id":486,"nodeType":"IfStatement","src":"839:236:4","trueBody":{"id":475,"nodeType":"Block","src":"889:66:4","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":471,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"903:41:4"}]}},"id":487,"nodeType":"IfStatement","src":"730:345:4","trueBody":{"id":466,"nodeType":"Block","src":"774:59:4","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":462,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"788:34:4"}]}},"id":488,"nodeType":"IfStatement","src":"634:441:4","trueBody":{"id":457,"nodeType":"Block","src":"669:55:4","statements":[{"functionReturnParameters":451,"id":456,"nodeType":"Return","src":"683:7:4"}]}}]},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:4","nodeType":"FunctionDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"error","nameLocation":"604:5:4","nodeType":"VariableDeclaration","scope":490,"src":"591:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":448,"nodeType":"UserDefinedTypeName","pathNode":{"id":447,"name":"RecoverError","nameLocations":["591:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"591:12:4"},"referencedDeclaration":446,"src":"591:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:4"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"624:0:4"},"scope":802,"src":"570:511:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":535,"nodeType":"Block","src":"2249:626:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":503,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2263:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:4","memberName":"length","nodeType":"MemberAccess","src":"2263:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":533,"nodeType":"Block","src":"2788:81:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:4","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":529,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"2822:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:4","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":443,"src":"2822:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"id":531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":502,"id":532,"nodeType":"Return","src":"2802:56:4"}]},"id":534,"nodeType":"IfStatement","src":"2259:610:4","trueBody":{"id":524,"nodeType":"Block","src":"2287:495:4","statements":[{"assignments":[508],"declarations":[{"constant":false,"id":508,"mutability":"mutable","name":"r","nameLocation":"2309:1:4","nodeType":"VariableDeclaration","scope":524,"src":"2301:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":509,"nodeType":"VariableDeclarationStatement","src":"2301:9:4"},{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"s","nameLocation":"2332:1:4","nodeType":"VariableDeclaration","scope":524,"src":"2324:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":512,"nodeType":"VariableDeclarationStatement","src":"2324:9:4"},{"assignments":[514],"declarations":[{"constant":false,"id":514,"mutability":"mutable","name":"v","nameLocation":"2353:1:4","nodeType":"VariableDeclaration","scope":524,"src":"2347:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":513,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":515,"nodeType":"VariableDeclarationStatement","src":"2347:7:4"},{"AST":{"nativeSrc":"2555:171:4","nodeType":"YulBlock","src":"2555:171:4","statements":[{"nativeSrc":"2573:32:4","nodeType":"YulAssignment","src":"2573:32:4","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2588:9:4","nodeType":"YulIdentifier","src":"2588:9:4"},{"kind":"number","nativeSrc":"2599:4:4","nodeType":"YulLiteral","src":"2599:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2584:3:4","nodeType":"YulIdentifier","src":"2584:3:4"},"nativeSrc":"2584:20:4","nodeType":"YulFunctionCall","src":"2584:20:4"}],"functionName":{"name":"mload","nativeSrc":"2578:5:4","nodeType":"YulIdentifier","src":"2578:5:4"},"nativeSrc":"2578:27:4","nodeType":"YulFunctionCall","src":"2578:27:4"},"variableNames":[{"name":"r","nativeSrc":"2573:1:4","nodeType":"YulIdentifier","src":"2573:1:4"}]},{"nativeSrc":"2622:32:4","nodeType":"YulAssignment","src":"2622:32:4","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2637:9:4","nodeType":"YulIdentifier","src":"2637:9:4"},{"kind":"number","nativeSrc":"2648:4:4","nodeType":"YulLiteral","src":"2648:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2633:3:4","nodeType":"YulIdentifier","src":"2633:3:4"},"nativeSrc":"2633:20:4","nodeType":"YulFunctionCall","src":"2633:20:4"}],"functionName":{"name":"mload","nativeSrc":"2627:5:4","nodeType":"YulIdentifier","src":"2627:5:4"},"nativeSrc":"2627:27:4","nodeType":"YulFunctionCall","src":"2627:27:4"},"variableNames":[{"name":"s","nativeSrc":"2622:1:4","nodeType":"YulIdentifier","src":"2622:1:4"}]},{"nativeSrc":"2671:41:4","nodeType":"YulAssignment","src":"2671:41:4","value":{"arguments":[{"kind":"number","nativeSrc":"2681:1:4","nodeType":"YulLiteral","src":"2681:1:4","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2694:9:4","nodeType":"YulIdentifier","src":"2694:9:4"},{"kind":"number","nativeSrc":"2705:4:4","nodeType":"YulLiteral","src":"2705:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2690:3:4","nodeType":"YulIdentifier","src":"2690:3:4"},"nativeSrc":"2690:20:4","nodeType":"YulFunctionCall","src":"2690:20:4"}],"functionName":{"name":"mload","nativeSrc":"2684:5:4","nodeType":"YulIdentifier","src":"2684:5:4"},"nativeSrc":"2684:27:4","nodeType":"YulFunctionCall","src":"2684:27:4"}],"functionName":{"name":"byte","nativeSrc":"2676:4:4","nodeType":"YulIdentifier","src":"2676:4:4"},"nativeSrc":"2676:36:4","nodeType":"YulFunctionCall","src":"2676:36:4"},"variableNames":[{"name":"v","nativeSrc":"2671:1:4","nodeType":"YulIdentifier","src":"2671:1:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":508,"isOffset":false,"isSlot":false,"src":"2573:1:4","valueSize":1},{"declaration":511,"isOffset":false,"isSlot":false,"src":"2622:1:4","valueSize":1},{"declaration":495,"isOffset":false,"isSlot":false,"src":"2588:9:4","valueSize":1},{"declaration":495,"isOffset":false,"isSlot":false,"src":"2637:9:4","valueSize":1},{"declaration":495,"isOffset":false,"isSlot":false,"src":"2694:9:4","valueSize":1},{"declaration":514,"isOffset":false,"isSlot":false,"src":"2671:1:4","valueSize":1}],"id":516,"nodeType":"InlineAssembly","src":"2546:180:4"},{"expression":{"arguments":[{"id":518,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2757:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":519,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2763:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":520,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"2766:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":521,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"2769:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":517,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[536,610,704],"referencedDeclaration":704,"src":"2746:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":502,"id":523,"nodeType":"Return","src":"2739:32:4"}]}}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"1087:1053:4","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":536,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:4","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"hash","nameLocation":"2173:4:4","nodeType":"VariableDeclaration","scope":536,"src":"2165:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"signature","nameLocation":"2192:9:4","nodeType":"VariableDeclaration","scope":536,"src":"2179:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:4"},"returnParameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":536,"src":"2226:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":536,"src":"2235:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":500,"nodeType":"UserDefinedTypeName","pathNode":{"id":499,"name":"RecoverError","nameLocations":["2235:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"2235:12:4"},"referencedDeclaration":446,"src":"2235:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:4"},"scope":802,"src":"2145:730:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"3748:140:4","statements":[{"assignments":[547,550],"declarations":[{"constant":false,"id":547,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:4","nodeType":"VariableDeclaration","scope":562,"src":"3759:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"error","nameLocation":"3791:5:4","nodeType":"VariableDeclaration","scope":562,"src":"3778:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":549,"nodeType":"UserDefinedTypeName","pathNode":{"id":548,"name":"RecoverError","nameLocations":["3778:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"3778:12:4"},"referencedDeclaration":446,"src":"3778:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[{"id":552,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3811:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":553,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3817:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":551,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[536,610,704],"referencedDeclaration":536,"src":"3800:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:4"},{"expression":{"arguments":[{"id":557,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3849:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}],"id":556,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3837:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$446_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"3837:18:4"},{"expression":{"id":560,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"3872:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":545,"id":561,"nodeType":"Return","src":"3865:16:4"}]},"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"2881:775:4","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:4","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"hash","nameLocation":"3686:4:4","nodeType":"VariableDeclaration","scope":563,"src":"3678:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"signature","nameLocation":"3705:9:4","nodeType":"VariableDeclaration","scope":563,"src":"3692:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:4"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"3739:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:4"},"scope":802,"src":"3661:227:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"4245:203:4","statements":[{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"s","nameLocation":"4263:1:4","nodeType":"VariableDeclaration","scope":609,"src":"4255:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":586,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4267:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:4","typeDescriptions":{}}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:4"},{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"v","nameLocation":"4363:1:4","nodeType":"VariableDeclaration","scope":609,"src":"4357:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":587,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":601,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":593,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4382:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:4","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:4","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":589,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:4","typeDescriptions":{}}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:4"},{"expression":{"arguments":[{"id":603,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4427:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":604,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"4433:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":605,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4436:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":606,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4439:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":602,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[536,610,704],"referencedDeclaration":704,"src":"4416:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":577,"id":608,"nodeType":"Return","src":"4409:32:4"}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"3894:243:4","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":610,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:4","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"hash","nameLocation":"4170:4:4","nodeType":"VariableDeclaration","scope":610,"src":"4162:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"r","nameLocation":"4184:1:4","nodeType":"VariableDeclaration","scope":610,"src":"4176:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"vs","nameLocation":"4195:2:4","nodeType":"VariableDeclaration","scope":610,"src":"4187:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:4"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"4222:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"4231:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":575,"nodeType":"UserDefinedTypeName","pathNode":{"id":574,"name":"RecoverError","nameLocations":["4231:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"4231:12:4"},"referencedDeclaration":446,"src":"4231:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:4"},"scope":802,"src":"4142:306:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":639,"nodeType":"Block","src":"4699:136:4","statements":[{"assignments":[623,626],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:4","nodeType":"VariableDeclaration","scope":639,"src":"4710:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"error","nameLocation":"4742:5:4","nodeType":"VariableDeclaration","scope":639,"src":"4729:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":625,"nodeType":"UserDefinedTypeName","pathNode":{"id":624,"name":"RecoverError","nameLocations":["4729:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"4729:12:4"},"referencedDeclaration":446,"src":"4729:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":632,"initialValue":{"arguments":[{"id":628,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"4762:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":629,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4768:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":630,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4771:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":627,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[536,610,704],"referencedDeclaration":610,"src":"4751:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:4"},{"expression":{"arguments":[{"id":634,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4796:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}],"id":633,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4784:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$446_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"4784:18:4"},{"expression":{"id":637,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"4819:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":621,"id":638,"nodeType":"Return","src":"4812:16:4"}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"4454:154:4","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:4","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"hash","nameLocation":"4638:4:4","nodeType":"VariableDeclaration","scope":640,"src":"4630:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"r","nameLocation":"4652:1:4","nodeType":"VariableDeclaration","scope":640,"src":"4644:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"vs","nameLocation":"4663:2:4","nodeType":"VariableDeclaration","scope":640,"src":"4655:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:4"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"4690:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:4"},"scope":802,"src":"4613:222:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"5120:1345:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":659,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6016:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:4","typeDescriptions":{}}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":672,"nodeType":"IfStatement","src":"6004:161:4","trueBody":{"id":671,"nodeType":"Block","src":"6089:76:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:4","typeDescriptions":{}}},"id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":667,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6123:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:4","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":444,"src":"6123:30:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"id":669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":656,"id":670,"nodeType":"Return","src":"6103:51:4"}]}},{"assignments":[674],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"signer","nameLocation":"6267:6:4","nodeType":"VariableDeclaration","scope":703,"src":"6259:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":681,"initialValue":{"arguments":[{"id":676,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6286:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":677,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6292:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":678,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"6295:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":679,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6298:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":675,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:4","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":682,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6314:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:4","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":697,"nodeType":"IfStatement","src":"6310:101:4","trueBody":{"id":696,"nodeType":"Block","src":"6336:75:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:4","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":692,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6370:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:4","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":442,"src":"6370:29:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"id":694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":656,"id":695,"nodeType":"Return","src":"6350:50:4"}]}},{"expression":{"components":[{"id":698,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"6429:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":699,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6437:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$446_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:4","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":441,"src":"6437:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"id":701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":656,"id":702,"nodeType":"Return","src":"6421:37:4"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"4841:163:4","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:4","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"hash","nameLocation":"5037:4:4","nodeType":"VariableDeclaration","scope":704,"src":"5029:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"v","nameLocation":"5049:1:4","nodeType":"VariableDeclaration","scope":704,"src":"5043:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":644,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"r","nameLocation":"5060:1:4","nodeType":"VariableDeclaration","scope":704,"src":"5052:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"s","nameLocation":"5071:1:4","nodeType":"VariableDeclaration","scope":704,"src":"5063:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:4"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"5097:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"5106:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"RecoverError","nameLocations":["5106:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"5106:12:4"},"referencedDeclaration":446,"src":"5106:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:4"},"scope":802,"src":"5009:1456:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"6692:138:4","statements":[{"assignments":[719,722],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:4","nodeType":"VariableDeclaration","scope":736,"src":"6703:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"error","nameLocation":"6735:5:4","nodeType":"VariableDeclaration","scope":736,"src":"6722:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"RecoverError","nameLocations":["6722:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":446,"src":"6722:12:4"},"referencedDeclaration":446,"src":"6722:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"id":724,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6755:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":725,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6761:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":726,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"6764:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":727,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"6767:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":723,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[536,610,704],"referencedDeclaration":704,"src":"6744:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$446_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:4"},{"expression":{"arguments":[{"id":731,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"6791:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$446","typeString":"enum ECDSA.RecoverError"}],"id":730,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6779:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$446_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"ExpressionStatement","src":"6779:18:4"},{"expression":{"id":734,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6814:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":717,"id":735,"nodeType":"Return","src":"6807:16:4"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"6471:122:4","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"hash","nameLocation":"6623:4:4","nodeType":"VariableDeclaration","scope":737,"src":"6615:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"v","nameLocation":"6635:1:4","nodeType":"VariableDeclaration","scope":737,"src":"6629:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":708,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"r","nameLocation":"6646:1:4","nodeType":"VariableDeclaration","scope":737,"src":"6638:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"s","nameLocation":"6657:1:4","nodeType":"VariableDeclaration","scope":737,"src":"6649:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":737,"src":"6683:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:4"},"scope":802,"src":"6598:232:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"7206:310:4","statements":[{"AST":{"nativeSrc":"7362:148:4","nodeType":"YulBlock","src":"7362:148:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7383:4:4","nodeType":"YulLiteral","src":"7383:4:4","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"7389:34:4","nodeType":"YulLiteral","src":"7389:34:4","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"7376:6:4","nodeType":"YulIdentifier","src":"7376:6:4"},"nativeSrc":"7376:48:4","nodeType":"YulFunctionCall","src":"7376:48:4"},"nativeSrc":"7376:48:4","nodeType":"YulExpressionStatement","src":"7376:48:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7444:4:4","nodeType":"YulLiteral","src":"7444:4:4","type":"","value":"0x1c"},{"name":"hash","nativeSrc":"7450:4:4","nodeType":"YulIdentifier","src":"7450:4:4"}],"functionName":{"name":"mstore","nativeSrc":"7437:6:4","nodeType":"YulIdentifier","src":"7437:6:4"},"nativeSrc":"7437:18:4","nodeType":"YulFunctionCall","src":"7437:18:4"},"nativeSrc":"7437:18:4","nodeType":"YulExpressionStatement","src":"7437:18:4"},{"nativeSrc":"7468:32:4","nodeType":"YulAssignment","src":"7468:32:4","value":{"arguments":[{"kind":"number","nativeSrc":"7489:4:4","nodeType":"YulLiteral","src":"7489:4:4","type":"","value":"0x00"},{"kind":"number","nativeSrc":"7495:4:4","nodeType":"YulLiteral","src":"7495:4:4","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"7479:9:4","nodeType":"YulIdentifier","src":"7479:9:4"},"nativeSrc":"7479:21:4","nodeType":"YulFunctionCall","src":"7479:21:4"},"variableNames":[{"name":"message","nativeSrc":"7468:7:4","nodeType":"YulIdentifier","src":"7468:7:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":740,"isOffset":false,"isSlot":false,"src":"7450:4:4","valueSize":1},{"declaration":743,"isOffset":false,"isSlot":false,"src":"7468:7:4","valueSize":1}],"id":745,"nodeType":"InlineAssembly","src":"7353:157:4"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"6836:279:4","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:4","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"hash","nameLocation":"7160:4:4","nodeType":"VariableDeclaration","scope":747,"src":"7152:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:4"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"message","nameLocation":"7197:7:4","nodeType":"VariableDeclaration","scope":747,"src":"7189:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:4"},"scope":802,"src":"7120:396:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":768,"nodeType":"Block","src":"7881:116:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":761,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7976:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:4","memberName":"length","nodeType":"MemberAccess","src":"7976:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":759,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"7959:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$436_$","typeString":"type(library Strings)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:4","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":266,"src":"7959:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":764,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7987:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":756,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":755,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":754,"id":767,"nodeType":"Return","src":"7891:99:4"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"7522:274:4","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":769,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:4","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"s","nameLocation":"7846:1:4","nodeType":"VariableDeclaration","scope":769,"src":"7833:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:4"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":769,"src":"7872:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:4"},"scope":802,"src":"7801:196:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":780,"nodeType":"Block","src":"8443:290:4","statements":[{"AST":{"nativeSrc":"8505:222:4","nodeType":"YulBlock","src":"8505:222:4","statements":[{"nativeSrc":"8519:22:4","nodeType":"YulVariableDeclaration","src":"8519:22:4","value":{"arguments":[{"kind":"number","nativeSrc":"8536:4:4","nodeType":"YulLiteral","src":"8536:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8530:5:4","nodeType":"YulIdentifier","src":"8530:5:4"},"nativeSrc":"8530:11:4","nodeType":"YulFunctionCall","src":"8530:11:4"},"variables":[{"name":"ptr","nativeSrc":"8523:3:4","nodeType":"YulTypedName","src":"8523:3:4","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8561:3:4","nodeType":"YulIdentifier","src":"8561:3:4"},{"hexValue":"1901","kind":"string","nativeSrc":"8566:10:4","nodeType":"YulLiteral","src":"8566:10:4","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"8554:6:4","nodeType":"YulIdentifier","src":"8554:6:4"},"nativeSrc":"8554:23:4","nodeType":"YulFunctionCall","src":"8554:23:4"},"nativeSrc":"8554:23:4","nodeType":"YulExpressionStatement","src":"8554:23:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8601:3:4","nodeType":"YulIdentifier","src":"8601:3:4"},{"kind":"number","nativeSrc":"8606:4:4","nodeType":"YulLiteral","src":"8606:4:4","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"8597:3:4","nodeType":"YulIdentifier","src":"8597:3:4"},"nativeSrc":"8597:14:4","nodeType":"YulFunctionCall","src":"8597:14:4"},{"name":"domainSeparator","nativeSrc":"8613:15:4","nodeType":"YulIdentifier","src":"8613:15:4"}],"functionName":{"name":"mstore","nativeSrc":"8590:6:4","nodeType":"YulIdentifier","src":"8590:6:4"},"nativeSrc":"8590:39:4","nodeType":"YulFunctionCall","src":"8590:39:4"},"nativeSrc":"8590:39:4","nodeType":"YulExpressionStatement","src":"8590:39:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8653:3:4","nodeType":"YulIdentifier","src":"8653:3:4"},{"kind":"number","nativeSrc":"8658:4:4","nodeType":"YulLiteral","src":"8658:4:4","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"8649:3:4","nodeType":"YulIdentifier","src":"8649:3:4"},"nativeSrc":"8649:14:4","nodeType":"YulFunctionCall","src":"8649:14:4"},{"name":"structHash","nativeSrc":"8665:10:4","nodeType":"YulIdentifier","src":"8665:10:4"}],"functionName":{"name":"mstore","nativeSrc":"8642:6:4","nodeType":"YulIdentifier","src":"8642:6:4"},"nativeSrc":"8642:34:4","nodeType":"YulFunctionCall","src":"8642:34:4"},"nativeSrc":"8642:34:4","nodeType":"YulExpressionStatement","src":"8642:34:4"},{"nativeSrc":"8689:28:4","nodeType":"YulAssignment","src":"8689:28:4","value":{"arguments":[{"name":"ptr","nativeSrc":"8707:3:4","nodeType":"YulIdentifier","src":"8707:3:4"},{"kind":"number","nativeSrc":"8712:4:4","nodeType":"YulLiteral","src":"8712:4:4","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"8697:9:4","nodeType":"YulIdentifier","src":"8697:9:4"},"nativeSrc":"8697:20:4","nodeType":"YulFunctionCall","src":"8697:20:4"},"variableNames":[{"name":"data","nativeSrc":"8689:4:4","nodeType":"YulIdentifier","src":"8689:4:4"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":777,"isOffset":false,"isSlot":false,"src":"8689:4:4","valueSize":1},{"declaration":772,"isOffset":false,"isSlot":false,"src":"8613:15:4","valueSize":1},{"declaration":774,"isOffset":false,"isSlot":false,"src":"8665:10:4","valueSize":1}],"id":779,"nodeType":"InlineAssembly","src":"8496:231:4"}]},"documentation":{"id":770,"nodeType":"StructuredDocumentation","src":"8003:328:4","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":781,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:4","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:4","nodeType":"VariableDeclaration","scope":781,"src":"8361:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:4","nodeType":"VariableDeclaration","scope":781,"src":"8386:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:4"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"data","nameLocation":"8437:4:4","nodeType":"VariableDeclaration","scope":781,"src":"8429:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:4"},"scope":802,"src":"8336:397:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"9048:80:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":795,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"9104:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"9115:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":792,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":790,"id":799,"nodeType":"Return","src":"9058:63:4"}]},"documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"8739:193:4","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:4","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"validator","nameLocation":"8986:9:4","nodeType":"VariableDeclaration","scope":801,"src":"8978:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"data","nameLocation":"9010:4:4","nodeType":"VariableDeclaration","scope":801,"src":"8997:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:4"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"9039:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:4"},"scope":802,"src":"8937:191:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":803,"src":"369:8761:4","usedErrors":[],"usedEvents":[]}],"src":"112:9019:4"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1668]},"id":1669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"128:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1668,"linearizedBaseContracts":[1668],"name":"Math","nameLocation":"210:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":809,"members":[{"id":806,"name":"Down","nameLocation":"245:4:5","nodeType":"EnumValue","src":"245:4:5"},{"id":807,"name":"Up","nameLocation":"287:2:5","nodeType":"EnumValue","src":"287:2:5"},{"id":808,"name":"Zero","nameLocation":"318:4:5","nodeType":"EnumValue","src":"318:4:5"}],"name":"Rounding","nameLocation":"226:8:5","nodeType":"EnumDefinition","src":"221:122:5"},{"body":{"id":826,"nodeType":"Block","src":"480:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"497:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"501:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":823,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"509:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:5","trueExpression":{"id":822,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"505:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":818,"id":825,"nodeType":"Return","src":"490:20:5"}]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"349:59:5","text":" @dev Returns the largest of two numbers."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:5","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"a","nameLocation":"434:1:5","nodeType":"VariableDeclaration","scope":827,"src":"426:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"b","nameLocation":"445:1:5","nodeType":"VariableDeclaration","scope":827,"src":"437:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:5"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"471:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:5"},"scope":1668,"src":"413:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"655:37:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"672:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":838,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"676:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":841,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:5","trueExpression":{"id":840,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"680:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":843,"nodeType":"Return","src":"665:20:5"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"523:60:5","text":" @dev Returns the smallest of two numbers."},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:5","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"a","nameLocation":"609:1:5","nodeType":"VariableDeclaration","scope":845,"src":"601:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"b","nameLocation":"620:1:5","nodeType":"VariableDeclaration","scope":845,"src":"612:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:5"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"646:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:5"},"scope":1668,"src":"588:104:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":867,"nodeType":"Block","src":"876:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"931:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"935:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"941:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"945:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":854,"id":866,"nodeType":"Return","src":"923:28:5"}]},"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"698:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":868,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:5","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"a","nameLocation":"830:1:5","nodeType":"VariableDeclaration","scope":868,"src":"822:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"b","nameLocation":"841:1:5","nodeType":"VariableDeclaration","scope":868,"src":"833:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:5"},"returnParameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":868,"src":"867:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:5"},"scope":1668,"src":"805:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"1228:123:5","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1316:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"1330:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":886,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"1339:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:5","trueExpression":{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":877,"id":891,"nodeType":"Return","src":"1309:35:5"}]},"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"964:188:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:5","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":871,"mutability":"mutable","name":"a","nameLocation":"1182:1:5","nodeType":"VariableDeclaration","scope":893,"src":"1174:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"b","nameLocation":"1193:1:5","nodeType":"VariableDeclaration","scope":893,"src":"1185:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:5"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":893,"src":"1219:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:5"},"scope":1668,"src":"1157:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1015,"nodeType":"Block","src":"1765:4115:5","statements":[{"id":1014,"nodeType":"UncheckedBlock","src":"1775:4099:5","statements":[{"assignments":[906],"declarations":[{"constant":false,"id":906,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:5","nodeType":"VariableDeclaration","scope":1014,"src":"2096:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":907,"nodeType":"VariableDeclarationStatement","src":"2096:13:5"},{"assignments":[909],"declarations":[{"constant":false,"id":909,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:5","nodeType":"VariableDeclaration","scope":1014,"src":"2168:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":910,"nodeType":"VariableDeclarationStatement","src":"2168:13:5"},{"AST":{"nativeSrc":"2248:157:5","nodeType":"YulBlock","src":"2248:157:5","statements":[{"nativeSrc":"2266:30:5","nodeType":"YulVariableDeclaration","src":"2266:30:5","value":{"arguments":[{"name":"x","nativeSrc":"2283:1:5","nodeType":"YulIdentifier","src":"2283:1:5"},{"name":"y","nativeSrc":"2286:1:5","nodeType":"YulIdentifier","src":"2286:1:5"},{"arguments":[{"kind":"number","nativeSrc":"2293:1:5","nodeType":"YulLiteral","src":"2293:1:5","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2289:3:5","nodeType":"YulIdentifier","src":"2289:3:5"},"nativeSrc":"2289:6:5","nodeType":"YulFunctionCall","src":"2289:6:5"}],"functionName":{"name":"mulmod","nativeSrc":"2276:6:5","nodeType":"YulIdentifier","src":"2276:6:5"},"nativeSrc":"2276:20:5","nodeType":"YulFunctionCall","src":"2276:20:5"},"variables":[{"name":"mm","nativeSrc":"2270:2:5","nodeType":"YulTypedName","src":"2270:2:5","type":""}]},{"nativeSrc":"2313:18:5","nodeType":"YulAssignment","src":"2313:18:5","value":{"arguments":[{"name":"x","nativeSrc":"2326:1:5","nodeType":"YulIdentifier","src":"2326:1:5"},{"name":"y","nativeSrc":"2329:1:5","nodeType":"YulIdentifier","src":"2329:1:5"}],"functionName":{"name":"mul","nativeSrc":"2322:3:5","nodeType":"YulIdentifier","src":"2322:3:5"},"nativeSrc":"2322:9:5","nodeType":"YulFunctionCall","src":"2322:9:5"},"variableNames":[{"name":"prod0","nativeSrc":"2313:5:5","nodeType":"YulIdentifier","src":"2313:5:5"}]},{"nativeSrc":"2348:43:5","nodeType":"YulAssignment","src":"2348:43:5","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2365:2:5","nodeType":"YulIdentifier","src":"2365:2:5"},{"name":"prod0","nativeSrc":"2369:5:5","nodeType":"YulIdentifier","src":"2369:5:5"}],"functionName":{"name":"sub","nativeSrc":"2361:3:5","nodeType":"YulIdentifier","src":"2361:3:5"},"nativeSrc":"2361:14:5","nodeType":"YulFunctionCall","src":"2361:14:5"},{"arguments":[{"name":"mm","nativeSrc":"2380:2:5","nodeType":"YulIdentifier","src":"2380:2:5"},{"name":"prod0","nativeSrc":"2384:5:5","nodeType":"YulIdentifier","src":"2384:5:5"}],"functionName":{"name":"lt","nativeSrc":"2377:2:5","nodeType":"YulIdentifier","src":"2377:2:5"},"nativeSrc":"2377:13:5","nodeType":"YulFunctionCall","src":"2377:13:5"}],"functionName":{"name":"sub","nativeSrc":"2357:3:5","nodeType":"YulIdentifier","src":"2357:3:5"},"nativeSrc":"2357:34:5","nodeType":"YulFunctionCall","src":"2357:34:5"},"variableNames":[{"name":"prod1","nativeSrc":"2348:5:5","nodeType":"YulIdentifier","src":"2348:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":906,"isOffset":false,"isSlot":false,"src":"2313:5:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"2369:5:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"2384:5:5","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"2348:5:5","valueSize":1},{"declaration":896,"isOffset":false,"isSlot":false,"src":"2283:1:5","valueSize":1},{"declaration":896,"isOffset":false,"isSlot":false,"src":"2326:1:5","valueSize":1},{"declaration":898,"isOffset":false,"isSlot":false,"src":"2286:1:5","valueSize":1},{"declaration":898,"isOffset":false,"isSlot":false,"src":"2329:1:5","valueSize":1}],"id":911,"nodeType":"InlineAssembly","src":"2239:166:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2486:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"IfStatement","src":"2482:368:5","trueBody":{"id":919,"nodeType":"Block","src":"2498:352:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":915,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":916,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2824:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":904,"id":918,"nodeType":"Return","src":"2809:26:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":922,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"2960:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":923,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2974:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"2952:53:5"},{"assignments":[929],"declarations":[{"constant":false,"id":929,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:5","nodeType":"VariableDeclaration","scope":1014,"src":"3261:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":930,"nodeType":"VariableDeclarationStatement","src":"3261:17:5"},{"AST":{"nativeSrc":"3301:291:5","nodeType":"YulBlock","src":"3301:291:5","statements":[{"nativeSrc":"3370:38:5","nodeType":"YulAssignment","src":"3370:38:5","value":{"arguments":[{"name":"x","nativeSrc":"3390:1:5","nodeType":"YulIdentifier","src":"3390:1:5"},{"name":"y","nativeSrc":"3393:1:5","nodeType":"YulIdentifier","src":"3393:1:5"},{"name":"denominator","nativeSrc":"3396:11:5","nodeType":"YulIdentifier","src":"3396:11:5"}],"functionName":{"name":"mulmod","nativeSrc":"3383:6:5","nodeType":"YulIdentifier","src":"3383:6:5"},"nativeSrc":"3383:25:5","nodeType":"YulFunctionCall","src":"3383:25:5"},"variableNames":[{"name":"remainder","nativeSrc":"3370:9:5","nodeType":"YulIdentifier","src":"3370:9:5"}]},{"nativeSrc":"3490:41:5","nodeType":"YulAssignment","src":"3490:41:5","value":{"arguments":[{"name":"prod1","nativeSrc":"3503:5:5","nodeType":"YulIdentifier","src":"3503:5:5"},{"arguments":[{"name":"remainder","nativeSrc":"3513:9:5","nodeType":"YulIdentifier","src":"3513:9:5"},{"name":"prod0","nativeSrc":"3524:5:5","nodeType":"YulIdentifier","src":"3524:5:5"}],"functionName":{"name":"gt","nativeSrc":"3510:2:5","nodeType":"YulIdentifier","src":"3510:2:5"},"nativeSrc":"3510:20:5","nodeType":"YulFunctionCall","src":"3510:20:5"}],"functionName":{"name":"sub","nativeSrc":"3499:3:5","nodeType":"YulIdentifier","src":"3499:3:5"},"nativeSrc":"3499:32:5","nodeType":"YulFunctionCall","src":"3499:32:5"},"variableNames":[{"name":"prod1","nativeSrc":"3490:5:5","nodeType":"YulIdentifier","src":"3490:5:5"}]},{"nativeSrc":"3548:30:5","nodeType":"YulAssignment","src":"3548:30:5","value":{"arguments":[{"name":"prod0","nativeSrc":"3561:5:5","nodeType":"YulIdentifier","src":"3561:5:5"},{"name":"remainder","nativeSrc":"3568:9:5","nodeType":"YulIdentifier","src":"3568:9:5"}],"functionName":{"name":"sub","nativeSrc":"3557:3:5","nodeType":"YulIdentifier","src":"3557:3:5"},"nativeSrc":"3557:21:5","nodeType":"YulFunctionCall","src":"3557:21:5"},"variableNames":[{"name":"prod0","nativeSrc":"3548:5:5","nodeType":"YulIdentifier","src":"3548:5:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":900,"isOffset":false,"isSlot":false,"src":"3396:11:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"3524:5:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"3548:5:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"3561:5:5","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"3490:5:5","valueSize":1},{"declaration":909,"isOffset":false,"isSlot":false,"src":"3503:5:5","valueSize":1},{"declaration":929,"isOffset":false,"isSlot":false,"src":"3370:9:5","valueSize":1},{"declaration":929,"isOffset":false,"isSlot":false,"src":"3513:9:5","valueSize":1},{"declaration":929,"isOffset":false,"isSlot":false,"src":"3568:9:5","valueSize":1},{"declaration":896,"isOffset":false,"isSlot":false,"src":"3390:1:5","valueSize":1},{"declaration":898,"isOffset":false,"isSlot":false,"src":"3393:1:5","valueSize":1}],"id":931,"nodeType":"InlineAssembly","src":"3292:300:5"},{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"twos","nameLocation":"3907:4:5","nodeType":"VariableDeclaration","scope":1014,"src":"3899:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":941,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"3914:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:5","subExpression":{"id":935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"3930:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:5"},{"AST":{"nativeSrc":"3969:362:5","nodeType":"YulBlock","src":"3969:362:5","statements":[{"nativeSrc":"4034:37:5","nodeType":"YulAssignment","src":"4034:37:5","value":{"arguments":[{"name":"denominator","nativeSrc":"4053:11:5","nodeType":"YulIdentifier","src":"4053:11:5"},{"name":"twos","nativeSrc":"4066:4:5","nodeType":"YulIdentifier","src":"4066:4:5"}],"functionName":{"name":"div","nativeSrc":"4049:3:5","nodeType":"YulIdentifier","src":"4049:3:5"},"nativeSrc":"4049:22:5","nodeType":"YulFunctionCall","src":"4049:22:5"},"variableNames":[{"name":"denominator","nativeSrc":"4034:11:5","nodeType":"YulIdentifier","src":"4034:11:5"}]},{"nativeSrc":"4138:25:5","nodeType":"YulAssignment","src":"4138:25:5","value":{"arguments":[{"name":"prod0","nativeSrc":"4151:5:5","nodeType":"YulIdentifier","src":"4151:5:5"},{"name":"twos","nativeSrc":"4158:4:5","nodeType":"YulIdentifier","src":"4158:4:5"}],"functionName":{"name":"div","nativeSrc":"4147:3:5","nodeType":"YulIdentifier","src":"4147:3:5"},"nativeSrc":"4147:16:5","nodeType":"YulFunctionCall","src":"4147:16:5"},"variableNames":[{"name":"prod0","nativeSrc":"4138:5:5","nodeType":"YulIdentifier","src":"4138:5:5"}]},{"nativeSrc":"4278:39:5","nodeType":"YulAssignment","src":"4278:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4298:1:5","nodeType":"YulLiteral","src":"4298:1:5","type":"","value":"0"},{"name":"twos","nativeSrc":"4301:4:5","nodeType":"YulIdentifier","src":"4301:4:5"}],"functionName":{"name":"sub","nativeSrc":"4294:3:5","nodeType":"YulIdentifier","src":"4294:3:5"},"nativeSrc":"4294:12:5","nodeType":"YulFunctionCall","src":"4294:12:5"},{"name":"twos","nativeSrc":"4308:4:5","nodeType":"YulIdentifier","src":"4308:4:5"}],"functionName":{"name":"div","nativeSrc":"4290:3:5","nodeType":"YulIdentifier","src":"4290:3:5"},"nativeSrc":"4290:23:5","nodeType":"YulFunctionCall","src":"4290:23:5"},{"kind":"number","nativeSrc":"4315:1:5","nodeType":"YulLiteral","src":"4315:1:5","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4286:3:5","nodeType":"YulIdentifier","src":"4286:3:5"},"nativeSrc":"4286:31:5","nodeType":"YulFunctionCall","src":"4286:31:5"},"variableNames":[{"name":"twos","nativeSrc":"4278:4:5","nodeType":"YulIdentifier","src":"4278:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":900,"isOffset":false,"isSlot":false,"src":"4034:11:5","valueSize":1},{"declaration":900,"isOffset":false,"isSlot":false,"src":"4053:11:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"4138:5:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"4151:5:5","valueSize":1},{"declaration":933,"isOffset":false,"isSlot":false,"src":"4066:4:5","valueSize":1},{"declaration":933,"isOffset":false,"isSlot":false,"src":"4158:4:5","valueSize":1},{"declaration":933,"isOffset":false,"isSlot":false,"src":"4278:4:5","valueSize":1},{"declaration":933,"isOffset":false,"isSlot":false,"src":"4301:4:5","valueSize":1},{"declaration":933,"isOffset":false,"isSlot":false,"src":"4308:4:5","valueSize":1}],"id":942,"nodeType":"InlineAssembly","src":"3960:371:5"},{"expression":{"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":943,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4397:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"4406:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":945,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4414:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":948,"nodeType":"ExpressionStatement","src":"4397:21:5"},{"assignments":[950],"declarations":[{"constant":false,"id":950,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:5","nodeType":"VariableDeclaration","scope":1014,"src":"4736:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":952,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"4759:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:5"},{"expression":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":958,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"4992:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":960,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5007:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":961,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5021:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"nodeType":"ExpressionStatement","src":"4992:36:5"},{"expression":{"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":966,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5076:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":969,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5090:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":973,"nodeType":"ExpressionStatement","src":"5061:36:5"},{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":974,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":976,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5146:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":977,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"5131:36:5"},{"expression":{"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":982,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5216:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":985,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":989,"nodeType":"ExpressionStatement","src":"5201:36:5"},{"expression":{"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":990,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5286:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":993,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5300:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":997,"nodeType":"ExpressionStatement","src":"5271:36:5"},{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":998,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1000,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5357:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1001,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5371:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"5342:36:5"},{"expression":{"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"5812:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"5821:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1008,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1011,"nodeType":"ExpressionStatement","src":"5812:24:5"},{"expression":{"id":1012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"5857:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":904,"id":1013,"nodeType":"Return","src":"5850:13:5"}]}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"1357:305:5","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:5","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"x","nameLocation":"1691:1:5","nodeType":"VariableDeclaration","scope":1016,"src":"1683:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"y","nameLocation":"1702:1:5","nodeType":"VariableDeclaration","scope":1016,"src":"1694:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:5","nodeType":"VariableDeclaration","scope":1016,"src":"1705:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:5"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"result","nameLocation":"1757:6:5","nodeType":"VariableDeclaration","scope":1016,"src":"1749:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:5"},"scope":1668,"src":"1667:4213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"6122:189:5","statements":[{"assignments":[1032],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"result","nameLocation":"6140:6:5","nodeType":"VariableDeclaration","scope":1059,"src":"6132:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1038,"initialValue":{"arguments":[{"id":1034,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6159:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1036,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"6162:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1016,1060],"referencedDeclaration":1016,"src":"6149:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"6188:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1040,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"6200:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$809_$","typeString":"type(enum Math.Rounding)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":807,"src":"6200:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"src":"6188:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1044,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"6222:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1045,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6225:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1046,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"6228:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1043,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1056,"nodeType":"IfStatement","src":"6184:98:5","trueBody":{"id":1055,"nodeType":"Block","src":"6246:36:5","statements":[{"expression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1051,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6260:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1054,"nodeType":"ExpressionStatement","src":"6260:11:5"}]}},{"expression":{"id":1057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"6298:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1030,"id":1058,"nodeType":"Return","src":"6291:13:5"}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"5886:121:5","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:5","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"x","nameLocation":"6036:1:5","nodeType":"VariableDeclaration","scope":1060,"src":"6028:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"y","nameLocation":"6047:1:5","nodeType":"VariableDeclaration","scope":1060,"src":"6039:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:5","nodeType":"VariableDeclaration","scope":1060,"src":"6050:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1026,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:5","nodeType":"VariableDeclaration","scope":1060,"src":"6071:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"typeName":{"id":1025,"nodeType":"UserDefinedTypeName","pathNode":{"id":1024,"name":"Rounding","nameLocations":["6071:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"6071:8:5"},"referencedDeclaration":809,"src":"6071:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:5"},"returnParameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1060,"src":"6113:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:5"},"scope":1668,"src":"6012:299:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1171,"nodeType":"Block","src":"6587:1585:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"6601:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1074,"nodeType":"IfStatement","src":"6597:45:5","trueBody":{"id":1073,"nodeType":"Block","src":"6609:33:5","statements":[{"expression":{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1067,"id":1072,"nodeType":"Return","src":"6623:8:5"}]}},{"assignments":[1076],"declarations":[{"constant":false,"id":1076,"mutability":"mutable","name":"result","nameLocation":"7329:6:5","nodeType":"VariableDeclaration","scope":1171,"src":"7321:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1085,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7349:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1078,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1340,1376],"referencedDeclaration":1340,"src":"7344:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:5"},{"id":1170,"nodeType":"UncheckedBlock","src":"7758:408:5","statements":[{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7782:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7792:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7801:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7805:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"nodeType":"ExpressionStatement","src":"7782:35:5"},{"expression":{"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7831:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7841:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7850:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7854:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1107,"nodeType":"ExpressionStatement","src":"7831:35:5"},{"expression":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7880:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7890:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7899:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7903:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1118,"nodeType":"ExpressionStatement","src":"7880:35:5"},{"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7929:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7939:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7948:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7952:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1129,"nodeType":"ExpressionStatement","src":"7929:35:5"},{"expression":{"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7978:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7988:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7997:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8001:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1140,"nodeType":"ExpressionStatement","src":"7978:35:5"},{"expression":{"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8027:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8037:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"8046:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1144,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8050:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"nodeType":"ExpressionStatement","src":"8027:35:5"},{"expression":{"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8076:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8086:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"8095:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1155,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8099:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1162,"nodeType":"ExpressionStatement","src":"8076:35:5"},{"expression":{"arguments":[{"id":1164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8136:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"8144:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1166,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8148:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1163,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8132:3:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1067,"id":1169,"nodeType":"Return","src":"8125:30:5"}]}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"6317:208:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1172,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:5","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"a","nameLocation":"6552:1:5","nodeType":"VariableDeclaration","scope":1172,"src":"6544:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:5"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1172,"src":"6578:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:5"},"scope":1668,"src":"6530:1642:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1207,"nodeType":"Block","src":"8348:161:5","statements":[{"id":1206,"nodeType":"UncheckedBlock","src":"8358:145:5","statements":[{"assignments":[1184],"declarations":[{"constant":false,"id":1184,"mutability":"mutable","name":"result","nameLocation":"8390:6:5","nodeType":"VariableDeclaration","scope":1206,"src":"8382:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1188,"initialValue":{"arguments":[{"id":1186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"8404:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1172,1208],"referencedDeclaration":1172,"src":"8399:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"8427:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1190,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"8437:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1191,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"8449:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$809_$","typeString":"type(enum Math.Rounding)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":807,"src":"8449:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"src":"8437:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"8464:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"8473:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"8482:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:5","trueExpression":{"hexValue":"31","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1203,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1182,"id":1205,"nodeType":"Return","src":"8420:72:5"}]}]},"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"8178:89:5","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1208,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:5","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"a","nameLocation":"8294:1:5","nodeType":"VariableDeclaration","scope":1208,"src":"8286:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:5","nodeType":"VariableDeclaration","scope":1208,"src":"8297:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"typeName":{"id":1177,"nodeType":"UserDefinedTypeName","pathNode":{"id":1176,"name":"Rounding","nameLocations":["8297:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"8297:8:5"},"referencedDeclaration":809,"src":"8297:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:5"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1208,"src":"8339:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:5"},"scope":1668,"src":"8272:237:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1339,"nodeType":"Block","src":"8694:922:5","statements":[{"assignments":[1217],"declarations":[{"constant":false,"id":1217,"mutability":"mutable","name":"result","nameLocation":"8712:6:5","nodeType":"VariableDeclaration","scope":1339,"src":"8704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1219,"initialValue":{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:5"},{"id":1336,"nodeType":"UncheckedBlock","src":"8732:855:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"8760:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1234,"nodeType":"IfStatement","src":"8756:99:5","trueBody":{"id":1233,"nodeType":"Block","src":"8778:77:5","statements":[{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"8796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ExpressionStatement","src":"8796:13:5"},{"expression":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8827:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1232,"nodeType":"ExpressionStatement","src":"8827:13:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"8872:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1249,"nodeType":"IfStatement","src":"8868:96:5","trueBody":{"id":1248,"nodeType":"Block","src":"8889:75:5","statements":[{"expression":{"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"8907:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"nodeType":"ExpressionStatement","src":"8907:12:5"},{"expression":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1244,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8937:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"nodeType":"ExpressionStatement","src":"8937:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"8981:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"8977:96:5","trueBody":{"id":1263,"nodeType":"Block","src":"8998:75:5","statements":[{"expression":{"id":1257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9016:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1258,"nodeType":"ExpressionStatement","src":"9016:12:5"},{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9046:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ExpressionStatement","src":"9046:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9090:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1279,"nodeType":"IfStatement","src":"9086:96:5","trueBody":{"id":1278,"nodeType":"Block","src":"9107:75:5","statements":[{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9125:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"9125:12:5"},{"expression":{"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9155:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ExpressionStatement","src":"9155:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1294,"nodeType":"IfStatement","src":"9195:93:5","trueBody":{"id":1293,"nodeType":"Block","src":"9215:73:5","statements":[{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9233:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"9233:11:5"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9262:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"9262:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9305:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"nodeType":"IfStatement","src":"9301:93:5","trueBody":{"id":1308,"nodeType":"Block","src":"9321:73:5","statements":[{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9339:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"9339:11:5"},{"expression":{"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9368:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1307,"nodeType":"ExpressionStatement","src":"9368:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9411:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1324,"nodeType":"IfStatement","src":"9407:93:5","trueBody":{"id":1323,"nodeType":"Block","src":"9427:73:5","statements":[{"expression":{"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9445:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1318,"nodeType":"ExpressionStatement","src":"9445:11:5"},{"expression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9474:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1322,"nodeType":"ExpressionStatement","src":"9474:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"9517:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"nodeType":"IfStatement","src":"9513:64:5","trueBody":{"id":1334,"nodeType":"Block","src":"9533:44:5","statements":[{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9551:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"9551:11:5"}]}}]},{"expression":{"id":1337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9603:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1215,"id":1338,"nodeType":"Return","src":"9596:13:5"}]},"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"8515:113:5","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:5","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"value","nameLocation":"8655:5:5","nodeType":"VariableDeclaration","scope":1340,"src":"8647:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:5"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1340,"src":"8685:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:5"},"scope":1668,"src":"8633:983:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1375,"nodeType":"Block","src":"9849:165:5","statements":[{"id":1374,"nodeType":"UncheckedBlock","src":"9859:149:5","statements":[{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"result","nameLocation":"9891:6:5","nodeType":"VariableDeclaration","scope":1374,"src":"9883:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1356,"initialValue":{"arguments":[{"id":1354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"9905:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1340,1376],"referencedDeclaration":1340,"src":"9900:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"9932:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1358,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"9942:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1359,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"9954:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$809_$","typeString":"type(enum Math.Rounding)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":807,"src":"9954:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"src":"9942:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"9974:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"9983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:5","trueExpression":{"hexValue":"31","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1371,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1350,"id":1373,"nodeType":"Return","src":"9925:72:5"}]}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"9622:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:5","nodeType":"FunctionDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"value","nameLocation":"9791:5:5","nodeType":"VariableDeclaration","scope":1376,"src":"9783:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:5","nodeType":"VariableDeclaration","scope":1376,"src":"9798:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"typeName":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"Rounding","nameLocations":["9798:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"9798:8:5"},"referencedDeclaration":809,"src":"9798:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:5"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"9840:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:5"},"scope":1668,"src":"9769:245:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1504,"nodeType":"Block","src":"10201:854:5","statements":[{"assignments":[1385],"declarations":[{"constant":false,"id":1385,"mutability":"mutable","name":"result","nameLocation":"10219:6:5","nodeType":"VariableDeclaration","scope":1504,"src":"10211:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1387,"initialValue":{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:5"},{"id":1501,"nodeType":"UncheckedBlock","src":"10239:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10267:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"10263:103:5","trueBody":{"id":1403,"nodeType":"Block","src":"10286:80:5","statements":[{"expression":{"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10304:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ExpressionStatement","src":"10304:17:5"},{"expression":{"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10339:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ExpressionStatement","src":"10339:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10383:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1421,"nodeType":"IfStatement","src":"10379:103:5","trueBody":{"id":1420,"nodeType":"Block","src":"10402:80:5","statements":[{"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10420:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1415,"nodeType":"ExpressionStatement","src":"10420:17:5"},{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10455:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1419,"nodeType":"ExpressionStatement","src":"10455:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10499:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1438,"nodeType":"IfStatement","src":"10495:103:5","trueBody":{"id":1437,"nodeType":"Block","src":"10518:80:5","statements":[{"expression":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10536:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1432,"nodeType":"ExpressionStatement","src":"10536:17:5"},{"expression":{"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10571:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1436,"nodeType":"ExpressionStatement","src":"10571:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10615:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"10611:100:5","trueBody":{"id":1454,"nodeType":"Block","src":"10633:78:5","statements":[{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10651:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1449,"nodeType":"ExpressionStatement","src":"10651:16:5"},{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10685:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"10685:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1472,"nodeType":"IfStatement","src":"10724:100:5","trueBody":{"id":1471,"nodeType":"Block","src":"10746:78:5","statements":[{"expression":{"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10764:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1466,"nodeType":"ExpressionStatement","src":"10764:16:5"},{"expression":{"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10798:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ExpressionStatement","src":"10798:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10841:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"10837:100:5","trueBody":{"id":1488,"nodeType":"Block","src":"10859:78:5","statements":[{"expression":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10877:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1483,"nodeType":"ExpressionStatement","src":"10877:16:5"},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10911:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"10911:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"10954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1500,"nodeType":"IfStatement","src":"10950:66:5","trueBody":{"id":1499,"nodeType":"Block","src":"10972:44:5","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"10990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"10990:11:5"}]}}]},{"expression":{"id":1502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"11042:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1383,"id":1503,"nodeType":"Return","src":"11035:13:5"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"10020:114:5","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1505,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:5","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"value","nameLocation":"10162:5:5","nodeType":"VariableDeclaration","scope":1505,"src":"10154:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:5"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1505,"src":"10192:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:5"},"scope":1668,"src":"10139:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1540,"nodeType":"Block","src":"11290:167:5","statements":[{"id":1539,"nodeType":"UncheckedBlock","src":"11300:151:5","statements":[{"assignments":[1517],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"result","nameLocation":"11332:6:5","nodeType":"VariableDeclaration","scope":1539,"src":"11324:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1521,"initialValue":{"arguments":[{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"11347:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1518,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1505,1541],"referencedDeclaration":1505,"src":"11341:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1522,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"11374:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"11384:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1524,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"11396:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$809_$","typeString":"type(enum Math.Rounding)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":807,"src":"11396:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"src":"11384:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"11417:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"11426:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:5","trueExpression":{"hexValue":"31","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1515,"id":1538,"nodeType":"Return","src":"11367:73:5"}]}]},"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"11061:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:5","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"value","nameLocation":"11232:5:5","nodeType":"VariableDeclaration","scope":1541,"src":"11224:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:5","nodeType":"VariableDeclaration","scope":1541,"src":"11239:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"typeName":{"id":1510,"nodeType":"UserDefinedTypeName","pathNode":{"id":1509,"name":"Rounding","nameLocations":["11239:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"11239:8:5"},"referencedDeclaration":809,"src":"11239:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:5"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"11281:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:5"},"scope":1668,"src":"11209:248:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"11771:600:5","statements":[{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"result","nameLocation":"11789:6:5","nodeType":"VariableDeclaration","scope":1627,"src":"11781:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1552,"initialValue":{"hexValue":"30","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:5"},{"id":1624,"nodeType":"UncheckedBlock","src":"11809:533:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11837:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1567,"nodeType":"IfStatement","src":"11833:98:5","trueBody":{"id":1566,"nodeType":"Block","src":"11855:76:5","statements":[{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11873:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"11873:13:5"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"11904:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"11904:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11948:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1582,"nodeType":"IfStatement","src":"11944:95:5","trueBody":{"id":1581,"nodeType":"Block","src":"11965:74:5","statements":[{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11983:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1576,"nodeType":"ExpressionStatement","src":"11983:12:5"},{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12013:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1580,"nodeType":"ExpressionStatement","src":"12013:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"12056:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1597,"nodeType":"IfStatement","src":"12052:95:5","trueBody":{"id":1596,"nodeType":"Block","src":"12073:74:5","statements":[{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"12091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"12091:12:5"},{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12121:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1595,"nodeType":"ExpressionStatement","src":"12121:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"12164:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1612,"nodeType":"IfStatement","src":"12160:95:5","trueBody":{"id":1611,"nodeType":"Block","src":"12181:74:5","statements":[{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"12199:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"12199:12:5"},{"expression":{"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12229:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1610,"nodeType":"ExpressionStatement","src":"12229:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"12272:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1623,"nodeType":"IfStatement","src":"12268:64:5","trueBody":{"id":1622,"nodeType":"Block","src":"12288:44:5","statements":[{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12306:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"12306:11:5"}]}}]},{"expression":{"id":1625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"12358:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1548,"id":1626,"nodeType":"Return","src":"12351:13:5"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"11463:240:5","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:5","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"value","nameLocation":"11732:5:5","nodeType":"VariableDeclaration","scope":1628,"src":"11724:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:5"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1628,"src":"11762:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:5"},"scope":1668,"src":"11708:663:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1666,"nodeType":"Block","src":"12608:174:5","statements":[{"id":1665,"nodeType":"UncheckedBlock","src":"12618:158:5","statements":[{"assignments":[1640],"declarations":[{"constant":false,"id":1640,"mutability":"mutable","name":"result","nameLocation":"12650:6:5","nodeType":"VariableDeclaration","scope":1665,"src":"12642:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1644,"initialValue":{"arguments":[{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12666:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1641,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1628,1667],"referencedDeclaration":1628,"src":"12659:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12693:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1646,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"12703:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1647,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"12715:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$809_$","typeString":"type(enum Math.Rounding)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:5","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":807,"src":"12715:11:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"src":"12703:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12736:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"12751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:5","trueExpression":{"hexValue":"31","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1638,"id":1664,"nodeType":"Return","src":"12686:79:5"}]}]},"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"12377:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:5","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"value","nameLocation":"12550:5:5","nodeType":"VariableDeclaration","scope":1667,"src":"12542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:5","nodeType":"VariableDeclaration","scope":1667,"src":"12557:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"Rounding","nameLocations":["12557:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"12557:8:5"},"referencedDeclaration":809,"src":"12557:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$809","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:5"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"12599:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:5"},"scope":1668,"src":"12526:256:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1669,"src":"202:12582:5","usedErrors":[],"usedEvents":[]}],"src":"103:12682:5"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1773]},"id":1774,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1670,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"134:80:6","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1773,"linearizedBaseContracts":[1773],"name":"SignedMath","nameLocation":"223:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1688,"nodeType":"Block","src":"375:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"392:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"396:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"404:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:6","trueExpression":{"id":1684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"400:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1680,"id":1687,"nodeType":"Return","src":"385:20:6"}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"240:66:6","text":" @dev Returns the largest of two signed numbers."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:6","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"a","nameLocation":"331:1:6","nodeType":"VariableDeclaration","scope":1689,"src":"324:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1673,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"b","nameLocation":"341:1:6","nodeType":"VariableDeclaration","scope":1689,"src":"334:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1675,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:6"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"367:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1678,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:6"},"scope":1773,"src":"311:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"554:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"571:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"575:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"583:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:6","trueExpression":{"id":1702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"579:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1698,"id":1705,"nodeType":"Return","src":"564:20:6"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"418:67:6","text":" @dev Returns the smallest of two signed numbers."},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:6","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"a","nameLocation":"510:1:6","nodeType":"VariableDeclaration","scope":1707,"src":"503:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1691,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"b","nameLocation":"520:1:6","nodeType":"VariableDeclaration","scope":1707,"src":"513:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1693,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:6"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1707,"src":"546:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1696,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:6"},"scope":1773,"src":"490:101:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"796:162:6","statements":[{"assignments":[1718],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"x","nameLocation":"865:1:6","nodeType":"VariableDeclaration","scope":1750,"src":"858:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1717,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1731,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"870:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"874:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1723,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"881:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1724,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"885:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:6"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"910:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1737,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"930:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:6","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1733,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:6","typeDescriptions":{}}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"944:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"948:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1716,"id":1749,"nodeType":"Return","src":"903:48:6"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"597:126:6","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:6","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"a","nameLocation":"752:1:6","nodeType":"VariableDeclaration","scope":1751,"src":"745:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1709,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"b","nameLocation":"762:1:6","nodeType":"VariableDeclaration","scope":1751,"src":"755:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1711,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:6"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"788:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1714,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:6"},"scope":1773,"src":"728:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1771,"nodeType":"Block","src":"1102:158:6","statements":[{"id":1770,"nodeType":"UncheckedBlock","src":"1112:142:6","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"1227:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:6","subExpression":{"id":1765,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"1241:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:6","trueExpression":{"id":1764,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"1236:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:6","typeDescriptions":{}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1758,"id":1769,"nodeType":"Return","src":"1212:31:6"}]}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"964:78:6","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:6","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"n","nameLocation":"1067:1:6","nodeType":"VariableDeclaration","scope":1772,"src":"1060:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1753,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:6"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"1093:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:6"},"scope":1773,"src":"1047:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1774,"src":"215:1047:6","usedErrors":[],"usedEvents":[]}],"src":"109:1154:6"}},"contracts/DeathRaceGame.sol":{"id":7,"ast":{"absolutePath":"contracts/DeathRaceGame.sol","exportedSymbols":{"Context":[207],"DeathRaceGame":[2415],"ECDSA":[802],"Math":[1668],"Ownable":[112],"ReentrancyGuard":[177],"SignedMath":[1773],"Strings":[436]},"id":2416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1775,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:7"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2416,"sourceUnit":178,"src":"101:62:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2416,"sourceUnit":113,"src":"164:52:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2416,"sourceUnit":437,"src":"217:51:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2416,"sourceUnit":803,"src":"269:62:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1781,"name":"ReentrancyGuard","nameLocations":["732:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"732:15:7"},"id":1782,"nodeType":"InheritanceSpecifier","src":"732:15:7"},{"baseName":{"id":1783,"name":"Ownable","nameLocations":["749:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"749:7:7"},"id":1784,"nodeType":"InheritanceSpecifier","src":"749:7:7"}],"canonicalName":"DeathRaceGame","contractDependencies":[],"contractKind":"contract","documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"349:356:7","text":" @title DeathRaceGame\n @dev Smart contract to manage Death Race game on Abstract L2 (zkSync Era)\n \n The contract handles game creation, payout management, and provable fairness\n for the Death Race game, where players navigate through a grid to maximize \n their potential winnings. Requires server-signed parameters for critical actions."},"fullyImplemented":true,"id":2415,"linearizedBaseContracts":[2415,112,207,177],"name":"DeathRaceGame","nameLocation":"715:13:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1787,"libraryName":{"id":1785,"name":"Strings","nameLocations":["769:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"769:7:7"},"nodeType":"UsingForDirective","src":"763:26:7","typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"873:48:7","text":"@notice Counter for unique on-chain game IDs"},"functionSelector":"2e0be39a","id":1790,"mutability":"mutable","name":"gameCounter","nameLocation":"941:11:7","nodeType":"VariableDeclaration","scope":2415,"src":"926:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1789,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"959:87:7","text":"@notice Address authorized to sign parameters for critical actions (server backend)"},"functionSelector":"5271ee50","id":1793,"mutability":"mutable","name":"serverSignerAddress","nameLocation":"1066:19:7","nodeType":"VariableDeclaration","scope":2415,"src":"1051:34:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"1092:64:7","text":"@notice Mapping from preliminary game ID to on-chain game ID"},"functionSelector":"a40d8f48","id":1798,"mutability":"mutable","name":"preliminaryToOnChainId","nameLocation":"1195:22:7","nodeType":"VariableDeclaration","scope":2415,"src":"1161:56:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":1797,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1795,"name":"string","nodeType":"ElementaryTypeName","src":"1169:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1161:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"DeathRaceGame.GameStatus","documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"1224:28:7","text":"@notice Game status enum"},"id":1803,"members":[{"id":1800,"name":"Active","nameLocation":"1283:6:7","nodeType":"EnumValue","src":"1283:6:7"},{"id":1801,"name":"Won","nameLocation":"1299:3:7","nodeType":"EnumValue","src":"1299:3:7"},{"id":1802,"name":"Lost","nameLocation":"1312:4:7","nodeType":"EnumValue","src":"1312:4:7"}],"name":"GameStatus","nameLocation":"1262:10:7","nodeType":"EnumDefinition","src":"1257:65:7"},{"canonicalName":"DeathRaceGame.Game","documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"1328:31:7","text":"@notice Game data structure"},"id":1828,"members":[{"constant":false,"id":1806,"mutability":"mutable","name":"createdAt","nameLocation":"1394:9:7","nodeType":"VariableDeclaration","scope":1828,"src":"1386:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"player","nameLocation":"1468:6:7","nodeType":"VariableDeclaration","scope":1828,"src":"1460:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"1460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"betAmount","nameLocation":"1528:9:7","nodeType":"VariableDeclaration","scope":1828,"src":"1520:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1813,"mutability":"mutable","name":"status","nameLocation":"1594:6:7","nodeType":"VariableDeclaration","scope":1828,"src":"1583:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"},"typeName":{"id":1812,"nodeType":"UserDefinedTypeName","pathNode":{"id":1811,"name":"GameStatus","nameLocations":["1583:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"1583:10:7"},"referencedDeclaration":1803,"src":"1583:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"payoutAmount","nameLocation":"1647:12:7","nodeType":"VariableDeclaration","scope":1828,"src":"1639:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1639:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"gameSeedHash","nameLocation":"1715:12:7","nodeType":"VariableDeclaration","scope":1828,"src":"1707:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1816,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1707:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"gameSeed","nameLocation":"1788:8:7","nodeType":"VariableDeclaration","scope":1828,"src":"1781:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1818,"name":"string","nodeType":"ElementaryTypeName","src":"1781:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"algoVersion","nameLocation":"1862:11:7","nodeType":"VariableDeclaration","scope":1828,"src":"1855:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1820,"name":"string","nodeType":"ElementaryTypeName","src":"1855:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"rows","nameLocation":"1952:4:7","nodeType":"VariableDeclaration","scope":1828,"src":"1944:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":1822,"name":"uint8","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1823,"nodeType":"ArrayTypeName","src":"1944:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"selectedTiles","nameLocation":"2017:13:7","nodeType":"VariableDeclaration","scope":1828,"src":"2009:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":1825,"name":"uint8","nodeType":"ElementaryTypeName","src":"2009:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1826,"nodeType":"ArrayTypeName","src":"2009:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"}],"name":"Game","nameLocation":"1371:4:7","nodeType":"StructDefinition","scope":2415,"src":"1364:709:7","visibility":"public"},{"constant":false,"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"2079:54:7","text":"@notice Mapping from on-chain game ID to Game data"},"functionSelector":"117a5b90","id":1834,"mutability":"mutable","name":"games","nameLocation":"2170:5:7","nodeType":"VariableDeclaration","scope":2415,"src":"2138:37:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game)"},"typeName":{"id":1833,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2146:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2138:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1832,"nodeType":"UserDefinedTypeName","pathNode":{"id":1831,"name":"Game","nameLocations":["2157:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":1828,"src":"2157:4:7"},"referencedDeclaration":1828,"src":"2157:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game"}}},"visibility":"public"},{"anonymous":false,"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"2251:46:7","text":"@notice Emitted when a new game is created"},"eventSelector":"5ab4782178ec00656b6f3f3f73d1739ea9d5cba22c641e4b20767fbb57160943","id":1847,"name":"GameCreated","nameLocation":"2308:11:7","nodeType":"EventDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"indexed":false,"mutability":"mutable","name":"preliminaryGameId","nameLocation":"2336:17:7","nodeType":"VariableDeclaration","scope":1847,"src":"2329:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1836,"name":"string","nodeType":"ElementaryTypeName","src":"2329:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1839,"indexed":true,"mutability":"mutable","name":"onChainGameId","nameLocation":"2379:13:7","nodeType":"VariableDeclaration","scope":1847,"src":"2363:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2363:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1841,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"2418:6:7","nodeType":"VariableDeclaration","scope":1847,"src":"2402:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"indexed":false,"mutability":"mutable","name":"betAmount","nameLocation":"2442:9:7","nodeType":"VariableDeclaration","scope":1847,"src":"2434:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"2434:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1845,"indexed":false,"mutability":"mutable","name":"gameSeedHash","nameLocation":"2469:12:7","nodeType":"VariableDeclaration","scope":1847,"src":"2461:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2461:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2319:220:7"},"src":"2302:238:7"},{"anonymous":false,"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"2546:53:7","text":"@notice Emitted when a payout is sent to a player"},"eventSelector":"ca18b3e4c1f4a1342b2e2e8b6c68bd49c1ff679624d67b618db852effe04dcba","id":1856,"name":"PayoutSent","nameLocation":"2610:10:7","nodeType":"EventDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"indexed":true,"mutability":"mutable","name":"onChainGameId","nameLocation":"2646:13:7","nodeType":"VariableDeclaration","scope":1856,"src":"2630:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"2630:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1852,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2677:6:7","nodeType":"VariableDeclaration","scope":1856,"src":"2669:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1854,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"2709:9:7","nodeType":"VariableDeclaration","scope":1856,"src":"2693:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2620:104:7"},"src":"2604:121:7"},{"anonymous":false,"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"2731:49:7","text":"@notice Emitted when a game status is updated"},"eventSelector":"4e27b06662347b2bd7ed6e8bde0a4b793dae7d7d05b102ef743cbd9c8d824e4e","id":1864,"name":"GameStatusUpdated","nameLocation":"2791:17:7","nodeType":"EventDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"indexed":true,"mutability":"mutable","name":"onChainGameId","nameLocation":"2834:13:7","nodeType":"VariableDeclaration","scope":1864,"src":"2818:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1862,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"2868:6:7","nodeType":"VariableDeclaration","scope":1864,"src":"2857:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"},"typeName":{"id":1861,"nodeType":"UserDefinedTypeName","pathNode":{"id":1860,"name":"GameStatus","nameLocations":["2857:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"2857:10:7"},"referencedDeclaration":1803,"src":"2857:10:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"visibility":"internal"}],"src":"2808:72:7"},"src":"2785:96:7"},{"anonymous":false,"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"2887:61:7","text":"@notice Emitted when the server signer address is updated"},"eventSelector":"914f73c603b3b3971f909c636c872855e0b77692a50f2a2b6999628ee5af66a2","id":1869,"name":"ServerSignerAddressUpdated","nameLocation":"2959:26:7","nodeType":"EventDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"indexed":false,"mutability":"mutable","name":"newAddress","nameLocation":"2994:10:7","nodeType":"VariableDeclaration","scope":1869,"src":"2986:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"2986:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2985:20:7"},"src":"2953:53:7"},{"anonymous":false,"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"3012:71:7","text":"@notice Emitted when funds are deposited directly into the contract"},"eventSelector":"9936746a4565f9766fa768f88f56a7487c78780ac179562773d1c75c5269537e","id":1876,"name":"DepositReceived","nameLocation":"3094:15:7","nodeType":"EventDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3126:6:7","nodeType":"VariableDeclaration","scope":1876,"src":"3110:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"3110:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3142:6:7","nodeType":"VariableDeclaration","scope":1876,"src":"3134:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3134:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3109:40:7"},"src":"3088:62:7"},{"documentation":{"id":1877,"nodeType":"StructuredDocumentation","src":"3225:42:7","text":"@notice Error when game already exists"},"errorSelector":"106cfcb1","id":1881,"name":"GameAlreadyExists","nameLocation":"3278:17:7","nodeType":"ErrorDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"preliminaryGameId","nameLocation":"3303:17:7","nodeType":"VariableDeclaration","scope":1881,"src":"3296:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"3296:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3295:26:7"},"src":"3272:50:7"},{"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"3328:41:7","text":"@notice Error when game doesn't exist"},"errorSelector":"6faf77ea","id":1886,"name":"GameDoesNotExist","nameLocation":"3380:16:7","nodeType":"ErrorDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"onChainGameId","nameLocation":"3405:13:7","nodeType":"VariableDeclaration","scope":1886,"src":"3397:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:23:7"},"src":"3374:46:7"},{"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"3426:47:7","text":"@notice Error when caller is not the player"},"errorSelector":"6d9dcc01","id":1893,"name":"NotGamePlayer","nameLocation":"3484:13:7","nodeType":"ErrorDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"onChainGameId","nameLocation":"3506:13:7","nodeType":"VariableDeclaration","scope":1893,"src":"3498:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"caller","nameLocation":"3529:6:7","nodeType":"VariableDeclaration","scope":1893,"src":"3521:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"3521:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3497:39:7"},"src":"3478:59:7"},{"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"3543:51:7","text":"@notice Error when game is not in active status"},"errorSelector":"7ffcba5a","id":1898,"name":"GameNotActive","nameLocation":"3605:13:7","nodeType":"ErrorDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"onChainGameId","nameLocation":"3627:13:7","nodeType":"VariableDeclaration","scope":1898,"src":"3619:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3618:23:7"},"src":"3599:43:7"},{"documentation":{"id":1899,"nodeType":"StructuredDocumentation","src":"3648:35:7","text":"@notice Error when payout fails"},"errorSelector":"fa9c4e62","id":1905,"name":"PayoutFailed","nameLocation":"3694:12:7","nodeType":"ErrorDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1901,"mutability":"mutable","name":"onChainGameId","nameLocation":"3715:13:7","nodeType":"VariableDeclaration","scope":1905,"src":"3707:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1903,"mutability":"mutable","name":"amount","nameLocation":"3738:6:7","nodeType":"VariableDeclaration","scope":1905,"src":"3730:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3706:39:7"},"src":"3688:58:7"},{"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"3752:83:7","text":"@notice Error when server signature is invalid or doesn't match expected signer"},"errorSelector":"f7c071fd","id":1908,"name":"InvalidServerSignature","nameLocation":"3846:22:7","nodeType":"ErrorDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[],"src":"3868:2:7"},"src":"3840:31:7"},{"body":{"id":1928,"nodeType":"Block","src":"4073:276:7","statements":[{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1914,"name":"gameCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4134:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4148:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4134:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1917,"nodeType":"ExpressionStatement","src":"4134:15:7"},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1918,"name":"serverSignerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4215:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4237:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4241:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4237:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4215:32:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1922,"nodeType":"ExpressionStatement","src":"4215:32:7"},{"eventCall":{"arguments":[{"expression":{"id":1924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4331:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4335:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4331:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1923,"name":"ServerSignerAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4304:26:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1927,"nodeType":"EmitStatement","src":"4299:43:7"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"3951:93:7","text":" @dev Constructor sets the contract owner and initial server signer address"},"id":1929,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":1912,"kind":"baseConstructorSpecifier","modifierName":{"id":1911,"name":"Ownable","nameLocations":["4063:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"4063:7:7"},"nodeType":"ModifierInvocation","src":"4063:9:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"4060:2:7"},"returnParameters":{"id":1913,"nodeType":"ParameterList","parameters":[],"src":"4073:0:7"},"scope":2415,"src":"4049:300:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2026,"nodeType":"Block","src":"5195:1245:7","statements":[{"assignments":[1945],"declarations":[{"constant":false,"id":1945,"mutability":"mutable","name":"messageHash","nameLocation":"5275:11:7","nodeType":"VariableDeclaration","scope":2026,"src":"5267:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5267:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1960,"initialValue":{"arguments":[{"arguments":[{"hexValue":"44656174685261636547616d653a63726561746547616d65","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5340:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_446beedb02c2aa95d22b625033ae1e86a5c1cc9146199bd3aa3e7f92643e3d10","typeString":"literal_string \"DeathRaceGame:createGame\""},"value":"DeathRaceGame:createGame"},{"id":1950,"name":"preliminaryGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5384:17:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1951,"name":"gameSeedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5419:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1952,"name":"algoVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5449:11:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1953,"name":"rows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5478:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},{"expression":{"id":1954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5500:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5504:6:7","memberName":"sender","nodeType":"MemberAccess","src":"5500:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1956,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5528:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5532:5:7","memberName":"value","nodeType":"MemberAccess","src":"5528:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_446beedb02c2aa95d22b625033ae1e86a5c1cc9146199bd3aa3e7f92643e3d10","typeString":"literal_string \"DeathRaceGame:createGame\""},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1947,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5312:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5316:6:7","memberName":"encode","nodeType":"MemberAccess","src":"5312:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:239:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1946,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5289:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:272:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5267:294:7"},{"expression":{"arguments":[{"id":1962,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5594:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1963,"name":"serverSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"5607:15:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1961,"name":"_verifyServerSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5571:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes32,bytes calldata) view"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5571:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"5571:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1966,"name":"preliminaryToOnChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5638:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":1968,"indexExpression":{"id":1967,"name":"preliminaryGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5661:17:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5638:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5683:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5638:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1976,"nodeType":"IfStatement","src":"5634:120:7","trueBody":{"id":1975,"nodeType":"Block","src":"5686:68:7","statements":[{"errorCall":{"arguments":[{"id":1972,"name":"preliminaryGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5725:17:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":1971,"name":"GameAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5707:17:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"RevertStatement","src":"5700:43:7"}]}},{"assignments":[1978],"declarations":[{"constant":false,"id":1978,"mutability":"mutable","name":"onChainGameId","nameLocation":"5772:13:7","nodeType":"VariableDeclaration","scope":2026,"src":"5764:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1980,"initialValue":{"id":1979,"name":"gameCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5788:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5764:35:7"},{"expression":{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"gameCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5809:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5824:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5809:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1984,"nodeType":"ExpressionStatement","src":"5809:16:7"},{"expression":{"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1985,"name":"preliminaryToOnChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5835:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":1987,"indexExpression":{"id":1986,"name":"preliminaryGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"5858:17:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5835:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1988,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5879:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5835:57:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"5835:57:7"},{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1991,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"5951:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game storage ref)"}},"id":1993,"indexExpression":{"id":1992,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5957:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5951:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage","typeString":"struct DeathRaceGame.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6001:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6005:6:7","memberName":"sender","nodeType":"MemberAccess","src":"6001:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6036:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6040:5:7","memberName":"value","nodeType":"MemberAccess","src":"6036:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1999,"name":"gameSeedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6073:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2000,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"6107:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6118:6:7","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1800,"src":"6107:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},{"hexValue":"30","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6152:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6194:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6182:11:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint8[] memory)"},"typeName":{"baseType":{"id":2003,"name":"uint8","nodeType":"ElementaryTypeName","src":"6186:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2004,"nodeType":"ArrayTypeName","src":"6186:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6182:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"}},{"hexValue":"","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6220:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":2009,"name":"algoVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"6249:11:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2010,"name":"rows","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"6280:4:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},{"expression":{"id":2011,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6309:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6315:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"6309:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_array$_t_uint8_$dyn_memory_ptr","typeString":"uint8[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1994,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"5974:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$1828_storage_ptr_$","typeString":"type(struct DeathRaceGame.Game storage pointer)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5993:6:7","6025:9:7","6059:12:7","6099:6:7","6138:12:7","6167:13:7","6210:8:7","6236:11:7","6274:4:7","6298:9:7"],"names":["player","betAmount","gameSeedHash","status","payoutAmount","selectedTiles","gameSeed","algoVersion","rows","createdAt"],"nodeType":"FunctionCall","src":"5974:361:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_memory_ptr","typeString":"struct DeathRaceGame.Game memory"}},"src":"5951:384:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage","typeString":"struct DeathRaceGame.Game storage ref"}},"id":2015,"nodeType":"ExpressionStatement","src":"5951:384:7"},{"eventCall":{"arguments":[{"id":2017,"name":"preliminaryGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6363:17:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2018,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"6382:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6397:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6401:6:7","memberName":"sender","nodeType":"MemberAccess","src":"6397:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6409:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6413:5:7","memberName":"value","nodeType":"MemberAccess","src":"6409:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2023,"name":"gameSeedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6420:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2016,"name":"GameCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"6351:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (string memory,uint256,address,uint256,bytes32)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6351:82:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2025,"nodeType":"EmitStatement","src":"6346:87:7"}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"4436:530:7","text":" @notice Creates a new game placeholder on-chain. Requires server signature.\n Only gameSeedHash is needed for provable fairness.\n @param preliminaryGameId The preliminary game ID generated by the backend\n @param gameSeedHash Hash of the actual game seed (used for listener correlation)\n @param algoVersion The algorithm version for provable fairness\n @param rows The array of tile counts per row\n @param serverSignature Signature from the server authorizing this game creation"},"functionSelector":"b5cf199a","id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"createGame","nameLocation":"4980:10:7","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"preliminaryGameId","nameLocation":"5016:17:7","nodeType":"VariableDeclaration","scope":2027,"src":"5000:33:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"5000:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"gameSeedHash","nameLocation":"5051:12:7","nodeType":"VariableDeclaration","scope":2027,"src":"5043:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"algoVersion","nameLocation":"5089:11:7","nodeType":"VariableDeclaration","scope":2027,"src":"5073:27:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"rows","nameLocation":"5127:4:7","nodeType":"VariableDeclaration","scope":2027,"src":"5110:21:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":1937,"name":"uint8","nodeType":"ElementaryTypeName","src":"5110:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1938,"nodeType":"ArrayTypeName","src":"5110:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"serverSignature","nameLocation":"5156:15:7","nodeType":"VariableDeclaration","scope":2027,"src":"5141:30:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"5141:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4990:187:7"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"5195:0:7"},"scope":2415,"src":"4971:1469:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2151,"nodeType":"Block","src":"6989:1369:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2043,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7075:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7079:6:7","memberName":"sender","nodeType":"MemberAccess","src":"7075:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2045,"name":"serverSignerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"7089:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7075:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207365727665722063616e2063617368206f7574","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7110:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_db4271020fcd555c31ff4cb9de5c04ddf17c4e61517608699101d04b325ae7b1","typeString":"literal_string \"Only server can cash out\""},"value":"Only server can cash out"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db4271020fcd555c31ff4cb9de5c04ddf17c4e61517608699101d04b325ae7b1","typeString":"literal_string \"Only server can cash out\""}],"id":2042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7067:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7067:70:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"7067:70:7"},{"assignments":[2052],"declarations":[{"constant":false,"id":2052,"mutability":"mutable","name":"game","nameLocation":"7161:4:7","nodeType":"VariableDeclaration","scope":2151,"src":"7148:17:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game"},"typeName":{"id":2051,"nodeType":"UserDefinedTypeName","pathNode":{"id":2050,"name":"Game","nameLocations":["7148:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":1828,"src":"7148:4:7"},"referencedDeclaration":1828,"src":"7148:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game"}},"visibility":"internal"}],"id":2056,"initialValue":{"baseExpression":{"id":2053,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"7168:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game storage ref)"}},"id":2055,"indexExpression":{"id":2054,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7174:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7168:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage","typeString":"struct DeathRaceGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7148:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2057,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7202:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7207:6:7","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"7202:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7225:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7217:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"7217:7:7","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7202:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2069,"nodeType":"IfStatement","src":"7198:95:7","trueBody":{"id":2068,"nodeType":"Block","src":"7229:64:7","statements":[{"errorCall":{"arguments":[{"id":2065,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7268:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"GameDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"7251:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2067,"nodeType":"RevertStatement","src":"7244:38:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2070,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7382:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7387:6:7","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"7382:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2072,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"7397:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7408:6:7","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1800,"src":"7397:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"src":"7382:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2080,"nodeType":"IfStatement","src":"7378:98:7","trueBody":{"id":2079,"nodeType":"Block","src":"7416:60:7","statements":[{"errorCall":{"arguments":[{"id":2076,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"7451:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2075,"name":"GameNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7437:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2078,"nodeType":"RevertStatement","src":"7430:35:7"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2082,"name":"payoutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"7494:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7509:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7494:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796f75745a65726f","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7512:12:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_71ed8b3292348f04b1b56d11150599346c7b50e717a5914f8fcdf0ac46665ff1","typeString":"literal_string \"PayoutZero\""},"value":"PayoutZero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71ed8b3292348f04b1b56d11150599346c7b50e717a5914f8fcdf0ac46665ff1","typeString":"literal_string \"PayoutZero\""}],"id":2081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7486:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7486:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2087,"nodeType":"ExpressionStatement","src":"7486:39:7"},{"assignments":[2089],"declarations":[{"constant":false,"id":2089,"mutability":"mutable","name":"playerAddress","nameLocation":"7716:13:7","nodeType":"VariableDeclaration","scope":2151,"src":"7708:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"7708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2092,"initialValue":{"expression":{"id":2090,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7732:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7737:6:7","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"7732:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7708:35:7"},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2093,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7838:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7843:6:7","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"7838:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2096,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"7852:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7863:3:7","memberName":"Won","nodeType":"MemberAccess","referencedDeclaration":1801,"src":"7852:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"src":"7838:28:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"id":2099,"nodeType":"ExpressionStatement","src":"7838:28:7"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2100,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7876:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7881:12:7","memberName":"payoutAmount","nodeType":"MemberAccess","referencedDeclaration":1815,"src":"7876:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2103,"name":"payoutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"7896:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7876:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"nodeType":"ExpressionStatement","src":"7876:32:7"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2106,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7918:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7923:13:7","memberName":"selectedTiles","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"7918:18:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage","typeString":"uint8[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2109,"name":"selectedTiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"7939:13:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"src":"7918:34:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage","typeString":"uint8[] storage ref"}},"id":2111,"nodeType":"ExpressionStatement","src":"7918:34:7"},{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2112,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"7962:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7967:8:7","memberName":"gameSeed","nodeType":"MemberAccess","referencedDeclaration":1819,"src":"7962:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2115,"name":"gameSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"7978:8:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"7962:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2117,"nodeType":"ExpressionStatement","src":"7962:24:7"},{"assignments":[2119,null],"declarations":[{"constant":false,"id":2119,"mutability":"mutable","name":"success","nameLocation":"8057:7:7","nodeType":"VariableDeclaration","scope":2151,"src":"8052:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2118,"name":"bool","nodeType":"ElementaryTypeName","src":"8052:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2129,"initialValue":{"arguments":[{"hexValue":"","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8119:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":2122,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"8078:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8070:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"8070:8:7","stateMutability":"payable","typeDescriptions":{}}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8093:4:7","memberName":"call","nodeType":"MemberAccess","src":"8070:27:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2125,"name":"payoutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"8105:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8070:48:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8051:71:7"},{"condition":{"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8136:8:7","subExpression":{"id":2130,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"8137:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"8132:87:7","trueBody":{"id":2137,"nodeType":"Block","src":"8146:73:7","statements":[{"errorCall":{"arguments":[{"id":2133,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8180:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2134,"name":"payoutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"8195:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2132,"name":"PayoutFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"8167:12:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2136,"nodeType":"RevertStatement","src":"8160:48:7"}]}},{"eventCall":{"arguments":[{"id":2140,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8252:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2141,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"8267:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8278:3:7","memberName":"Won","nodeType":"MemberAccess","referencedDeclaration":1801,"src":"8267:14:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}],"id":2139,"name":"GameStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"8234:17:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_GameStatus_$1803_$returns$__$","typeString":"function (uint256,enum DeathRaceGame.GameStatus)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8234:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"EmitStatement","src":"8229:53:7"},{"eventCall":{"arguments":[{"id":2146,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"8308:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2147,"name":"payoutAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"8323:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2148,"name":"playerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"8337:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2145,"name":"PayoutSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"8297:10:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8297:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"EmitStatement","src":"8292:59:7"}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"6446:332:7","text":" @notice Processes a cash out. Only callable by the server signer.\n @param onChainGameId The on-chain game ID.\n @param payoutAmount The NET amount to pay out.\n @param selectedTiles Array of selected tiles for verification.\n @param gameSeed The final game seed to store for provable fairness"},"functionSelector":"6136e823","id":2152,"implemented":true,"kind":"function","modifiers":[{"id":2040,"kind":"modifierInvocation","modifierName":{"id":2039,"name":"nonReentrant","nameLocations":["6976:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"6976:12:7"},"nodeType":"ModifierInvocation","src":"6976:12:7"}],"name":"cashOut","nameLocation":"6792:7:7","nodeType":"FunctionDefinition","parameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"onChainGameId","nameLocation":"6817:13:7","nodeType":"VariableDeclaration","scope":2152,"src":"6809:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"payoutAmount","nameLocation":"6848:12:7","nodeType":"VariableDeclaration","scope":2152,"src":"6840:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"6840:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"selectedTiles","nameLocation":"6887:13:7","nodeType":"VariableDeclaration","scope":2152,"src":"6870:30:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":2033,"name":"uint8","nodeType":"ElementaryTypeName","src":"6870:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2034,"nodeType":"ArrayTypeName","src":"6870:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"gameSeed","nameLocation":"6926:8:7","nodeType":"VariableDeclaration","scope":2152,"src":"6910:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2036,"name":"string","nodeType":"ElementaryTypeName","src":"6910:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6799:167:7"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[],"src":"6989:0:7"},"scope":2415,"src":"6783:1575:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2227,"nodeType":"Block","src":"8860:632:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8946:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8950:6:7","memberName":"sender","nodeType":"MemberAccess","src":"8946:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2166,"name":"serverSignerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"8960:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8946:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207365727665722063616e206d61726b2067616d65206c6f7374","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8981:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb2eab401cf145b038d231ee519379058c3391fbc6fb6979c49146ad801d6f80","typeString":"literal_string \"Only server can mark game lost\""},"value":"Only server can mark game lost"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb2eab401cf145b038d231ee519379058c3391fbc6fb6979c49146ad801d6f80","typeString":"literal_string \"Only server can mark game lost\""}],"id":2163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8938:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8938:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"ExpressionStatement","src":"8938:76:7"},{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"game","nameLocation":"9038:4:7","nodeType":"VariableDeclaration","scope":2227,"src":"9025:17:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game"},"typeName":{"id":2172,"nodeType":"UserDefinedTypeName","pathNode":{"id":2171,"name":"Game","nameLocations":["9025:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":1828,"src":"9025:4:7"},"referencedDeclaration":1828,"src":"9025:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game"}},"visibility":"internal"}],"id":2177,"initialValue":{"baseExpression":{"id":2174,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"9045:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game storage ref)"}},"id":2176,"indexExpression":{"id":2175,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9051:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9045:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage","typeString":"struct DeathRaceGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9025:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2178,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9080:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9085:6:7","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"9080:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9095:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"9095:7:7","typeDescriptions":{}}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9095:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9080:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2190,"nodeType":"IfStatement","src":"9076:96:7","trueBody":{"id":2189,"nodeType":"Block","src":"9107:65:7","statements":[{"errorCall":{"arguments":[{"id":2186,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9146:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2185,"name":"GameDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"9129:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2188,"nodeType":"RevertStatement","src":"9122:38:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2191,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9186:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9191:6:7","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"9186:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2193,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9201:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9212:6:7","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":1800,"src":"9201:17:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"src":"9186:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"9182:98:7","trueBody":{"id":2200,"nodeType":"Block","src":"9220:60:7","statements":[{"errorCall":{"arguments":[{"id":2197,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9255:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2196,"name":"GameNotActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"9241:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"RevertStatement","src":"9234:35:7"}]}},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2202,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9290:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9295:6:7","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1813,"src":"9290:11:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2205,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9304:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9315:4:7","memberName":"Lost","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"9304:15:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"src":"9290:29:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}},"id":2208,"nodeType":"ExpressionStatement","src":"9290:29:7"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2209,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9329:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9334:13:7","memberName":"selectedTiles","nodeType":"MemberAccess","referencedDeclaration":1827,"src":"9329:18:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage","typeString":"uint8[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2212,"name":"selectedTiles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"9350:13:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[] calldata"}},"src":"9329:34:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage","typeString":"uint8[] storage ref"}},"id":2214,"nodeType":"ExpressionStatement","src":"9329:34:7"},{"expression":{"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2215,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"9373:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game storage pointer"}},"id":2217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9378:8:7","memberName":"gameSeed","nodeType":"MemberAccess","referencedDeclaration":1819,"src":"9373:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2218,"name":"gameSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"9389:8:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"9373:24:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2220,"nodeType":"ExpressionStatement","src":"9373:24:7"},{"eventCall":{"arguments":[{"id":2222,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"9454:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2223,"name":"GameStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"9469:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameStatus_$1803_$","typeString":"type(enum DeathRaceGame.GameStatus)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9480:4:7","memberName":"Lost","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"9469:15:7","typeDescriptions":{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_GameStatus_$1803","typeString":"enum DeathRaceGame.GameStatus"}],"id":2221,"name":"GameStatusUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"9436:17:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_GameStatus_$1803_$returns$__$","typeString":"function (uint256,enum DeathRaceGame.GameStatus)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9436:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"EmitStatement","src":"9431:54:7"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"8364:321:7","text":" @notice Mark a game as lost. Only callable by the server signer.\n Stores the game seed for verification.\n @param onChainGameId The on-chain game ID\n @param selectedTiles Array of selected tiles for verification\n @param gameSeed The final game seed to store for provable fairness"},"functionSelector":"884f58c0","id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"markGameAsLost","nameLocation":"8699:14:7","nodeType":"FunctionDefinition","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"onChainGameId","nameLocation":"8731:13:7","nodeType":"VariableDeclaration","scope":2228,"src":"8723:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2158,"mutability":"mutable","name":"selectedTiles","nameLocation":"8771:13:7","nodeType":"VariableDeclaration","scope":2228,"src":"8754:30:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_calldata_ptr","typeString":"uint8[]"},"typeName":{"baseType":{"id":2156,"name":"uint8","nodeType":"ElementaryTypeName","src":"8754:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2157,"nodeType":"ArrayTypeName","src":"8754:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$dyn_storage_ptr","typeString":"uint8[]"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"gameSeed","nameLocation":"8810:8:7","nodeType":"VariableDeclaration","scope":2228,"src":"8794:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2159,"name":"string","nodeType":"ElementaryTypeName","src":"8794:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8713:137:7"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"8860:0:7"},"scope":2415,"src":"8690:802:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2256,"nodeType":"Block","src":"9742:199:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2237,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"9757:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game storage ref)"}},"id":2239,"indexExpression":{"id":2238,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9763:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9757:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage","typeString":"struct DeathRaceGame.Game storage ref"}},"id":2240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9778:6:7","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":1808,"src":"9757:27:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9796:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9788:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"9788:7:7","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9788:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9757:41:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2251,"nodeType":"IfStatement","src":"9753:145:7","trueBody":{"id":2250,"nodeType":"Block","src":"9800:98:7","statements":[{"errorCall":{"arguments":[{"id":2247,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9872:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2246,"name":"GameDoesNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"9855:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"RevertStatement","src":"9848:38:7"}]}},{"expression":{"baseExpression":{"id":2252,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"9914:5:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$1828_storage_$","typeString":"mapping(uint256 => struct DeathRaceGame.Game storage ref)"}},"id":2254,"indexExpression":{"id":2253,"name":"onChainGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"9920:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9914:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage","typeString":"struct DeathRaceGame.Game storage ref"}},"functionReturnParameters":2236,"id":2255,"nodeType":"Return","src":"9907:27:7"}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"9498:156:7","text":" @notice Get details for a specific game\n @param onChainGameId The on-chain game ID\n @return Game struct with all game details"},"functionSelector":"1b31abda","id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"getGameDetails","nameLocation":"9668:14:7","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"onChainGameId","nameLocation":"9691:13:7","nodeType":"VariableDeclaration","scope":2257,"src":"9683:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"9683:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9682:23:7"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"9729:11:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_memory_ptr","typeString":"struct DeathRaceGame.Game"},"typeName":{"id":2234,"nodeType":"UserDefinedTypeName","pathNode":{"id":2233,"name":"Game","nameLocations":["9729:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":1828,"src":"9729:4:7"},"referencedDeclaration":1828,"src":"9729:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$1828_storage_ptr","typeString":"struct DeathRaceGame.Game"}},"visibility":"internal"}],"src":"9728:13:7"},"scope":2415,"src":"9659:282:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2269,"nodeType":"Block","src":"10244:65:7","statements":[{"expression":{"baseExpression":{"id":2265,"name":"preliminaryToOnChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"10261:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":2267,"indexExpression":{"id":2266,"name":"preliminaryGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"10284:17:7","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10261:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2264,"id":2268,"nodeType":"Return","src":"10254:48:7"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"9947:199:7","text":" @notice Get on-chain ID from preliminary ID\n @param preliminaryGameId The preliminary game ID\n @return onChainGameId The corresponding on-chain game ID (0 if not found)"},"functionSelector":"96696da1","id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"getOnChainGameId","nameLocation":"10160:16:7","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"preliminaryGameId","nameLocation":"10193:17:7","nodeType":"VariableDeclaration","scope":2270,"src":"10177:33:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2259,"name":"string","nodeType":"ElementaryTypeName","src":"10177:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10176:35:7"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"10235:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"10235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10234:9:7"},"scope":2415,"src":"10151:158:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2296,"nodeType":"Block","src":"10610:174:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"_newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"10628:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10651:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10643:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"10643:7:7","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10643:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10628:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207365727665722061646472657373","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10655:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b63126e2beea0f2dccf558b3954e1bfbef06ed4922f442c02088b0731fe34b22","typeString":"literal_string \"Invalid server address\""},"value":"Invalid server address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b63126e2beea0f2dccf558b3954e1bfbef06ed4922f442c02088b0731fe34b22","typeString":"literal_string \"Invalid server address\""}],"id":2278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10620:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10620:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2287,"nodeType":"ExpressionStatement","src":"10620:60:7"},{"expression":{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2288,"name":"serverSignerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"10690:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2289,"name":"_newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"10712:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10690:33:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2291,"nodeType":"ExpressionStatement","src":"10690:33:7"},{"eventCall":{"arguments":[{"id":2293,"name":"_newAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"10765:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2292,"name":"ServerSignerAddressUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"10738:26:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10738:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2295,"nodeType":"EmitStatement","src":"10733:44:7"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"10393:140:7","text":" @notice Sets the address authorized to sign critical parameters.\n @param _newAddress The new server signer address."},"functionSelector":"c9efbee6","id":2297,"implemented":true,"kind":"function","modifiers":[{"id":2276,"kind":"modifierInvocation","modifierName":{"id":2275,"name":"onlyOwner","nameLocations":["10600:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10600:9:7"},"nodeType":"ModifierInvocation","src":"10600:9:7"}],"name":"setServerSignerAddress","nameLocation":"10547:22:7","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"_newAddress","nameLocation":"10578:11:7","nodeType":"VariableDeclaration","scope":2297,"src":"10570:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"10570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10569:21:7"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[],"src":"10610:0:7"},"scope":2415,"src":"10538:246:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2351,"nodeType":"Block","src":"11193:335:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"11211:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11220:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11211:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616d6f756e74206d75737420626520706f736974697665","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11223:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5090dc81c2d59c18c6d26c75b236f8e6e1d44f0680621faad8d8bb278db17bde","typeString":"literal_string \"Withdraw amount must be positive\""},"value":"Withdraw amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5090dc81c2d59c18c6d26c75b236f8e6e1d44f0680621faad8d8bb278db17bde","typeString":"literal_string \"Withdraw amount must be positive\""}],"id":2309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11203:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"ExpressionStatement","src":"11203:55:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"11276:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11289:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"11289:7:7","typeDescriptions":{}}},"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11289:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11276:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11301:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":2316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11268:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11268:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2325,"nodeType":"ExpressionStatement","src":"11268:61:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"11347:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2330,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11365:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_DeathRaceGame_$2415","typeString":"contract DeathRaceGame"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DeathRaceGame_$2415","typeString":"contract DeathRaceGame"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11357:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"11357:7:7","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11371:7:7","memberName":"balance","nodeType":"MemberAccess","src":"11357:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11347:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420636f6e74726163742062616c616e6365","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11380:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""},"value":"Insufficient contract balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749","typeString":"literal_string \"Insufficient contract balance\""}],"id":2326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11339:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11339:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2336,"nodeType":"ExpressionStatement","src":"11339:73:7"},{"assignments":[2338,null],"declarations":[{"constant":false,"id":2338,"mutability":"mutable","name":"success","nameLocation":"11428:7:7","nodeType":"VariableDeclaration","scope":2351,"src":"11423:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2337,"name":"bool","nodeType":"ElementaryTypeName","src":"11423:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2345,"initialValue":{"arguments":[{"hexValue":"","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11471:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2339,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"11441:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11451:4:7","memberName":"call","nodeType":"MemberAccess","src":"11441:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2341,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"11463:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11441:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11441:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11422:52:7"},{"expression":{"arguments":[{"id":2347,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"11492:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c206661696c6564","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11501:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""},"value":"Withdrawal failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""}],"id":2346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11484:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"ExpressionStatement","src":"11484:37:7"}]},"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"10790:300:7","text":" @notice Withdraw contract funds to a specified recipient. Only callable by the owner.\n Funds represent implicitly collected fees (Total Bets - Total Net Payouts).\n @param amount The amount to withdraw.\n @param recipient The address to send the withdrawn funds to."},"functionSelector":"744bfe61","id":2352,"implemented":true,"kind":"function","modifiers":[{"id":2305,"kind":"modifierInvocation","modifierName":{"id":2304,"name":"onlyOwner","nameLocations":["11170:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"11170:9:7"},"nodeType":"ModifierInvocation","src":"11170:9:7"},{"id":2307,"kind":"modifierInvocation","modifierName":{"id":2306,"name":"nonReentrant","nameLocations":["11180:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"11180:12:7"},"nodeType":"ModifierInvocation","src":"11180:12:7"}],"name":"withdrawFunds","nameLocation":"11104:13:7","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"amount","nameLocation":"11126:6:7","nodeType":"VariableDeclaration","scope":2352,"src":"11118:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"11118:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"recipient","nameLocation":"11150:9:7","nodeType":"VariableDeclaration","scope":2352,"src":"11134:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"11134:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11117:43:7"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[],"src":"11193:0:7"},"scope":2415,"src":"11095:433:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2363,"nodeType":"Block","src":"11660:60:7","statements":[{"eventCall":{"arguments":[{"expression":{"id":2357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11691:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11695:6:7","memberName":"sender","nodeType":"MemberAccess","src":"11691:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11703:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11707:5:7","memberName":"value","nodeType":"MemberAccess","src":"11703:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2356,"name":"DepositReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"11675:15:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11675:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"EmitStatement","src":"11670:43:7"}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"11534:94:7","text":" @notice Receive function to accept direct Ether deposits into the treasury."},"id":2364,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[],"src":"11640:2:7"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"11660:0:7"},"scope":2415,"src":"11633:87:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2413,"nodeType":"Block","src":"12231:694:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"serverSignerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"12245:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12276:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12268:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"12268:7:7","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12268:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12245:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"nodeType":"IfStatement","src":"12241:122:7","trueBody":{"id":2381,"nodeType":"Block","src":"12280:83:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2378,"name":"InvalidServerSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"12302:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12302:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"RevertStatement","src":"12295:31:7"}]}},{"assignments":[2384],"declarations":[{"constant":false,"id":2384,"mutability":"mutable","name":"prefixedHash","nameLocation":"12529:12:7","nodeType":"VariableDeclaration","scope":2413,"src":"12521:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12521:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2389,"initialValue":{"arguments":[{"id":2387,"name":"_hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"12573:5:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2385,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"12544:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$802_$","typeString":"type(library ECDSA)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12550:22:7","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":747,"src":"12544:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12544:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"12521:58:7"},{"assignments":[2391],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"recoveredSigner","nameLocation":"12639:15:7","nodeType":"VariableDeclaration","scope":2413,"src":"12631:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"12631:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2397,"initialValue":{"arguments":[{"id":2394,"name":"prefixedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"12671:12:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2395,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"12685:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2392,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"12657:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$802_$","typeString":"type(library ECDSA)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12663:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":563,"src":"12657:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12657:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12631:65:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"12790:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12817:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12809:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"12809:7:7","typeDescriptions":{}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12809:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12790:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"12823:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2405,"name":"serverSignerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"12842:19:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12823:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12790:71:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2412,"nodeType":"IfStatement","src":"12786:133:7","trueBody":{"id":2411,"nodeType":"Block","src":"12863:56:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2408,"name":"InvalidServerSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"12884:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12884:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2410,"nodeType":"RevertStatement","src":"12877:31:7"}]}}]},"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"11838:300:7","text":" @dev Verifies that the provided signature for the given hash was generated by the serverSignerAddress.\n Reverts with InvalidServerSignature if verification fails.\n @param _hash The hash that was signed.\n @param _signature The signature bytes (expected length 65)."},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyServerSignature","nameLocation":"12152:22:7","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"_hash","nameLocation":"12183:5:7","nodeType":"VariableDeclaration","scope":2414,"src":"12175:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12175:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"_signature","nameLocation":"12205:10:7","nodeType":"VariableDeclaration","scope":2414,"src":"12190:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2368,"name":"bytes","nodeType":"ElementaryTypeName","src":"12190:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12174:42:7"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[],"src":"12231:0:7"},"scope":2415,"src":"12143:782:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2416,"src":"706:12221:7","usedErrors":[1881,1886,1893,1898,1905,1908],"usedEvents":[13,1847,1856,1864,1869,1876]}],"src":"32:12896:7"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"hash":null,"factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":null}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}","evm":{},"hash":null,"factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":null}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","evm":{},"hash":null,"factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":null}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.24+commit.3a2587f6"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/Strings.sol":"Strings"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0","license":"MIT","urls":["bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f","dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","license":"MIT","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc","license":"MIT","urls":["bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7","dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"]}},"version":1},"zk_version":"1.5.12"},"eravm":{"bytecode":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e000000140001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000800000010000000000000000000000000000000000000000000000000000000000000000000000000000000000377bad1c2597bf0ffcae7e4ccd7d259f875f129e343d98423e97b0b5783d66d4"},"evm":{"bytecode":{"object":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e000000140001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000800000010000000000000000000000000000000000000000000000000000000000000000000000000000000000377bad1c2597bf0ffcae7e4ccd7d259f875f129e343d98423e97b0b5783d66d4"}},"hash":"0100000962e74dc9e85d6d82337672f2d303e9904441dd35f762933725c44077","factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.24+commit.3a2587f6"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":"ECDSA"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0","license":"MIT","urls":["bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f","dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"]},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58","license":"MIT","urls":["bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2","dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","license":"MIT","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc","license":"MIT","urls":["bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7","dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"]}},"version":1},"zk_version":"1.5.12"},"eravm":{"bytecode":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e0000001400010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000008000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000b687030f96ce6ee996b5098b43210445f15c5c16aae2251eb30199ab34bc7b7"},"evm":{"bytecode":{"object":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e0000001400010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000008000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000b687030f96ce6ee996b5098b43210445f15c5c16aae2251eb30199ab34bc7b7"}},"hash":"01000009ac3731059e7bde44371a42c33fc921d158db57a87aa34fbb39f5c671","factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.24+commit.3a2587f6"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/math/Math.sol":"Math"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","license":"MIT","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"]}},"version":1},"zk_version":"1.5.12"},"eravm":{"bytecode":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e00000014000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000080000001000000000000000000000000000000000000000000000000000000000000000000000000000000000090f1e6586cfb8a3529ea8659a3dd1a31dac0a0460dd3415ee69f87c4ef4b4fd9"},"evm":{"bytecode":{"object":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e00000014000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000080000001000000000000000000000000000000000000000000000000000000000000000000000000000000000090f1e6586cfb8a3529ea8659a3dd1a31dac0a0460dd3415ee69f87c4ef4b4fd9"}},"hash":"01000009a09f410551336070cf4d3b8e8db7e15d1e0be9756374027cafdfc830","factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.24+commit.3a2587f6"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/math/SignedMath.sol":"SignedMath"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc","license":"MIT","urls":["bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7","dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"]}},"version":1},"zk_version":"1.5.12"},"eravm":{"bytecode":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e00000014000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000080000001000000000000000000000000000000000000000000000000000000000000000000000000000000000083b8c2549caa8e97dcf0e5930e1253599a03dd16df37abab7e506912b2d8faeb"},"evm":{"bytecode":{"object":"0000000100200190000000100000613d0000008001000039000000400010043f0000000001000416000000000001004b000000100000c13d00000140000004430000000001000410000001600010044300000020010000390000010000100443000000010100003900000120001004430000000601000041000000130001042e000000000100001900000014000104300000001200000432000000130001042e00000014000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000080000001000000000000000000000000000000000000000000000000000000000000000000000000000000000083b8c2549caa8e97dcf0e5930e1253599a03dd16df37abab7e506912b2d8faeb"}},"hash":"010000091d87c750ce8eea51fa80a78be1ae6e3332752446c154dbec3d4e3890","factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"contracts/DeathRaceGame.sol":{"DeathRaceGame":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"preliminaryGameId","type":"string"}],"name":"GameAlreadyExists","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"}],"name":"GameDoesNotExist","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"}],"name":"GameNotActive","type":"error"},{"inputs":[],"name":"InvalidServerSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"NotGamePlayer","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PayoutFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DepositReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"preliminaryGameId","type":"string"},{"indexed":true,"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"betAmount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"}],"name":"GameCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"indexed":false,"internalType":"enum DeathRaceGame.GameStatus","name":"status","type":"uint8"}],"name":"GameStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"}],"name":"PayoutSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"ServerSignerAddressUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"uint256","name":"payoutAmount","type":"uint256"},{"internalType":"uint8[]","name":"selectedTiles","type":"uint8[]"},{"internalType":"string","name":"gameSeed","type":"string"}],"name":"cashOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"preliminaryGameId","type":"string"},{"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"},{"internalType":"string","name":"algoVersion","type":"string"},{"internalType":"uint8[]","name":"rows","type":"uint8[]"},{"internalType":"bytes","name":"serverSignature","type":"bytes"}],"name":"createGame","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"gameCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"enum DeathRaceGame.GameStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"payoutAmount","type":"uint256"},{"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"},{"internalType":"string","name":"gameSeed","type":"string"},{"internalType":"string","name":"algoVersion","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"}],"name":"getGameDetails","outputs":[{"components":[{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"enum DeathRaceGame.GameStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"payoutAmount","type":"uint256"},{"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"},{"internalType":"string","name":"gameSeed","type":"string"},{"internalType":"string","name":"algoVersion","type":"string"},{"internalType":"uint8[]","name":"rows","type":"uint8[]"},{"internalType":"uint8[]","name":"selectedTiles","type":"uint8[]"}],"internalType":"struct DeathRaceGame.Game","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"preliminaryGameId","type":"string"}],"name":"getOnChainGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"uint8[]","name":"selectedTiles","type":"uint8[]"},{"internalType":"string","name":"gameSeed","type":"string"}],"name":"markGameAsLost","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"preliminaryToOnChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"serverSignerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAddress","type":"address"}],"name":"setServerSignerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.24+commit.3a2587f6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"preliminaryGameId","type":"string"}],"name":"GameAlreadyExists","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"}],"name":"GameDoesNotExist","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"}],"name":"GameNotActive","type":"error"},{"inputs":[],"name":"InvalidServerSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"address","name":"caller","type":"address"}],"name":"NotGamePlayer","type":"error"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PayoutFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DepositReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"preliminaryGameId","type":"string"},{"indexed":true,"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"betAmount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"}],"name":"GameCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"indexed":false,"internalType":"enum DeathRaceGame.GameStatus","name":"status","type":"uint8"}],"name":"GameStatusUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"}],"name":"PayoutSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newAddress","type":"address"}],"name":"ServerSignerAddressUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"uint256","name":"payoutAmount","type":"uint256"},{"internalType":"uint8[]","name":"selectedTiles","type":"uint8[]"},{"internalType":"string","name":"gameSeed","type":"string"}],"name":"cashOut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"preliminaryGameId","type":"string"},{"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"},{"internalType":"string","name":"algoVersion","type":"string"},{"internalType":"uint8[]","name":"rows","type":"uint8[]"},{"internalType":"bytes","name":"serverSignature","type":"bytes"}],"name":"createGame","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"gameCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"enum DeathRaceGame.GameStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"payoutAmount","type":"uint256"},{"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"},{"internalType":"string","name":"gameSeed","type":"string"},{"internalType":"string","name":"algoVersion","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"}],"name":"getGameDetails","outputs":[{"components":[{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"betAmount","type":"uint256"},{"internalType":"enum DeathRaceGame.GameStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"payoutAmount","type":"uint256"},{"internalType":"bytes32","name":"gameSeedHash","type":"bytes32"},{"internalType":"string","name":"gameSeed","type":"string"},{"internalType":"string","name":"algoVersion","type":"string"},{"internalType":"uint8[]","name":"rows","type":"uint8[]"},{"internalType":"uint8[]","name":"selectedTiles","type":"uint8[]"}],"internalType":"struct DeathRaceGame.Game","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"preliminaryGameId","type":"string"}],"name":"getOnChainGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"onChainGameId","type":"uint256"},{"internalType":"uint8[]","name":"selectedTiles","type":"uint8[]"},{"internalType":"string","name":"gameSeed","type":"string"}],"name":"markGameAsLost","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"preliminaryToOnChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"serverSignerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAddress","type":"address"}],"name":"setServerSignerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"recipient","type":"address"}],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Smart contract to manage Death Race game on Abstract L2 (zkSync Era)  The contract handles game creation, payout management, and provable fairness for the Death Race game, where players navigate through a grid to maximize  their potential winnings. Requires server-signed parameters for critical actions.","kind":"dev","methods":{"cashOut(uint256,uint256,uint8[],string)":{"params":{"gameSeed":"The final game seed to store for provable fairness","onChainGameId":"The on-chain game ID.","payoutAmount":"The NET amount to pay out.","selectedTiles":"Array of selected tiles for verification."}},"constructor":{"details":"Constructor sets the contract owner and initial server signer address"},"createGame(string,bytes32,string,uint8[],bytes)":{"params":{"algoVersion":"The algorithm version for provable fairness","gameSeedHash":"Hash of the actual game seed (used for listener correlation)","preliminaryGameId":"The preliminary game ID generated by the backend","rows":"The array of tile counts per row","serverSignature":"Signature from the server authorizing this game creation"}},"getGameDetails(uint256)":{"params":{"onChainGameId":"The on-chain game ID"},"returns":{"_0":"Game struct with all game details"}},"getOnChainGameId(string)":{"params":{"preliminaryGameId":"The preliminary game ID"},"returns":{"_0":"onChainGameId The corresponding on-chain game ID (0 if not found)"}},"markGameAsLost(uint256,uint8[],string)":{"params":{"gameSeed":"The final game seed to store for provable fairness","onChainGameId":"The on-chain game ID","selectedTiles":"Array of selected tiles for verification"}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setServerSignerAddress(address)":{"params":{"_newAddress":"The new server signer address."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawFunds(uint256,address)":{"params":{"amount":"The amount to withdraw.","recipient":"The address to send the withdrawn funds to."}}},"title":"DeathRaceGame","version":1},"userdoc":{"errors":{"GameAlreadyExists(string)":[{"notice":"Error when game already exists"}],"GameDoesNotExist(uint256)":[{"notice":"Error when game doesn't exist"}],"GameNotActive(uint256)":[{"notice":"Error when game is not in active status"}],"InvalidServerSignature()":[{"notice":"Error when server signature is invalid or doesn't match expected signer"}],"NotGamePlayer(uint256,address)":[{"notice":"Error when caller is not the player"}],"PayoutFailed(uint256,uint256)":[{"notice":"Error when payout fails"}]},"events":{"DepositReceived(address,uint256)":{"notice":"Emitted when funds are deposited directly into the contract"},"GameCreated(string,uint256,address,uint256,bytes32)":{"notice":"Emitted when a new game is created"},"GameStatusUpdated(uint256,uint8)":{"notice":"Emitted when a game status is updated"},"PayoutSent(uint256,uint256,address)":{"notice":"Emitted when a payout is sent to a player"},"ServerSignerAddressUpdated(address)":{"notice":"Emitted when the server signer address is updated"}},"kind":"user","methods":{"cashOut(uint256,uint256,uint8[],string)":{"notice":"Processes a cash out. Only callable by the server signer."},"createGame(string,bytes32,string,uint8[],bytes)":{"notice":"Creates a new game placeholder on-chain. Requires server signature. Only gameSeedHash is needed for provable fairness."},"gameCounter()":{"notice":"Counter for unique on-chain game IDs"},"games(uint256)":{"notice":"Mapping from on-chain game ID to Game data"},"getGameDetails(uint256)":{"notice":"Get details for a specific game"},"getOnChainGameId(string)":{"notice":"Get on-chain ID from preliminary ID"},"markGameAsLost(uint256,uint8[],string)":{"notice":"Mark a game as lost. Only callable by the server signer. Stores the game seed for verification."},"preliminaryToOnChainId(string)":{"notice":"Mapping from preliminary game ID to on-chain game ID"},"serverSignerAddress()":{"notice":"Address authorized to sign parameters for critical actions (server backend)"},"setServerSignerAddress(address)":{"notice":"Sets the address authorized to sign critical parameters."},"withdrawFunds(uint256,address)":{"notice":"Withdraw contract funds to a specified recipient. Only callable by the owner. Funds represent implicitly collected fees (Total Bets - Total Net Payouts)."}},"version":1}},"settings":{"compilationTarget":{"contracts/DeathRaceGame.sol":"DeathRaceGame"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218","license":"MIT","urls":["bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32","dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"]},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"keccak256":"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1","license":"MIT","urls":["bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34","dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"]},"@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439","license":"MIT","urls":["bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c","dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0","license":"MIT","urls":["bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f","dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"]},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58","license":"MIT","urls":["bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2","dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","license":"MIT","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc","license":"MIT","urls":["bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7","dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"]},"contracts/DeathRaceGame.sol":{"keccak256":"0x758d5fe2efb64221714d06c7e71c8815b3ebc3db0a33404a01d4f1f176bf5f9e","license":"MIT","urls":["bzz-raw://119827e909dc39cc24c8a5998dc02ef83bcc18c8eb0cb9b017fe958d665a8a36","dweb:/ipfs/QmSPFC5ogPmmVgFHGNW9Xg6xS25fgAXGKtfawTtAsN7pJN"]}},"version":1},"zk_version":"1.5.12"},"eravm":{"bytecode":"000400000000000200190000000000020000006003100270000002dc0a3001970003000000a103550002000000010355000002dc0030019d00000001002001900000008002000039000000000600041100000000080004160000000205000039000000520000c13d000000400020043f0000000400a0008c000000800000413d000000000201043b000000e007200270000002e50070009c000000040310037000000005090000390000022c0000613d000002e60070009c000000aa0000613d000002e70070009c000002bf0000613d000000030b000039000002e80070009c000002ba0000613d001600200000003d000002e90070009c00000044051003700000006404100370000001e70000613d000002ea0070009c0000010b0000613d000002eb0070009c0000002402100370000000910000613d000002ec0070009c000000cd0000613d000002ed0070009c000002b50000613d000002ee0070009c000002750000613d000002ef0070009c000001cb0000613d000002f00070009c0000011d0000613d000002f10070009c000002a20000613d000002f20070009c000005920000c13d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000002de0010009c000005920000213d001702de0010019b0b6d0aa60000040f0000001706000029000000000006004b0000030a0000c13d000000400100043d0000006402100039000002f30300004100000000003204350000004402100039000002f4030000410000000000320435000000240210003900000026030000390000000000320435000002f502000041000000000021043500000004021000390000002003000039000000000032043500000084020000390b6d0abb0000040f000000400020043f000000000008004b000005920000c13d0000000103000039000000000030041b000000000103041a000002dd02100197000000000262019f000000000023041b0000000002000414000002de05100197000002dc0020009c000002dc02008041000000c001200210000002df011001c70000800d020000390000000303000039000002e0040000410b6d0af90000040f000000020100003900000000040004110000000100200190000005920000613d0000000103000039000000000031041b0000000302000039000000000102041a000002dd01100197000000000141019f000000000012041b000000800040043f0000000001000414000002dc0010009c000002dc01008041000000c001100210000002e1011001c70000800d02000039000002e2040000410b6d0af90000040f0000000100200190000005920000613d000000200100003900000100001004430000012000000443000002e30100004100000b6e0001042e00000000000a004b000005920000c13d000000800080043f0000000001000414000002dc0010009c000002dc01008041000000c001100210000002e1011001c70000800d0200003900000002030000390000000005000411000002e4040000410b6d0af90000040f0000000100200190000005920000613d000000000100001900000b6e0001042e0000004400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b001700000001001d000000000102043b001600000001001d000002de0010009c000005920000213d0b6d0aa60000040f0b6d0a920000040f000000170000006b000003000000c13d000000400100043d000000440210003900000311030000410000000000320435000002f50200004100000000002104350000002402100039000000200300003900000000003204350000000402100039000003840000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000203043b000001c001000039000000400010043f000000800000043f000000a00000043f000000c00000043f000000e00000043f000001000000043f000001200000043f0000006001000039000001400010043f000001600010043f000001800010043f000001a00010043f001700000002001d000000000020043f000000200090043f000100c10000003d00000b5f0000013d00000000030100190000000101100039000000000101041a000002de01100198000002c70000c13d0000030c01000041000001c00010043f0000001701000029000001c40010043f000001c00100003900000024020000390b6d0abb0000040f0000006400a0008c000005920000413d000000000008004b000005920000c13d000000000303043b001700000003001d000000000202043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d0000000403200039000000000331034f000000000303043b001600000003001d000002f80030009c000005920000213d00000024042000390000001602000029000000050220021000000000024200190000000000a2004b000005920000213d000000000205043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d001400040020003d0000001401100360000000000101043b001500000001001d000002f80010009c000005920000213d0000002402200039001300000002001d00000015012000290000000000a1004b000005920000213d001200000004001d00000000010b041a000002de01100197000000000016004b000003870000c13d0000001701000029000000000010043f000000200090043f000101000000003d00000b5f0000013d001100000001001d0000000101100039000000000101041a000002de00100198000003980000c13d0000030c01000041000000800010043f0000001701000029000000840010043f0000008001000039000000cb0000013d000000000008004b000005920000c13d0b6d0aa60000040f0000000101000039000000000201041a000002dd03200197000000000031041b0000000001000414000002de05200197000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800d020000390000000303000039000002e00400004100000000060000190000008c0000013d000000a400a0008c000005920000413d000000000603043b000002f80060009c000005920000213d00000023036000390000000000a3004b000005920000813d0000000403600039000000000731034f000000000707043b001500000007001d000002f80070009c000005920000213d0000002407600039001400000007001d00000015067000290000000000a6004b000005920000213d000000000505043b000002f80050009c000005920000213d00000023065000390000000000a6004b000005920000813d0000000406500039000000000661034f000000000606043b001300000006001d000002f80060009c000005920000213d0000002406500039001200000006001d00000013056000290000000000a5004b000005920000213d000000000404043b000002f80040009c000005920000213d00000023054000390000000000a5004b000005920000813d0000000405400039000000000551034f000000000505043b001700000005001d000002f80050009c000005920000213d000000240440003900000017050000290000000505500210001100000004001d000f00000005001d001000000045001d0000001000a0006b000005920000213d0000008404100370000000000404043b000002f80040009c000005920000213d00000023054000390000000000a5004b000005920000813d0000000405400039000000000551034f000000000505043b000e00000005001d000002f80050009c000005920000213d0000002405400039000d00000005001d0000000e045000290000000000a4004b000005920000213d00090000000a001d000000e004000039000000a00040043f0000001804000039000001800040043f000002f904000041000001a00040043f0000012004000039000000c00040043f0000002003300039000000000431034f0000001505000029000001c00050043f000000200300008a0000000003350170000c001f00500193000b00000003001d000001e003300039000001800000613d000001e005000039000000000604034f000000006706043c0000000005750436000000000035004b0000017c0000c13d0000000c05000029000000000005004b000a0003005002180000018f0000613d0000000b0440036000000000050304330000000a0600002900000000056501cf000000000565022f000000000404043b0000010006600089000000000464022f00000000046401cf000000000454019f00000000004304350000001504000029000001e0034000390000000000030435000000000202043b000000e00020043f0000001f02400039000000200300008a000000000732016f0000014002700039000001000020043f0000001204100360000001e0027000390000001306000029000000000062043500000000053601700000001f0660018f000800000007001d00000200027000390000000003520019000001a90000613d000000000704034f0000000008020019000000007907043c0000000008980436000000000038004b000001a50000c13d000000000006004b000001b10000613d000000000454034f00000003056002100000000006030433000101b00000003d00000b520000013d00000000004304350000001304000029000000000324001900000000000304350000001f03400039000000200400008a000000000343016f0000000002230019000000a00320008a000001200030043f000000170300002900000000003204350000001103000029000000000400001900000000060004110000000007000416000000170040006c0000040c0000813d000000000531034f000000000505043b000000ff0050008c000005920000213d0000002002200039000000000052043500000001044000390000002003300039000001c00000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000303043b000002f80030009c000005920000213d00000023023000390000000000a2004b000005920000813d0000000402300039000000000121034f000000000201043b000000240130003900000000030a00190b6d08490000040f0000000013010434001600000003001d000000400200043d001700000002001d0b6d08020000040f0000001603000029000000170100002900000000041300190000000402000039000000000024043500000020023000390000029d0000013d0000008400a0008c000005920000413d000000000008004b000005920000c13d000000000205043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d0000000403200039000000000331034f000000000303043b001700000003001d000002f80030009c000005920000213d00000024052000390000001702000029000000050220021000000000025200190000000000a2004b000005920000213d000000000204043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d0000000403200039000000000131034f000000000101043b001600000001001d000002f80010009c000005920000213d0000002402200039001500000002001d00000016012000290000000000a1004b000005920000213d001400000005001d0b6d0a920000040f0000000301000039000000000101041a000002de011001970000000002000411000000000012004b000003910000c13d000000020100036700110000000103530000000401100370000000000101043b001300000001001d000000000010043f0000000501000039000000200010043f000102200000003d00000b5f0000013d001200000001001d0000000101100039000000000101041a001002de0010019c000003a50000c13d000000400100043d0000030c020000410000000000210435000000040210003900000013030000290000000000320435000000cb0000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000000000010043f000000200090043f000102350000003d00000b5f0000013d0000000002010019001300000001001d0000000401100039000000000101041a001200000001001d0000000501200039000000000101041a001100000001001d0000000301200039000000000101041a001700000001001d0000000201200039000000000101041a001600000001001d0000000101200039000000000101041a001400000001001d000000000102041a001500000001001d00000006012000390b6d07c20000040f001000000001001d000000130100002900000007011000390b6d07c20000040f0000001402000029000002de02200197000000400400043d00000020034000390000000000230435000000400240003900000016030000290000000000320435000000150200002900000000002404350000001702000029000000ff0520018f000000030050008c000002fa0000813d001700000001001d000000c00240003900000100030000390000000000320435000000a002400039000000110300002900000000003204350000008002400039000000120300002900000000003204350000006002400039000000000052043500000100024000390000001001000029001400000004001d0b6d080e0000040f000000000201001900000014030000290000000001310049000000e003300039000000000013043500000017010000290b6d080e0000040f0000001403000029000003630000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000002f80010009c000005920000213d000000040110003900000000020a00190b6d082f0000040f0000001f0420018f000000200300008a00000000053201700000000206100367000000400100043d00000000035100190000028c0000613d000000000706034f0000000008010019000000007907043c0000000008980436000000000038004b000002880000c13d000000000004004b000002990000613d000000000556034f0000000304400210000000000603043300000000064601cf000000000646022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000464019f000000000043043500000000032100190000000404000039000000000043043500000020022000390b6d0acd0000040f000000000201041a000000400100043d0000000000210435000002c40000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000002de0010009c000005920000213d001702de0010019b0b6d0aa60000040f0000001704000029000000400100043d000000000004004b000003190000c13d0000004402100039000002f7030000410000000000320435000000240210003900000016030000390000037f0000013d000000000008004b000005920000c13d0000000101000039000000000101041a000002bd0000013d000000000008004b000005920000c13d00000000010b041a000002de01100197000002c20000013d000000000008004b000005920000c13d000000000105041a000000800010043f0000008001000039000000200200003900000000030000190b6d0ac30000040f0000030002000039000000400020043f000000000203041a000001c00020043f000001e00010043f0000000201300039000000000101041a000002000010043f0000000301300039000000000101041a000000ff0110018f000000020010008c000002fa0000213d000002200010043f0000000401300039000000000101041a000002400010043f0000000501300039000000000101041a000002600010043f0000000601300039001700000003001d0b6d07c20000040f000002800010043f000000170100002900000007011000390b6d07c20000040f000002a00010043f000000170100002900000008011000390b6d08820000040f000002c00010043f000000170100002900000009011000390b6d08820000040f000002e00010043f0000002001000039000000400300043d0000000001130436000001c00200043d0000000000210435000001e00100043d000002de01100197000000400230003900000000001204350000006001300039000002000200043d0000000000210435000002200100043d000000020010008c000003400000a13d0000030401000041000000000010043f0000002101000039000000040010043f000003050100004100000b6f000104300000001601000029000002de011001980000032c0000c13d000000400100043d000000440210003900000310030000410000000000320435000000240210003900000019030000390000037f0000013d0000000101000039000000000201041a000002dd03200197000000000363019f000000000031041b0000000001000414000002de05200197000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800d020000390000000303000039000002e0040000410000008c0000013d0000000303000039000000000203041a000002dd02200197000000000242019f000000000023041b0000000000410435000002dc0010009c000002dc0100804100000040011002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d020000390000000103000039000002e2040000410000008c0000013d001600000001001d0000000001000410001800000001001d0000800a0100003900000024030000390000000004000415000000180440008a00000005044002100000030d020000410b6d0ae20000040f0000001703000029000000000013004b000003660000a13d000000400100043d00000044021000390000030f03000041000000000032043500000024021000390000001d030000390000037f0000013d00000080023000390000000000120435000000a001300039000002400200043d0000000000210435000000c001300039000002600200043d0000000000210435000000e0023000390000000004030019001700000003001d0000014003000039000002800100043d000000000032043500000160024000390b6d080e0000040f000103520000003d00000b630000013d0000010004400039000002a00100043d00000000003404350b6d080e0000040f000103580000003d00000b630000013d0000012004400039000002c00100043d00000000003404350b6d08210000040f0001035e0000003d00000b630000013d0000014004400039000002e00100043d00000000003404350b6d08210000040f000000170300002900000000023100490000000001030019000002c50000013d0000000001000414000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800902000039000000160400002900000000050000190b6d0af90000040f0000006003100270000102dc0030019d000300000001035500170001002001930b6d0a400000040f000000170000006b000003790000613d0000000101000039000000000010041b0000008f0000013d000000400100043d00000044021000390000030e030000410000000000320435000000240210003900000011030000390000000000320435000002f502000041000000000021043500000004021000390000002003000039000000000032043500000064020000390b6d0abb0000040f000002f501000041000000800010043f0000002001000039000000840010043f0000001e01000039000000a40010043f0000030901000041000000c40010043f0000008001000039000003850000013d000000400100043d000000440210003900000312030000410000000000320435000000240210003900000018030000390000037f0000013d00000011010000290000000301100039000000000201041a000000ff0320018f000000030030008c000003b90000413d0000030401000041000000000010043f0000002101000039000000040010043f000000240200003900000000010000190b6d0abb0000040f00000012010000290000000301100039000000000201041a000000ff0320018f000000020030008c000002fa0000213d000000000003004b000003e20000c13d000000110300035f0000002403300370000000000303043b000000000003004b000003e50000c13d000000400100043d00000044021000390000031503000041000000000032043500000024021000390000000a030000390000037f0000013d000000000003004b000003e00000c13d000001000300008a000000000232016f00000002022001bf000000000021041b00000011010000290000000901100039001000000001001d00000016020000290b6d09fc0000040f0000001001000029000103c70000003d00000b680000013d0000001602000029000000050220027000000002030003670000000004000019000000010a00008a000000120b000029000000000024004b000004270000813d0000040005b00039000000000600001900000000070000190000001f0070008c000003db0000213d0000000008b3034f000000000808043b000000ff0080008c000005920000213d000103da0000003d00000b410000013d000003d20000013d0000000007140019000000000067041b0000000104400039000000000b050019000003cd0000013d0000030a01000041000001060000013d000000400100043d0000030a02000041000002270000013d000001000400008a000000000242016f00000001022001bf000000000021041b00000012020000290000000401200039000000000031041b0000000901200039001300000001001d00000017020000290b6d09fc0000040f0000001301000029000103f30000003d00000b680000013d0000001702000029000000050220027000000002030003670000000004000019000000010a00008a000000140b000029000000000024004b000004580000813d0000040005b00039000000000600001900000000070000190000001f0070008c000004070000213d0000000008b3034f000000000808043b000000ff0080008c000005920000213d000104060000003d00000b410000013d000003fe0000013d0000000007140019000000000067041b0000000104400039000000000b050019000003f90000013d000000410120008a000000200300008a000000000131016f000001400060043f000001600070043f000000800220008a000000800020043f000002fa0010009c000004190000413d0000030401000041000000000010043f0000004101000039000002fd0000013d0000008001100039000700000001001d000000400010043f000000a0010000390b6d0acd0000040f0000000302000039000000000202041a000602de0020019c000004370000c13d000002fe020000410000000701000029000000000021043500000004020000390b6d0abb0000040f00000016040000290000001f04400190000004760000613d00000000050000190000000006000019000000010900008a000000000a0b0019000000000046004b000004740000813d0000000007a3034f000000000707043b000000ff0070008c000005920000213d000104360000003d00000b380000013d0000042e0000013d000002fb02000041000000000020043f0000001c0010043f0000003c0200003900000000010000190b6d0acd0000040f000700000001001d0000000d010000290000000e0200002900000009030000290b6d08490000040f000000400300043d0000000024010434000000410040008c000004680000c13d00000040041000390000000004040433000002fd0040009c000004950000a13d000000640130003900000307020000410000000000210435000000440130003900000308020000410000000000210435000000240130003900000022020000390000000000210435000002f501000041000104560000003d00000b5a0000013d0000008402000039000004720000013d00000017040000290000001f04400190000004f20000613d00000000050000190000000006000019000000010900008a000000000a0b0019000000000046004b000004f00000813d0000000007a3034f000000000707043b000000ff0070008c000005920000213d000104670000003d00000b380000013d0000045f0000013d0000004401300039000002fc02000041000000000021043500000024013000390000001f020000390000000000210435000002f501000041000104710000003d00000b5a0000013d000000640200003900000000010300190b6d0abb0000040f0000000001210019000000000051041b00000011010000290000000601100039001600000001001d0001047b0000003d00000b030000013d000004fe0000c13d000000160100002900000015030000290b6d0a270000040f00000015010000290000001f0010008c000004bf0000a13d0000001601000029000000000010043f000000200200003900000000010000190b6d0acd0000040f000000200200008a000000150320017f000000020200036700000000040000190000001306000029000000000034004b0000000005640019000004cf0000813d000000000552034f000000000505043b000000000051041b000000200440003900000001011000390000048c0000013d0000006001100039000000000101043300000000020204330000006005300039000000000045043500000040043000390000000000240435000000f8011002700000002002300039000000000012043500000007010000290000000000130435000000000000043f0000000001000414000000000203001900000000030000190b6d07950000040f000000400300043d000000000001004b0000051b0000c13d00000003040003670000000102000031000000200100008a00000000051201700000001f0620018f0000000001530019000004b60000613d000000000704034f0000000008030019000000007907043c0000000008980436000000000018004b000004b20000c13d000000000006004b000004720000613d000000000454034f00000003056002100000000006010433000104bd0000003d00000b520000013d0000000000410435000004720000013d000000150000006b0000000001000019000004c60000613d000000140100002900000020011000390000000201100367000000000101043b00000015040000290000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f000004de0000013d000000150030006c000004db0000813d00000015030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000000252034f000000000202043b000000000232016f000000000021041b0000001501000029000000010110021000000001011001bf0000001602000029000000000012041b000000400100043d00000002030000390000000000310435000002dc0010009c000002dc0100804100000040011002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d020000390000030b0400004100000017050000290000008c0000013d0000000001210019000000000051041b00000012010000290000000601100039001700000001001d000000000101041a000000010310019000000001021002700000007f0220618f0000001f0020008c00000000010000390000000101002039000000000013004b000005020000613d0000030401000041000000000010043f0000002201000039000002fd0000013d000000170100002900000016030000290b6d0a270000040f00000016010000290000001f0010008c000005240000a13d0000001701000029000000000010043f000000200200003900000000010000190b6d0acd0000040f000000200200008a000000160320017f000000020200036700000000040000190000001506000029000000000034004b0000000005640019000005330000813d000000000552034f000000000505043b000000000051041b00000020044000390000000101100039000005120000013d000000000100043d000002de01100198000005940000c13d000000440130003900000306020000410000000000210435000000240130003900000018020000390000046d0000013d0000000202000367000000160000006b00000000010000190000052a0000613d0000001501200360000000000101043b00000016050000290000000303500210000000010400008a000000000334022f000000000343013f000000000131016f0000000103500210000000000131019f000005420000013d000000160030006c0000053f0000813d00000016030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000000452034f000000000404043b000000000334016f000000000031041b0000001601000029000000010110021000000001011001bf0000001703000029000000000013041b0000002401200370000000000301043b0000000001000414000000000003004b0000054c0000c13d00000010020000290b6d078c0000040f000005580000013d000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800902000039000000100400002900000000050000190b6d0af90000040f0000006003100270000102dc0030019d0003000000010355000000010120018f001700000001001d0b6d0a400000040f000000400100043d00000002020003670000000403200370000000000503043b000000170000006b0000056a0000c13d00000314030000410000000000310435000000040310003900000000005304350000002402200370000000000202043b0000002403100039000000000023043500000044020000390b6d0abb0000040f00000001020000390000000000210435000002dc0010009c000002dc0100804100000040011002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d0200003900000002030000390000030b040000410b6d0af90000040f0000000100200190000005920000613d00000002010003670000002402100370000000000202043b000000400300043d00000000002304350000000401100370000000000501043b000002dc0030009c000002dc0300804100000040013002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d020000390000000303000039000003130400004100000010060000290b6d0af90000040f0000000100200190000003760000c13d000000000100001900000b6f00010430000000060010006c000005c50000c13d0000001401000029000700020000036b000e00020010036b0000000b013000290000000b0000006b000005a20000613d0000000e0200035f0000000004030019000000002502043c0000000004540436000000000014004b0000059e0000c13d0000000c0000006b0000000e0400035f000d000b00400364000005b10000613d00000000020104330000000a0500002900000000025201cf000000000252022f0000000d0400035f000000000404043b0000010005500089000000000454022f00000000045401cf000000000224019f0000000000210435000000150200002900000000012300190000000404000039000000000041043500000020022000390000000001030019000900000002001d0b6d0acd0000040f000000000101041a000000000001004b000005c90000c13d0000000201000039000000000101041a000600000001001d000000010110003a000005d50000c13d0000030401000041000000000010043f0000001101000039000002fd0000013d000002fe0100004100000000001304350000000402000039000004720000013d000000400300043d001700000003001d000002ff01000041000105ce0000003d00000b5a0000013d0000002403300039000000140100002900000015020000290b6d0a720000040f00000017030000290000000002310049000004720000013d0000000202000039000000000012041b000000400100043d0000000b021000290000000b0000006b0000000e0500035f000005e10000613d0000000003010019000000005405043c0000000003430436000000000023004b000005dd0000c13d0000000c0000006b000005ee0000613d00000000030204330000000a0500002900000000035301cf000000000353022f0000000d0400035f000000000404043b0000010005500089000000000454022f00000000045401cf000000000334019f000000000032043500000015021000290000000403000039000000000032043500000009020000290b6d0acd0000040f0000000602000029000000000021041b000000400100043d000e00000001001d000003000010009c000004150000213d0000000e020000290000002001200039000000400010043f0000000000020435000000400100043d000d00000001001d000003010010009c000004150000213d0000000d010000290000014001100039000000400010043f0000800b0100003900000004030000390000000004000415000000190440008a000000050440021000000302020000410b6d0ae20000040f0000000d0400002900000040034000390000000002000416000900000003001d000000000023043500000020034000390000000002000411000400000003001d000000000023043500000000001404350000008001400039000300000001001d00000000000104350000006001400039000500000001001d0000000000010435000000070100035f0000002401100370000000000101043b000000a002400039000700000002001d0000000000120435000000400100043d000003000010009c000004150000213d0000002002100039000000400020043f00000000000104350000000d02000029000000c002200039000200000002001d00000000001204350000000003000031000000120100002900000013020000290b6d08490000040f0000000f020000290000003f02200039000000200300008a000000000232016f0000000d03000029000000e003300039001200000003001d0000000000130435000000400100043d0000000002210019000000000012004b00000000030000390000000103004039000002f80020009c000004150000213d0000000100300190000004150000c13d000000400020043f000000170200002900000000002104350000001003000029000000000030007c000005920000213d000000020200036700000000030100190000001005000029000000110050006b000006540000813d0000001104200360000000000404043b000000ff0040008c000005920000213d000000200330003900000000004304350000001104000029001100200040003d000006480000013d0000000d040000290000012002400039000f00000002001d0000000e0300002900000000003204350000010002400039001000000002001d00000000001204350000000601000029000000000010043f0000000501000039000000200010043f000106620000003d00000b5f0000013d0000000d020000290000000002020433000000000021041b00000004020000290000000002020433000002de042001970000000102100039000000000302041a000002dd03300197000000000343019f000000000032041b00000009020000290000000003020433001100000001001d0000000202100039000000000032041b00000005010000290000000001010433000000020010008c000002fa0000213d00000011050000290000000302500039000000000302041a000001000400008a000000000343016f000000000113019f000000000012041b000000030100002900000000010104330000000402500039000000000012041b000000050150003900000007020000290000000002020433000000000021041b00000002010000290000000001010433001300000001001d0000000021010434001700000002001d000e00000001001d000002f80010009c000004150000213d00000011010000290000000601100039000d00000001001d000106920000003d00000b030000013d000004fe0000c13d0000000d010000290000000e030000290b6d0a270000040f0000000e020000290000001f0020008c00090001002002180007000300200218000006af0000a13d0000000d01000029000000000010043f00000020020000390000000001000019001700000002001d0b6d0acd0000040f000000200200008a0000000e0220017f0000000003000019000000000023004b00000017050000290000001304500029000006ba0000813d0000000004040433000000000041041b00000020033000390000001704000029001700200040003d0000000101100039000006a40000013d0000000e0000006b0000000001000019000006b40000613d00000017010000290000000001010433000000010300008a0000000702300250000000000232013f000000000121016f00000009011001af000006c10000013d0000000e0020006c000006bf0000813d0000000702000029000106bf0000003d00000b4a0000013d000000090100002900000001011001bf0000000d02000029000000000012041b00000012010000290000000001010433001700000001001d0000000021010434000e00000002001d001300000001001d000002f80010009c000004150000213d00000011010000290000000701100039001200000001001d000106d00000003d00000b030000013d000004fe0000c13d000000120100002900000013030000290b6d0a270000040f00000013020000290000001f0020008c000d0001002002180009000300200218000006ec0000a13d0000001201000029000000000010043f000000000100001900000020020000390b6d0acd0000040f000000200200008a000000130220017f0000000003000019000000000023004b00000017050000290000001604500029000006f70000813d0000000004040433000000000041041b00000020033000390000001604000029001600200040003d0000000101100039000006e10000013d000000130000006b0000000001000019000006f10000613d0000000e010000290000000001010433000000010300008a0000000902300250000000000232013f000000000121016f0000000d011001af000006fe0000013d000000130020006c000006fc0000813d0000000902000029000106fc0000003d00000b4a0000013d0000000d0100002900000001011001bf0000001202000029000000000012041b000000100100002900000000010104330000000012010434001700000001001d001600000002001d000002f80020009c000004150000213d000000110100002900000008011000390001070b0000003d00000b110000013d000000000023004b0000071b0000813d0000000004000019000000170500002900000000060000190000001f0060008c000007150000213d000107140000003d00000b2e0000013d000007100000013d0000000005130019000000000045041b00000001033000390000001704000029001704000040003d0000070b0000013d00000016030000290000001f03300190000007280000613d00000000040000190000000005000019000000010800008a000000000035004b000007260000813d000107250000003d00000b1e0000013d000007210000013d0000000001210019000000000041041b0000000f0100002900000000010104330000000012010434001700000001001d001600000002001d000002f80020009c000004150000213d00000011010000290000000901100039000107330000003d00000b110000013d000000000023004b000007430000813d0000000004000019000000170500002900000000060000190000001f0060008c0000073d0000213d0001073c0000003d00000b2e0000013d000007380000013d0000000005130019000000000045041b00000001033000390000001704000029001704000040003d000007330000013d00000016030000290000001f03300190000007500000613d00000000040000190000000005000019000000010800008a000000000035004b0000074e0000813d0001074d0000003d00000b1e0000013d000007490000013d0000000001210019000000000041041b000000400100043d0000006002100039000000150300002900000000003204350000006002000039000000000221043600000080041000390000000b05400029000000020300036700000014063003600000000b0000006b000007620000613d000000000706034f0000000008040019000000007907043c0000000008980436000000000058004b0000075e0000c13d0000000c0000006b0000076f0000613d0000000b0660036000000000070504330000000a0800002900000000078701cf000000000787022f000000000606043b0000010008800089000000000686022f00000000068601cf000000000676019f000000000065043500000015044000290000000000040435000000000400041600000000004204350000002402300370000000000202043b00000040031000390000000000230435000002dc0010009c000002dc01008041000000400110021000000008020000290000008002200039000002dc0020009c000002dc020080410000006002200210000000000121019f0000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002df011001c70000800d0200003900000003030000390000030304000041000000060500002900000000060004110000008c0000013d000002dc0010009c000002dc01008041000000c0011002100b6d0af90000040f0000006003100270000102dc0030019d0003000000010355000000010120018f000000000001042d0001000000000002000100000003001d000002dc0010009c000002dc01008041000000c001100210000002dc0020009c000002dc020080410000004002200210000000000112019f00000316011001c700000001020000390b6d0afe0000040f00000001090000290000006003100270000002dc03300197000000200030008c000000200400003900000000040340190000001f0540018f00000020064001900000000004690019000007b00000613d000000000701034f000000007807043c0000000009890436000000000049004b000007ac0000c13d000000010220018f000000000005004b000007be0000613d000000000661034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000001020019000000000001042d0003000000000002000000000201041a000000010320019000000001052002700000007f0550618f0000001f0050008c00000000040000390000000104002039000000000043004b000007f80000c13d000000400400043d0000000006540436000000000003004b000007e40000613d000300000004001d000000000010043f00000020020000390000000001000019000200000005001d000100000006001d0b6d0acd0000040f000000010600002900000002050000290000000002000019000000000052004b000007e20000813d0000000003260019000000000401041a000000000043043500000020022000390000000101100039000007da0000013d0000000304000029000007ea0000013d000001000100008a000000000112016f0000000000160435000000000005004b000000200200003900000000020060390000003f01200039000000200200008a000000000221016f0000000001420019000000000021004b00000000020000390000000102004039000002f80010009c000007fc0000213d0000000100200190000007fc0000c13d000000400010043f0000000001040019000000000001042d0000030401000041000000000010043f0000002201000039000007ff0000013d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300000000004000019000000000034004b0000080b0000813d00000000052400190000000006140019000000000606043300000000006504350000002004400039000008030000013d00000000012300190000000000010435000000000001042d0000002004100039000000000301043300000000013204360000000002000019000000000032004b0000081a0000813d00000000051200190000000006240019000000000606043300000000006504350000002002200039000008120000013d000000000213001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d0000000003010433000000000032043500000000040000190000002002200039000000000034004b0000082d0000813d00000020011000390000000005010433000000ff0550018f00000000005204350000000104400039000008240000013d0000000001020019000000000001042d0000001f03100039000000000023004b0000000004000019000003170400404100000317052001970000031703300197000000000653013f000000000053004b00000000030000190000031703002041000003170060009c000000000304c019000000000003004b000008470000613d0000000203100367000000000303043b000002f80030009c000008470000213d00000020011000390000000004310019000000000024004b000008470000213d0000000002030019000000000001042d000000000100001900000b6f00010430000003180020009c0000087a0000813d00000000040100190000001f01200039000000200600008a000000000161016f0000003f01100039000000000561016f000000400100043d0000000005510019000000000015004b00000000070000390000000107004039000002f80050009c0000087a0000213d00000001007001900000087a0000c13d000000400050043f00000000052104360000000007420019000000000037004b000008800000213d00000000066201700000001f0720018f000000020440036700000000036500190000086a0000613d000000000804034f0000000009050019000000008a08043c0000000009a90436000000000039004b000008660000c13d000000000007004b000008770000613d000000000464034f0000000306700210000000000703043300000000076701cf000000000767022f000000000404043b0000010006600089000000000464022f00000000046401cf000000000474019f000000000043043500000000022500190000000000020435000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f00010430000000000100001900000b6f000104300025000000000002000000000301041a000000400200043d000d00000002001d000e00000003001d0000000002320436001700000002001d0001088b0000003d00000b680000013d0000000002000019001400000002001d000f00000001001d000000000601041a0000001f022001bf0000000e03000029000000000032004b000000f807600270000000f00a600270000000e80b600270000000e00c600270000000d801600270000000d00d600270000000c80e600270000000c00f600270000000b809600270000000b004600270000000a802600270000000a005600270002500980060027800240090006002780023008800600278002200800060027800210078006002780020007000600278001f006800600278001e006000600278001d005800600278001c005000600278001b0048006002780011004000600278001a003800600278001900300060027800180028006002780016002000600278001500180060027800130010006002780012000800600278001000ff006001930000092c0000813d00000000080700190000001706000029000003e0076000390000000000870435000000ff07a0018f000003c0086000390000000000780435000000ff07b0018f000003a0086000390000000000780435000000ff07c0018f00000380086000390000000000780435000000ff0710018f00000360086000390000000000780435000000ff07d0018f00000340086000390000000000780435000000ff07e0018f00000320086000390000000000780435000000ff07f0018f00000300086000390000000000780435000000ff0790018f000002e0086000390000000000780435000000ff0740018f000002c0086000390000000000780435000000ff0720018f000002a0086000390000000000780435000000ff0750018f000002800860003900000000007804350000002501000029000000ff0710018f000002600860003900000000007804350000002401000029000000ff0710018f000002400860003900000000007804350000002301000029000000ff0710018f000002200860003900000000007804350000002201000029000000ff0710018f000002000860003900000000007804350000002101000029000000ff0710018f000001e00860003900000000007804350000002001000029000000ff0710018f000001c00860003900000000007804350000001f01000029000000ff0710018f000001a00860003900000000007804350000001e01000029000000ff0710018f000001800860003900000000007804350000001d01000029000000ff0710018f000001600860003900000000007804350000001c01000029000000ff0710018f000001400860003900000000007804350000001b01000029000000ff0710018f000001200860003900000000007804350000001101000029000000ff0710018f000001000860003900000000007804350000001a01000029000000ff0710018f000000e00860003900000000007804350000001901000029000000ff0710018f000000c00860003900000000007804350000001801000029000000ff0710018f000000a00860003900000000007804350000001601000029000000ff0310018f000000800760003900000000003704350000001501000029000000ff0310018f000000600460003900000000003404350000001301000029000000ff0210018f000000400360003900000000002304350000001201000029000000ff0210018f0000002003600039000000000023043500000010010000290000000000160435000000140200002900000020022000390000000f010000290000000101100039001704000060003d0000088c0000013d0000001106000029000300000005001d000400000002001d000500000004001d000600000009001d00070000000f001d00080000000e001d00090000000d001d000a00000001001d000b0000000c001d000c0000000b001d000f0000000a001d000200000007001d0000001402000029000000000032004b000009420000813d000000170100002900000020071000390000001004000029000000000041043500000001022001bf000009430000013d000000170700002900000000010600190000001206000029000000000032004b0000094b0000813d000000ff0560018f000000000757043600000001052000390000094c0000013d0000000005020019000000000035004b0000001306000029000009520000813d000000ff0260018f000000000727043600000001055000390000001506000029000000000035004b000009580000813d000000ff0260018f000000000727043600000001055000390000001606000029000000000035004b0000095e0000813d000000ff0260018f000000000727043600000001055000390000000d040000290000001802000029000000000035004b000009640000813d000109640000003d00000b0d0000013d0000001902000029000000000035004b000009690000813d000109690000003d00000b0d0000013d0000001a02000029000000000035004b0000096e0000813d0001096e0000003d00000b0d0000013d000000000035004b000009730000813d000000ff0210018f000000000727043600000001055000390000000a010000290000001b08000029000000000035004b000009790000813d000109790000003d00000b2a0000013d0000001c08000029000000000035004b0000097e0000813d0001097e0000003d00000b2a0000013d0000001d08000029000000000035004b000009830000813d000109830000003d00000b2a0000013d0000001e08000029000000000035004b000009880000813d000109880000003d00000b2a0000013d0000001f08000029000000000035004b0000098d0000813d0001098d0000003d00000b2a0000013d0000002008000029000000000035004b000009920000813d000109920000003d00000b2a0000013d0000002108000029000000000035004b000009970000813d000109970000003d00000b2a0000013d0000002208000029000000000035004b0000099c0000813d0001099c0000003d00000b2a0000013d0000002308000029000000000035004b000009a10000813d000109a10000003d00000b2a0000013d0000002408000029000000000035004b000009a60000813d000109a60000003d00000b2a0000013d0000002502000029000000000035004b000009ab0000813d000109ab0000003d00000b0d0000013d0000000302000029000000000035004b000009b00000813d000109b00000003d00000b0d0000013d0000000402000029000000000035004b000009b50000813d000109b50000003d00000b0d0000013d0000000502000029000000000035004b000009ba0000813d000109ba0000003d00000b0d0000013d0000000602000029000000000035004b000009bf0000813d000109bf0000003d00000b0d0000013d0000000702000029000000000035004b000009c40000813d000109c40000003d00000b0d0000013d0000000802000029000000000035004b000009c90000813d000109c90000003d00000b0d0000013d0000000902000029000000000035004b000009ce0000813d000109ce0000003d00000b0d0000013d000000000035004b000009d30000813d000000ff0210018f000000000727043600000001055000390000000b01000029000000000035004b000009d90000813d000000ff0210018f000000000727043600000001055000390000000c02000029000000000035004b000009de0000813d000109de0000003d00000b0d0000013d0000000f02000029000000000035004b000009e30000813d000109e30000003d00000b0d0000013d000000000035004b000009e70000813d0000000202000029000000000727043600000000024700490000001f03200039000000200200008a000000000223016f0000000003420019000000000023004b00000000020000390000000102004039000002f80030009c000009f60000213d0000000100200190000009f60000c13d000000400030043f0000000001040019000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300002000000000002000003190020009c00000a210000813d0000000003020019000000000201041a000000000031041b000000000032004b00000a200000a13d000200000002001d000000000010043f00000020020000390000000001000019000100000003001d0b6d0acd0000040f00000001030000290000001f02300039000000050220027000000000022100190000001f0330019000000a170000613d00000003033002100000010003300089000000010420008a000000000504041a00000000053501cf000000000335022f000000000034041b00000002030000290000001f0330003900000005033002700000000001310019000000000012004b00000a200000813d000000000002041b000000010220003900000a1b0000013d000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300002000000000002000000200020008c00000a3f0000413d000000000010043f000200000002001d00000020020000390000000001000019000100000003001d0b6d0acd0000040f00000001040000290000001f024000390000000503200270000000200040008c000000000300401900000002020000290000001f02200039000000050220027000000000022100190000000001310019000000000021004b00000a3f0000813d000000000001041b000000010110003900000a3a0000013d000000000001042d000000010100003200000a6b0000613d000003180010009c00000a6c0000813d0000001f03100039000000200200008a000000000323016f0000003f03300039000000000423016f000000400300043d0000000004430019000000000034004b00000000050000390000000105004039000002f80040009c00000a6c0000213d000000010050019000000a6c0000c13d000000400040043f000000000513043600000000022101700000001f0310018f0000000001250019000000030400036700000a5e0000613d000000000604034f000000006706043c0000000005750436000000000015004b00000a5a0000c13d000000000003004b00000a6b0000613d000000000224034f0000000303300210000000000401043300000000043401cf000000000434022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210435000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300000000003230436000000200400008a00000000064201700000001f0720018f0000000005630019000000020110036700000a7f0000613d000000000801034f0000000009030019000000008a08043c0000000009a90436000000000059004b00000a7b0000c13d000000000007004b00000a8c0000613d000000000161034f0000000306700210000000000705043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f0000000000150435000000000123001900000000000104350000001f01200039000000000141016f0000000001130019000000000001042d000000000100041a000000020010008c00000a980000613d0000000201000039000000000010041b000000000001042d000000400100043d00000044021000390000031a03000041000000000032043500000024021000390000001f030000390000000000320435000002f502000041000000000021043500000004021000390000002003000039000000000032043500000064020000390b6d0abb0000040f0000000101000039000000000101041a000002de011001970000000002000411000000000021004b00000aad0000c13d000000000001042d000000400100043d00000044021000390000031b030000410000000000320435000002f50200004100000000002104350000002402100039000000200300003900000000003204350000000402100039000000000032043500000064020000390b6d0abb0000040f000000000001042f000002dc0010009c000002dc010080410000004001100210000002dc0020009c000002dc020080410000006002200210000000000112019f00000b6f00010430000002dc0010009c000002dc010080410000004001100210000002dc0020009c000002dc020080410000006002200210000000000112019f000000e002300210000000000121019f00000b6e0001042e000002dc0010009c000002dc010080410000004001100210000002dc0020009c000002dc020080410000006002200210000000000112019f0000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002df011001c700008010020000390b6d0afe0000040f000000010020019000000ae00000613d000000000101043b000000000001042d000000000100001900000b6f0001043000000000050100190000000000200443000000040030008c00000ae90000a13d000000050140027000000000010100310000000400100443000002dc0030009c000002dc0300804100000060013002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f0000031c011001c700000000020500190b6d0afe0000040f000000010020019000000af80000613d000000000101043b000000000001042d000000000001042f00000afc002104210000000102000039000000000001042d0000000002000019000000000001042d00000b01002104230000000102000039000000000001042d0000000002000019000000000001042d000000000101041a000000010010019000000001021002700000007f0220618f0000001f0020008c00000000030000390000000103002039000000000131013f0000000100100190000000010000013b000000ff0220018f00000000072704360000000105500039000000010000013b001300000001001d00000016020000290b6d09fc0000040f0000001301000029000000000010043f000000200200003900000000010000190b6d0acd0000040f000000160200002900000005022002700000000003000019000000010900008a000000010000013b00000017070000290000000076070434001700000007001d000000ff0660018f000000030750021000000000067601cf000000ff0770020f000000000787013f000000000474016f000000000446019f0000000105500039000000010000013b000000ff0280018f00000000072704360000000105500039000000010000013b0000000057050434000000ff0770018f000000030860021000000000078701cf000000ff0880020f000000000898013f000000000484016f000000000447019f0000000106600039000000010000013b000000030860021000000000078701cf000000ff0880020f000000000898013f000000000585016f000000000557019f0000000106600039000000200aa00039000000010000013b000000030970021000000000089801cf000000ff0990020f0000000009a9013f000000000696016f000000000668019f0000000107700039000000200bb00039000000010000013b000000f80220018f000000010300008a000000000223022f000000000232013f0000000003040433000000000223016f000000000021041b000000010000013b00000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000010000013b0000000000130435000000040130003900000020020000390000000000210435000000010000013b000000400200003900000000010000190b6d0acd0000040f000000010000013b000000000201001900000017040000290000000001410049000000200310008a000000010000013b000000000010043f000000200200003900000000010000190b6d0acd0000040f000000010000013b00000b6d0000043200000b6e0001042e00000b6f0001043000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff02000000000000000000000000000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e00200000000000000000000000000000000000020000000800000000000000000914f73c603b3b3971f909c636c872855e0b77692a50f2a2b6999628ee5af66a200000002000000000000000000000000000000400000010000000000000000009936746a4565f9766fa768f88f56a7487c78780ac179562773d1c75c5269537e00000000000000000000000000000000000000000000000000000000117a5b90000000000000000000000000000000000000000000000000000000001b31abda000000000000000000000000000000000000000000000000000000002e0be39a000000000000000000000000000000000000000000000000000000005271ee50000000000000000000000000000000000000000000000000000000006136e82300000000000000000000000000000000000000000000000000000000715018a600000000000000000000000000000000000000000000000000000000744bfe6100000000000000000000000000000000000000000000000000000000884f58c0000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000096696da100000000000000000000000000000000000000000000000000000000a40d8f4800000000000000000000000000000000000000000000000000000000b5cf199a00000000000000000000000000000000000000000000000000000000c9efbee600000000000000000000000000000000000000000000000000000000f2fde38b64647265737300000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f206108c379a0000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000020000000000000000000000000496e76616c696420736572766572206164647265737300000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff44656174685261636547616d653a63726561746547616d650000000000000000000000000000000000000000000000000000000000000000ffffffffffffff8019457468657265756d205369676e6564204d6573736167653a0a33320000000045434453413a20696e76616c6964207369676e6174757265206c656e677468007fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0f7c071fd00000000000000000000000000000000000000000000000000000000106cfcb100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffdf000000000000000000000000000000000000000000000000fffffffffffffebf796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d955391325ab4782178ec00656b6f3f3f73d1739ea9d5cba22c641e4b20767fbb571609434e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000045434453413a20696e76616c6964207369676e61747572650000000000000000756500000000000000000000000000000000000000000000000000000000000045434453413a20696e76616c6964207369676e6174757265202773272076616c4f6e6c79207365727665722063616e206d61726b2067616d65206c6f737400007ffcba5a000000000000000000000000000000000000000000000000000000004e27b06662347b2bd7ed6e8bde0a4b793dae7d7d05b102ef743cbd9c8d824e4e6faf77ea000000000000000000000000000000000000000000000000000000009cc7f708afc65944829bd487b90b72536b1951864fbfc14e125fc972a6507f395769746864726177616c206661696c6564000000000000000000000000000000496e73756666696369656e7420636f6e74726163742062616c616e6365000000496e76616c696420726563697069656e74206164647265737300000000000000576974686472617720616d6f756e74206d75737420626520706f7369746976654f6e6c79207365727665722063616e2063617368206f75740000000000000000ca18b3e4c1f4a1342b2e2e8b6c68bd49c1ff679624d67b618db852effe04dcbafa9c4e62000000000000000000000000000000000000000000000000000000005061796f75745a65726f0000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000015265656e7472616e637947756172643a207265656e7472616e742063616c6c004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657202000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ca609108b038ad6e04182ab24431a3694d9bf0ed91a05ead46e6be195921770c"},"evm":{"bytecode":{"object":"000400000000000200190000000000020000006003100270000002dc0a3001970003000000a103550002000000010355000002dc0030019d00000001002001900000008002000039000000000600041100000000080004160000000205000039000000520000c13d000000400020043f0000000400a0008c000000800000413d000000000201043b000000e007200270000002e50070009c000000040310037000000005090000390000022c0000613d000002e60070009c000000aa0000613d000002e70070009c000002bf0000613d000000030b000039000002e80070009c000002ba0000613d001600200000003d000002e90070009c00000044051003700000006404100370000001e70000613d000002ea0070009c0000010b0000613d000002eb0070009c0000002402100370000000910000613d000002ec0070009c000000cd0000613d000002ed0070009c000002b50000613d000002ee0070009c000002750000613d000002ef0070009c000001cb0000613d000002f00070009c0000011d0000613d000002f10070009c000002a20000613d000002f20070009c000005920000c13d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000002de0010009c000005920000213d001702de0010019b0b6d0aa60000040f0000001706000029000000000006004b0000030a0000c13d000000400100043d0000006402100039000002f30300004100000000003204350000004402100039000002f4030000410000000000320435000000240210003900000026030000390000000000320435000002f502000041000000000021043500000004021000390000002003000039000000000032043500000084020000390b6d0abb0000040f000000400020043f000000000008004b000005920000c13d0000000103000039000000000030041b000000000103041a000002dd02100197000000000262019f000000000023041b0000000002000414000002de05100197000002dc0020009c000002dc02008041000000c001200210000002df011001c70000800d020000390000000303000039000002e0040000410b6d0af90000040f000000020100003900000000040004110000000100200190000005920000613d0000000103000039000000000031041b0000000302000039000000000102041a000002dd01100197000000000141019f000000000012041b000000800040043f0000000001000414000002dc0010009c000002dc01008041000000c001100210000002e1011001c70000800d02000039000002e2040000410b6d0af90000040f0000000100200190000005920000613d000000200100003900000100001004430000012000000443000002e30100004100000b6e0001042e00000000000a004b000005920000c13d000000800080043f0000000001000414000002dc0010009c000002dc01008041000000c001100210000002e1011001c70000800d0200003900000002030000390000000005000411000002e4040000410b6d0af90000040f0000000100200190000005920000613d000000000100001900000b6e0001042e0000004400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b001700000001001d000000000102043b001600000001001d000002de0010009c000005920000213d0b6d0aa60000040f0b6d0a920000040f000000170000006b000003000000c13d000000400100043d000000440210003900000311030000410000000000320435000002f50200004100000000002104350000002402100039000000200300003900000000003204350000000402100039000003840000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000203043b000001c001000039000000400010043f000000800000043f000000a00000043f000000c00000043f000000e00000043f000001000000043f000001200000043f0000006001000039000001400010043f000001600010043f000001800010043f000001a00010043f001700000002001d000000000020043f000000200090043f000100c10000003d00000b5f0000013d00000000030100190000000101100039000000000101041a000002de01100198000002c70000c13d0000030c01000041000001c00010043f0000001701000029000001c40010043f000001c00100003900000024020000390b6d0abb0000040f0000006400a0008c000005920000413d000000000008004b000005920000c13d000000000303043b001700000003001d000000000202043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d0000000403200039000000000331034f000000000303043b001600000003001d000002f80030009c000005920000213d00000024042000390000001602000029000000050220021000000000024200190000000000a2004b000005920000213d000000000205043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d001400040020003d0000001401100360000000000101043b001500000001001d000002f80010009c000005920000213d0000002402200039001300000002001d00000015012000290000000000a1004b000005920000213d001200000004001d00000000010b041a000002de01100197000000000016004b000003870000c13d0000001701000029000000000010043f000000200090043f000101000000003d00000b5f0000013d001100000001001d0000000101100039000000000101041a000002de00100198000003980000c13d0000030c01000041000000800010043f0000001701000029000000840010043f0000008001000039000000cb0000013d000000000008004b000005920000c13d0b6d0aa60000040f0000000101000039000000000201041a000002dd03200197000000000031041b0000000001000414000002de05200197000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800d020000390000000303000039000002e00400004100000000060000190000008c0000013d000000a400a0008c000005920000413d000000000603043b000002f80060009c000005920000213d00000023036000390000000000a3004b000005920000813d0000000403600039000000000731034f000000000707043b001500000007001d000002f80070009c000005920000213d0000002407600039001400000007001d00000015067000290000000000a6004b000005920000213d000000000505043b000002f80050009c000005920000213d00000023065000390000000000a6004b000005920000813d0000000406500039000000000661034f000000000606043b001300000006001d000002f80060009c000005920000213d0000002406500039001200000006001d00000013056000290000000000a5004b000005920000213d000000000404043b000002f80040009c000005920000213d00000023054000390000000000a5004b000005920000813d0000000405400039000000000551034f000000000505043b001700000005001d000002f80050009c000005920000213d000000240440003900000017050000290000000505500210001100000004001d000f00000005001d001000000045001d0000001000a0006b000005920000213d0000008404100370000000000404043b000002f80040009c000005920000213d00000023054000390000000000a5004b000005920000813d0000000405400039000000000551034f000000000505043b000e00000005001d000002f80050009c000005920000213d0000002405400039000d00000005001d0000000e045000290000000000a4004b000005920000213d00090000000a001d000000e004000039000000a00040043f0000001804000039000001800040043f000002f904000041000001a00040043f0000012004000039000000c00040043f0000002003300039000000000431034f0000001505000029000001c00050043f000000200300008a0000000003350170000c001f00500193000b00000003001d000001e003300039000001800000613d000001e005000039000000000604034f000000006706043c0000000005750436000000000035004b0000017c0000c13d0000000c05000029000000000005004b000a0003005002180000018f0000613d0000000b0440036000000000050304330000000a0600002900000000056501cf000000000565022f000000000404043b0000010006600089000000000464022f00000000046401cf000000000454019f00000000004304350000001504000029000001e0034000390000000000030435000000000202043b000000e00020043f0000001f02400039000000200300008a000000000732016f0000014002700039000001000020043f0000001204100360000001e0027000390000001306000029000000000062043500000000053601700000001f0660018f000800000007001d00000200027000390000000003520019000001a90000613d000000000704034f0000000008020019000000007907043c0000000008980436000000000038004b000001a50000c13d000000000006004b000001b10000613d000000000454034f00000003056002100000000006030433000101b00000003d00000b520000013d00000000004304350000001304000029000000000324001900000000000304350000001f03400039000000200400008a000000000343016f0000000002230019000000a00320008a000001200030043f000000170300002900000000003204350000001103000029000000000400001900000000060004110000000007000416000000170040006c0000040c0000813d000000000531034f000000000505043b000000ff0050008c000005920000213d0000002002200039000000000052043500000001044000390000002003300039000001c00000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000303043b000002f80030009c000005920000213d00000023023000390000000000a2004b000005920000813d0000000402300039000000000121034f000000000201043b000000240130003900000000030a00190b6d08490000040f0000000013010434001600000003001d000000400200043d001700000002001d0b6d08020000040f0000001603000029000000170100002900000000041300190000000402000039000000000024043500000020023000390000029d0000013d0000008400a0008c000005920000413d000000000008004b000005920000c13d000000000205043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d0000000403200039000000000331034f000000000303043b001700000003001d000002f80030009c000005920000213d00000024052000390000001702000029000000050220021000000000025200190000000000a2004b000005920000213d000000000204043b000002f80020009c000005920000213d00000023032000390000000000a3004b000005920000813d0000000403200039000000000131034f000000000101043b001600000001001d000002f80010009c000005920000213d0000002402200039001500000002001d00000016012000290000000000a1004b000005920000213d001400000005001d0b6d0a920000040f0000000301000039000000000101041a000002de011001970000000002000411000000000012004b000003910000c13d000000020100036700110000000103530000000401100370000000000101043b001300000001001d000000000010043f0000000501000039000000200010043f000102200000003d00000b5f0000013d001200000001001d0000000101100039000000000101041a001002de0010019c000003a50000c13d000000400100043d0000030c020000410000000000210435000000040210003900000013030000290000000000320435000000cb0000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000000000010043f000000200090043f000102350000003d00000b5f0000013d0000000002010019001300000001001d0000000401100039000000000101041a001200000001001d0000000501200039000000000101041a001100000001001d0000000301200039000000000101041a001700000001001d0000000201200039000000000101041a001600000001001d0000000101200039000000000101041a001400000001001d000000000102041a001500000001001d00000006012000390b6d07c20000040f001000000001001d000000130100002900000007011000390b6d07c20000040f0000001402000029000002de02200197000000400400043d00000020034000390000000000230435000000400240003900000016030000290000000000320435000000150200002900000000002404350000001702000029000000ff0520018f000000030050008c000002fa0000813d001700000001001d000000c00240003900000100030000390000000000320435000000a002400039000000110300002900000000003204350000008002400039000000120300002900000000003204350000006002400039000000000052043500000100024000390000001001000029001400000004001d0b6d080e0000040f000000000201001900000014030000290000000001310049000000e003300039000000000013043500000017010000290b6d080e0000040f0000001403000029000003630000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000002f80010009c000005920000213d000000040110003900000000020a00190b6d082f0000040f0000001f0420018f000000200300008a00000000053201700000000206100367000000400100043d00000000035100190000028c0000613d000000000706034f0000000008010019000000007907043c0000000008980436000000000038004b000002880000c13d000000000004004b000002990000613d000000000556034f0000000304400210000000000603043300000000064601cf000000000646022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000464019f000000000043043500000000032100190000000404000039000000000043043500000020022000390b6d0acd0000040f000000000201041a000000400100043d0000000000210435000002c40000013d0000002400a0008c000005920000413d000000000008004b000005920000c13d000000000103043b000002de0010009c000005920000213d001702de0010019b0b6d0aa60000040f0000001704000029000000400100043d000000000004004b000003190000c13d0000004402100039000002f7030000410000000000320435000000240210003900000016030000390000037f0000013d000000000008004b000005920000c13d0000000101000039000000000101041a000002bd0000013d000000000008004b000005920000c13d00000000010b041a000002de01100197000002c20000013d000000000008004b000005920000c13d000000000105041a000000800010043f0000008001000039000000200200003900000000030000190b6d0ac30000040f0000030002000039000000400020043f000000000203041a000001c00020043f000001e00010043f0000000201300039000000000101041a000002000010043f0000000301300039000000000101041a000000ff0110018f000000020010008c000002fa0000213d000002200010043f0000000401300039000000000101041a000002400010043f0000000501300039000000000101041a000002600010043f0000000601300039001700000003001d0b6d07c20000040f000002800010043f000000170100002900000007011000390b6d07c20000040f000002a00010043f000000170100002900000008011000390b6d08820000040f000002c00010043f000000170100002900000009011000390b6d08820000040f000002e00010043f0000002001000039000000400300043d0000000001130436000001c00200043d0000000000210435000001e00100043d000002de01100197000000400230003900000000001204350000006001300039000002000200043d0000000000210435000002200100043d000000020010008c000003400000a13d0000030401000041000000000010043f0000002101000039000000040010043f000003050100004100000b6f000104300000001601000029000002de011001980000032c0000c13d000000400100043d000000440210003900000310030000410000000000320435000000240210003900000019030000390000037f0000013d0000000101000039000000000201041a000002dd03200197000000000363019f000000000031041b0000000001000414000002de05200197000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800d020000390000000303000039000002e0040000410000008c0000013d0000000303000039000000000203041a000002dd02200197000000000242019f000000000023041b0000000000410435000002dc0010009c000002dc0100804100000040011002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d020000390000000103000039000002e2040000410000008c0000013d001600000001001d0000000001000410001800000001001d0000800a0100003900000024030000390000000004000415000000180440008a00000005044002100000030d020000410b6d0ae20000040f0000001703000029000000000013004b000003660000a13d000000400100043d00000044021000390000030f03000041000000000032043500000024021000390000001d030000390000037f0000013d00000080023000390000000000120435000000a001300039000002400200043d0000000000210435000000c001300039000002600200043d0000000000210435000000e0023000390000000004030019001700000003001d0000014003000039000002800100043d000000000032043500000160024000390b6d080e0000040f000103520000003d00000b630000013d0000010004400039000002a00100043d00000000003404350b6d080e0000040f000103580000003d00000b630000013d0000012004400039000002c00100043d00000000003404350b6d08210000040f0001035e0000003d00000b630000013d0000014004400039000002e00100043d00000000003404350b6d08210000040f000000170300002900000000023100490000000001030019000002c50000013d0000000001000414000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800902000039000000160400002900000000050000190b6d0af90000040f0000006003100270000102dc0030019d000300000001035500170001002001930b6d0a400000040f000000170000006b000003790000613d0000000101000039000000000010041b0000008f0000013d000000400100043d00000044021000390000030e030000410000000000320435000000240210003900000011030000390000000000320435000002f502000041000000000021043500000004021000390000002003000039000000000032043500000064020000390b6d0abb0000040f000002f501000041000000800010043f0000002001000039000000840010043f0000001e01000039000000a40010043f0000030901000041000000c40010043f0000008001000039000003850000013d000000400100043d000000440210003900000312030000410000000000320435000000240210003900000018030000390000037f0000013d00000011010000290000000301100039000000000201041a000000ff0320018f000000030030008c000003b90000413d0000030401000041000000000010043f0000002101000039000000040010043f000000240200003900000000010000190b6d0abb0000040f00000012010000290000000301100039000000000201041a000000ff0320018f000000020030008c000002fa0000213d000000000003004b000003e20000c13d000000110300035f0000002403300370000000000303043b000000000003004b000003e50000c13d000000400100043d00000044021000390000031503000041000000000032043500000024021000390000000a030000390000037f0000013d000000000003004b000003e00000c13d000001000300008a000000000232016f00000002022001bf000000000021041b00000011010000290000000901100039001000000001001d00000016020000290b6d09fc0000040f0000001001000029000103c70000003d00000b680000013d0000001602000029000000050220027000000002030003670000000004000019000000010a00008a000000120b000029000000000024004b000004270000813d0000040005b00039000000000600001900000000070000190000001f0070008c000003db0000213d0000000008b3034f000000000808043b000000ff0080008c000005920000213d000103da0000003d00000b410000013d000003d20000013d0000000007140019000000000067041b0000000104400039000000000b050019000003cd0000013d0000030a01000041000001060000013d000000400100043d0000030a02000041000002270000013d000001000400008a000000000242016f00000001022001bf000000000021041b00000012020000290000000401200039000000000031041b0000000901200039001300000001001d00000017020000290b6d09fc0000040f0000001301000029000103f30000003d00000b680000013d0000001702000029000000050220027000000002030003670000000004000019000000010a00008a000000140b000029000000000024004b000004580000813d0000040005b00039000000000600001900000000070000190000001f0070008c000004070000213d0000000008b3034f000000000808043b000000ff0080008c000005920000213d000104060000003d00000b410000013d000003fe0000013d0000000007140019000000000067041b0000000104400039000000000b050019000003f90000013d000000410120008a000000200300008a000000000131016f000001400060043f000001600070043f000000800220008a000000800020043f000002fa0010009c000004190000413d0000030401000041000000000010043f0000004101000039000002fd0000013d0000008001100039000700000001001d000000400010043f000000a0010000390b6d0acd0000040f0000000302000039000000000202041a000602de0020019c000004370000c13d000002fe020000410000000701000029000000000021043500000004020000390b6d0abb0000040f00000016040000290000001f04400190000004760000613d00000000050000190000000006000019000000010900008a000000000a0b0019000000000046004b000004740000813d0000000007a3034f000000000707043b000000ff0070008c000005920000213d000104360000003d00000b380000013d0000042e0000013d000002fb02000041000000000020043f0000001c0010043f0000003c0200003900000000010000190b6d0acd0000040f000700000001001d0000000d010000290000000e0200002900000009030000290b6d08490000040f000000400300043d0000000024010434000000410040008c000004680000c13d00000040041000390000000004040433000002fd0040009c000004950000a13d000000640130003900000307020000410000000000210435000000440130003900000308020000410000000000210435000000240130003900000022020000390000000000210435000002f501000041000104560000003d00000b5a0000013d0000008402000039000004720000013d00000017040000290000001f04400190000004f20000613d00000000050000190000000006000019000000010900008a000000000a0b0019000000000046004b000004f00000813d0000000007a3034f000000000707043b000000ff0070008c000005920000213d000104670000003d00000b380000013d0000045f0000013d0000004401300039000002fc02000041000000000021043500000024013000390000001f020000390000000000210435000002f501000041000104710000003d00000b5a0000013d000000640200003900000000010300190b6d0abb0000040f0000000001210019000000000051041b00000011010000290000000601100039001600000001001d0001047b0000003d00000b030000013d000004fe0000c13d000000160100002900000015030000290b6d0a270000040f00000015010000290000001f0010008c000004bf0000a13d0000001601000029000000000010043f000000200200003900000000010000190b6d0acd0000040f000000200200008a000000150320017f000000020200036700000000040000190000001306000029000000000034004b0000000005640019000004cf0000813d000000000552034f000000000505043b000000000051041b000000200440003900000001011000390000048c0000013d0000006001100039000000000101043300000000020204330000006005300039000000000045043500000040043000390000000000240435000000f8011002700000002002300039000000000012043500000007010000290000000000130435000000000000043f0000000001000414000000000203001900000000030000190b6d07950000040f000000400300043d000000000001004b0000051b0000c13d00000003040003670000000102000031000000200100008a00000000051201700000001f0620018f0000000001530019000004b60000613d000000000704034f0000000008030019000000007907043c0000000008980436000000000018004b000004b20000c13d000000000006004b000004720000613d000000000454034f00000003056002100000000006010433000104bd0000003d00000b520000013d0000000000410435000004720000013d000000150000006b0000000001000019000004c60000613d000000140100002900000020011000390000000201100367000000000101043b00000015040000290000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f000004de0000013d000000150030006c000004db0000813d00000015030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000000252034f000000000202043b000000000232016f000000000021041b0000001501000029000000010110021000000001011001bf0000001602000029000000000012041b000000400100043d00000002030000390000000000310435000002dc0010009c000002dc0100804100000040011002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d020000390000030b0400004100000017050000290000008c0000013d0000000001210019000000000051041b00000012010000290000000601100039001700000001001d000000000101041a000000010310019000000001021002700000007f0220618f0000001f0020008c00000000010000390000000101002039000000000013004b000005020000613d0000030401000041000000000010043f0000002201000039000002fd0000013d000000170100002900000016030000290b6d0a270000040f00000016010000290000001f0010008c000005240000a13d0000001701000029000000000010043f000000200200003900000000010000190b6d0acd0000040f000000200200008a000000160320017f000000020200036700000000040000190000001506000029000000000034004b0000000005640019000005330000813d000000000552034f000000000505043b000000000051041b00000020044000390000000101100039000005120000013d000000000100043d000002de01100198000005940000c13d000000440130003900000306020000410000000000210435000000240130003900000018020000390000046d0000013d0000000202000367000000160000006b00000000010000190000052a0000613d0000001501200360000000000101043b00000016050000290000000303500210000000010400008a000000000334022f000000000343013f000000000131016f0000000103500210000000000131019f000005420000013d000000160030006c0000053f0000813d00000016030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f000000000452034f000000000404043b000000000334016f000000000031041b0000001601000029000000010110021000000001011001bf0000001703000029000000000013041b0000002401200370000000000301043b0000000001000414000000000003004b0000054c0000c13d00000010020000290b6d078c0000040f000005580000013d000002dc0010009c000002dc01008041000000c001100210000002df011001c70000800902000039000000100400002900000000050000190b6d0af90000040f0000006003100270000102dc0030019d0003000000010355000000010120018f001700000001001d0b6d0a400000040f000000400100043d00000002020003670000000403200370000000000503043b000000170000006b0000056a0000c13d00000314030000410000000000310435000000040310003900000000005304350000002402200370000000000202043b0000002403100039000000000023043500000044020000390b6d0abb0000040f00000001020000390000000000210435000002dc0010009c000002dc0100804100000040011002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d0200003900000002030000390000030b040000410b6d0af90000040f0000000100200190000005920000613d00000002010003670000002402100370000000000202043b000000400300043d00000000002304350000000401100370000000000501043b000002dc0030009c000002dc0300804100000040013002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002f6011001c70000800d020000390000000303000039000003130400004100000010060000290b6d0af90000040f0000000100200190000003760000c13d000000000100001900000b6f00010430000000060010006c000005c50000c13d0000001401000029000700020000036b000e00020010036b0000000b013000290000000b0000006b000005a20000613d0000000e0200035f0000000004030019000000002502043c0000000004540436000000000014004b0000059e0000c13d0000000c0000006b0000000e0400035f000d000b00400364000005b10000613d00000000020104330000000a0500002900000000025201cf000000000252022f0000000d0400035f000000000404043b0000010005500089000000000454022f00000000045401cf000000000224019f0000000000210435000000150200002900000000012300190000000404000039000000000041043500000020022000390000000001030019000900000002001d0b6d0acd0000040f000000000101041a000000000001004b000005c90000c13d0000000201000039000000000101041a000600000001001d000000010110003a000005d50000c13d0000030401000041000000000010043f0000001101000039000002fd0000013d000002fe0100004100000000001304350000000402000039000004720000013d000000400300043d001700000003001d000002ff01000041000105ce0000003d00000b5a0000013d0000002403300039000000140100002900000015020000290b6d0a720000040f00000017030000290000000002310049000004720000013d0000000202000039000000000012041b000000400100043d0000000b021000290000000b0000006b0000000e0500035f000005e10000613d0000000003010019000000005405043c0000000003430436000000000023004b000005dd0000c13d0000000c0000006b000005ee0000613d00000000030204330000000a0500002900000000035301cf000000000353022f0000000d0400035f000000000404043b0000010005500089000000000454022f00000000045401cf000000000334019f000000000032043500000015021000290000000403000039000000000032043500000009020000290b6d0acd0000040f0000000602000029000000000021041b000000400100043d000e00000001001d000003000010009c000004150000213d0000000e020000290000002001200039000000400010043f0000000000020435000000400100043d000d00000001001d000003010010009c000004150000213d0000000d010000290000014001100039000000400010043f0000800b0100003900000004030000390000000004000415000000190440008a000000050440021000000302020000410b6d0ae20000040f0000000d0400002900000040034000390000000002000416000900000003001d000000000023043500000020034000390000000002000411000400000003001d000000000023043500000000001404350000008001400039000300000001001d00000000000104350000006001400039000500000001001d0000000000010435000000070100035f0000002401100370000000000101043b000000a002400039000700000002001d0000000000120435000000400100043d000003000010009c000004150000213d0000002002100039000000400020043f00000000000104350000000d02000029000000c002200039000200000002001d00000000001204350000000003000031000000120100002900000013020000290b6d08490000040f0000000f020000290000003f02200039000000200300008a000000000232016f0000000d03000029000000e003300039001200000003001d0000000000130435000000400100043d0000000002210019000000000012004b00000000030000390000000103004039000002f80020009c000004150000213d0000000100300190000004150000c13d000000400020043f000000170200002900000000002104350000001003000029000000000030007c000005920000213d000000020200036700000000030100190000001005000029000000110050006b000006540000813d0000001104200360000000000404043b000000ff0040008c000005920000213d000000200330003900000000004304350000001104000029001100200040003d000006480000013d0000000d040000290000012002400039000f00000002001d0000000e0300002900000000003204350000010002400039001000000002001d00000000001204350000000601000029000000000010043f0000000501000039000000200010043f000106620000003d00000b5f0000013d0000000d020000290000000002020433000000000021041b00000004020000290000000002020433000002de042001970000000102100039000000000302041a000002dd03300197000000000343019f000000000032041b00000009020000290000000003020433001100000001001d0000000202100039000000000032041b00000005010000290000000001010433000000020010008c000002fa0000213d00000011050000290000000302500039000000000302041a000001000400008a000000000343016f000000000113019f000000000012041b000000030100002900000000010104330000000402500039000000000012041b000000050150003900000007020000290000000002020433000000000021041b00000002010000290000000001010433001300000001001d0000000021010434001700000002001d000e00000001001d000002f80010009c000004150000213d00000011010000290000000601100039000d00000001001d000106920000003d00000b030000013d000004fe0000c13d0000000d010000290000000e030000290b6d0a270000040f0000000e020000290000001f0020008c00090001002002180007000300200218000006af0000a13d0000000d01000029000000000010043f00000020020000390000000001000019001700000002001d0b6d0acd0000040f000000200200008a0000000e0220017f0000000003000019000000000023004b00000017050000290000001304500029000006ba0000813d0000000004040433000000000041041b00000020033000390000001704000029001700200040003d0000000101100039000006a40000013d0000000e0000006b0000000001000019000006b40000613d00000017010000290000000001010433000000010300008a0000000702300250000000000232013f000000000121016f00000009011001af000006c10000013d0000000e0020006c000006bf0000813d0000000702000029000106bf0000003d00000b4a0000013d000000090100002900000001011001bf0000000d02000029000000000012041b00000012010000290000000001010433001700000001001d0000000021010434000e00000002001d001300000001001d000002f80010009c000004150000213d00000011010000290000000701100039001200000001001d000106d00000003d00000b030000013d000004fe0000c13d000000120100002900000013030000290b6d0a270000040f00000013020000290000001f0020008c000d0001002002180009000300200218000006ec0000a13d0000001201000029000000000010043f000000000100001900000020020000390b6d0acd0000040f000000200200008a000000130220017f0000000003000019000000000023004b00000017050000290000001604500029000006f70000813d0000000004040433000000000041041b00000020033000390000001604000029001600200040003d0000000101100039000006e10000013d000000130000006b0000000001000019000006f10000613d0000000e010000290000000001010433000000010300008a0000000902300250000000000232013f000000000121016f0000000d011001af000006fe0000013d000000130020006c000006fc0000813d0000000902000029000106fc0000003d00000b4a0000013d0000000d0100002900000001011001bf0000001202000029000000000012041b000000100100002900000000010104330000000012010434001700000001001d001600000002001d000002f80020009c000004150000213d000000110100002900000008011000390001070b0000003d00000b110000013d000000000023004b0000071b0000813d0000000004000019000000170500002900000000060000190000001f0060008c000007150000213d000107140000003d00000b2e0000013d000007100000013d0000000005130019000000000045041b00000001033000390000001704000029001704000040003d0000070b0000013d00000016030000290000001f03300190000007280000613d00000000040000190000000005000019000000010800008a000000000035004b000007260000813d000107250000003d00000b1e0000013d000007210000013d0000000001210019000000000041041b0000000f0100002900000000010104330000000012010434001700000001001d001600000002001d000002f80020009c000004150000213d00000011010000290000000901100039000107330000003d00000b110000013d000000000023004b000007430000813d0000000004000019000000170500002900000000060000190000001f0060008c0000073d0000213d0001073c0000003d00000b2e0000013d000007380000013d0000000005130019000000000045041b00000001033000390000001704000029001704000040003d000007330000013d00000016030000290000001f03300190000007500000613d00000000040000190000000005000019000000010800008a000000000035004b0000074e0000813d0001074d0000003d00000b1e0000013d000007490000013d0000000001210019000000000041041b000000400100043d0000006002100039000000150300002900000000003204350000006002000039000000000221043600000080041000390000000b05400029000000020300036700000014063003600000000b0000006b000007620000613d000000000706034f0000000008040019000000007907043c0000000008980436000000000058004b0000075e0000c13d0000000c0000006b0000076f0000613d0000000b0660036000000000070504330000000a0800002900000000078701cf000000000787022f000000000606043b0000010008800089000000000686022f00000000068601cf000000000676019f000000000065043500000015044000290000000000040435000000000400041600000000004204350000002402300370000000000202043b00000040031000390000000000230435000002dc0010009c000002dc01008041000000400110021000000008020000290000008002200039000002dc0020009c000002dc020080410000006002200210000000000121019f0000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002df011001c70000800d0200003900000003030000390000030304000041000000060500002900000000060004110000008c0000013d000002dc0010009c000002dc01008041000000c0011002100b6d0af90000040f0000006003100270000102dc0030019d0003000000010355000000010120018f000000000001042d0001000000000002000100000003001d000002dc0010009c000002dc01008041000000c001100210000002dc0020009c000002dc020080410000004002200210000000000112019f00000316011001c700000001020000390b6d0afe0000040f00000001090000290000006003100270000002dc03300197000000200030008c000000200400003900000000040340190000001f0540018f00000020064001900000000004690019000007b00000613d000000000701034f000000007807043c0000000009890436000000000049004b000007ac0000c13d000000010220018f000000000005004b000007be0000613d000000000661034f0000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f0000000000540435000100000003001f00030000000103550000000001020019000000000001042d0003000000000002000000000201041a000000010320019000000001052002700000007f0550618f0000001f0050008c00000000040000390000000104002039000000000043004b000007f80000c13d000000400400043d0000000006540436000000000003004b000007e40000613d000300000004001d000000000010043f00000020020000390000000001000019000200000005001d000100000006001d0b6d0acd0000040f000000010600002900000002050000290000000002000019000000000052004b000007e20000813d0000000003260019000000000401041a000000000043043500000020022000390000000101100039000007da0000013d0000000304000029000007ea0000013d000001000100008a000000000112016f0000000000160435000000000005004b000000200200003900000000020060390000003f01200039000000200200008a000000000221016f0000000001420019000000000021004b00000000020000390000000102004039000002f80010009c000007fc0000213d0000000100200190000007fc0000c13d000000400010043f0000000001040019000000000001042d0000030401000041000000000010043f0000002201000039000007ff0000013d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300000000004000019000000000034004b0000080b0000813d00000000052400190000000006140019000000000606043300000000006504350000002004400039000008030000013d00000000012300190000000000010435000000000001042d0000002004100039000000000301043300000000013204360000000002000019000000000032004b0000081a0000813d00000000051200190000000006240019000000000606043300000000006504350000002002200039000008120000013d000000000213001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d0000000003010433000000000032043500000000040000190000002002200039000000000034004b0000082d0000813d00000020011000390000000005010433000000ff0550018f00000000005204350000000104400039000008240000013d0000000001020019000000000001042d0000001f03100039000000000023004b0000000004000019000003170400404100000317052001970000031703300197000000000653013f000000000053004b00000000030000190000031703002041000003170060009c000000000304c019000000000003004b000008470000613d0000000203100367000000000303043b000002f80030009c000008470000213d00000020011000390000000004310019000000000024004b000008470000213d0000000002030019000000000001042d000000000100001900000b6f00010430000003180020009c0000087a0000813d00000000040100190000001f01200039000000200600008a000000000161016f0000003f01100039000000000561016f000000400100043d0000000005510019000000000015004b00000000070000390000000107004039000002f80050009c0000087a0000213d00000001007001900000087a0000c13d000000400050043f00000000052104360000000007420019000000000037004b000008800000213d00000000066201700000001f0720018f000000020440036700000000036500190000086a0000613d000000000804034f0000000009050019000000008a08043c0000000009a90436000000000039004b000008660000c13d000000000007004b000008770000613d000000000464034f0000000306700210000000000703043300000000076701cf000000000767022f000000000404043b0000010006600089000000000464022f00000000046401cf000000000474019f000000000043043500000000022500190000000000020435000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f00010430000000000100001900000b6f000104300025000000000002000000000301041a000000400200043d000d00000002001d000e00000003001d0000000002320436001700000002001d0001088b0000003d00000b680000013d0000000002000019001400000002001d000f00000001001d000000000601041a0000001f022001bf0000000e03000029000000000032004b000000f807600270000000f00a600270000000e80b600270000000e00c600270000000d801600270000000d00d600270000000c80e600270000000c00f600270000000b809600270000000b004600270000000a802600270000000a005600270002500980060027800240090006002780023008800600278002200800060027800210078006002780020007000600278001f006800600278001e006000600278001d005800600278001c005000600278001b0048006002780011004000600278001a003800600278001900300060027800180028006002780016002000600278001500180060027800130010006002780012000800600278001000ff006001930000092c0000813d00000000080700190000001706000029000003e0076000390000000000870435000000ff07a0018f000003c0086000390000000000780435000000ff07b0018f000003a0086000390000000000780435000000ff07c0018f00000380086000390000000000780435000000ff0710018f00000360086000390000000000780435000000ff07d0018f00000340086000390000000000780435000000ff07e0018f00000320086000390000000000780435000000ff07f0018f00000300086000390000000000780435000000ff0790018f000002e0086000390000000000780435000000ff0740018f000002c0086000390000000000780435000000ff0720018f000002a0086000390000000000780435000000ff0750018f000002800860003900000000007804350000002501000029000000ff0710018f000002600860003900000000007804350000002401000029000000ff0710018f000002400860003900000000007804350000002301000029000000ff0710018f000002200860003900000000007804350000002201000029000000ff0710018f000002000860003900000000007804350000002101000029000000ff0710018f000001e00860003900000000007804350000002001000029000000ff0710018f000001c00860003900000000007804350000001f01000029000000ff0710018f000001a00860003900000000007804350000001e01000029000000ff0710018f000001800860003900000000007804350000001d01000029000000ff0710018f000001600860003900000000007804350000001c01000029000000ff0710018f000001400860003900000000007804350000001b01000029000000ff0710018f000001200860003900000000007804350000001101000029000000ff0710018f000001000860003900000000007804350000001a01000029000000ff0710018f000000e00860003900000000007804350000001901000029000000ff0710018f000000c00860003900000000007804350000001801000029000000ff0710018f000000a00860003900000000007804350000001601000029000000ff0310018f000000800760003900000000003704350000001501000029000000ff0310018f000000600460003900000000003404350000001301000029000000ff0210018f000000400360003900000000002304350000001201000029000000ff0210018f0000002003600039000000000023043500000010010000290000000000160435000000140200002900000020022000390000000f010000290000000101100039001704000060003d0000088c0000013d0000001106000029000300000005001d000400000002001d000500000004001d000600000009001d00070000000f001d00080000000e001d00090000000d001d000a00000001001d000b0000000c001d000c0000000b001d000f0000000a001d000200000007001d0000001402000029000000000032004b000009420000813d000000170100002900000020071000390000001004000029000000000041043500000001022001bf000009430000013d000000170700002900000000010600190000001206000029000000000032004b0000094b0000813d000000ff0560018f000000000757043600000001052000390000094c0000013d0000000005020019000000000035004b0000001306000029000009520000813d000000ff0260018f000000000727043600000001055000390000001506000029000000000035004b000009580000813d000000ff0260018f000000000727043600000001055000390000001606000029000000000035004b0000095e0000813d000000ff0260018f000000000727043600000001055000390000000d040000290000001802000029000000000035004b000009640000813d000109640000003d00000b0d0000013d0000001902000029000000000035004b000009690000813d000109690000003d00000b0d0000013d0000001a02000029000000000035004b0000096e0000813d0001096e0000003d00000b0d0000013d000000000035004b000009730000813d000000ff0210018f000000000727043600000001055000390000000a010000290000001b08000029000000000035004b000009790000813d000109790000003d00000b2a0000013d0000001c08000029000000000035004b0000097e0000813d0001097e0000003d00000b2a0000013d0000001d08000029000000000035004b000009830000813d000109830000003d00000b2a0000013d0000001e08000029000000000035004b000009880000813d000109880000003d00000b2a0000013d0000001f08000029000000000035004b0000098d0000813d0001098d0000003d00000b2a0000013d0000002008000029000000000035004b000009920000813d000109920000003d00000b2a0000013d0000002108000029000000000035004b000009970000813d000109970000003d00000b2a0000013d0000002208000029000000000035004b0000099c0000813d0001099c0000003d00000b2a0000013d0000002308000029000000000035004b000009a10000813d000109a10000003d00000b2a0000013d0000002408000029000000000035004b000009a60000813d000109a60000003d00000b2a0000013d0000002502000029000000000035004b000009ab0000813d000109ab0000003d00000b0d0000013d0000000302000029000000000035004b000009b00000813d000109b00000003d00000b0d0000013d0000000402000029000000000035004b000009b50000813d000109b50000003d00000b0d0000013d0000000502000029000000000035004b000009ba0000813d000109ba0000003d00000b0d0000013d0000000602000029000000000035004b000009bf0000813d000109bf0000003d00000b0d0000013d0000000702000029000000000035004b000009c40000813d000109c40000003d00000b0d0000013d0000000802000029000000000035004b000009c90000813d000109c90000003d00000b0d0000013d0000000902000029000000000035004b000009ce0000813d000109ce0000003d00000b0d0000013d000000000035004b000009d30000813d000000ff0210018f000000000727043600000001055000390000000b01000029000000000035004b000009d90000813d000000ff0210018f000000000727043600000001055000390000000c02000029000000000035004b000009de0000813d000109de0000003d00000b0d0000013d0000000f02000029000000000035004b000009e30000813d000109e30000003d00000b0d0000013d000000000035004b000009e70000813d0000000202000029000000000727043600000000024700490000001f03200039000000200200008a000000000223016f0000000003420019000000000023004b00000000020000390000000102004039000002f80030009c000009f60000213d0000000100200190000009f60000c13d000000400030043f0000000001040019000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300002000000000002000003190020009c00000a210000813d0000000003020019000000000201041a000000000031041b000000000032004b00000a200000a13d000200000002001d000000000010043f00000020020000390000000001000019000100000003001d0b6d0acd0000040f00000001030000290000001f02300039000000050220027000000000022100190000001f0330019000000a170000613d00000003033002100000010003300089000000010420008a000000000504041a00000000053501cf000000000335022f000000000034041b00000002030000290000001f0330003900000005033002700000000001310019000000000012004b00000a200000813d000000000002041b000000010220003900000a1b0000013d000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300002000000000002000000200020008c00000a3f0000413d000000000010043f000200000002001d00000020020000390000000001000019000100000003001d0b6d0acd0000040f00000001040000290000001f024000390000000503200270000000200040008c000000000300401900000002020000290000001f02200039000000050220027000000000022100190000000001310019000000000021004b00000a3f0000813d000000000001041b000000010110003900000a3a0000013d000000000001042d000000010100003200000a6b0000613d000003180010009c00000a6c0000813d0000001f03100039000000200200008a000000000323016f0000003f03300039000000000423016f000000400300043d0000000004430019000000000034004b00000000050000390000000105004039000002f80040009c00000a6c0000213d000000010050019000000a6c0000c13d000000400040043f000000000513043600000000022101700000001f0310018f0000000001250019000000030400036700000a5e0000613d000000000604034f000000006706043c0000000005750436000000000015004b00000a5a0000c13d000000000003004b00000a6b0000613d000000000224034f0000000303300210000000000401043300000000043401cf000000000434022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000242019f0000000000210435000000000001042d0000030401000041000000000010043f0000004101000039000000040010043f000003050100004100000b6f000104300000000003230436000000200400008a00000000064201700000001f0720018f0000000005630019000000020110036700000a7f0000613d000000000801034f0000000009030019000000008a08043c0000000009a90436000000000059004b00000a7b0000c13d000000000007004b00000a8c0000613d000000000161034f0000000306700210000000000705043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f0000000000150435000000000123001900000000000104350000001f01200039000000000141016f0000000001130019000000000001042d000000000100041a000000020010008c00000a980000613d0000000201000039000000000010041b000000000001042d000000400100043d00000044021000390000031a03000041000000000032043500000024021000390000001f030000390000000000320435000002f502000041000000000021043500000004021000390000002003000039000000000032043500000064020000390b6d0abb0000040f0000000101000039000000000101041a000002de011001970000000002000411000000000021004b00000aad0000c13d000000000001042d000000400100043d00000044021000390000031b030000410000000000320435000002f50200004100000000002104350000002402100039000000200300003900000000003204350000000402100039000000000032043500000064020000390b6d0abb0000040f000000000001042f000002dc0010009c000002dc010080410000004001100210000002dc0020009c000002dc020080410000006002200210000000000112019f00000b6f00010430000002dc0010009c000002dc010080410000004001100210000002dc0020009c000002dc020080410000006002200210000000000112019f000000e002300210000000000121019f00000b6e0001042e000002dc0010009c000002dc010080410000004001100210000002dc0020009c000002dc020080410000006002200210000000000112019f0000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f000002df011001c700008010020000390b6d0afe0000040f000000010020019000000ae00000613d000000000101043b000000000001042d000000000100001900000b6f0001043000000000050100190000000000200443000000040030008c00000ae90000a13d000000050140027000000000010100310000000400100443000002dc0030009c000002dc0300804100000060013002100000000002000414000002dc0020009c000002dc02008041000000c002200210000000000112019f0000031c011001c700000000020500190b6d0afe0000040f000000010020019000000af80000613d000000000101043b000000000001042d000000000001042f00000afc002104210000000102000039000000000001042d0000000002000019000000000001042d00000b01002104230000000102000039000000000001042d0000000002000019000000000001042d000000000101041a000000010010019000000001021002700000007f0220618f0000001f0020008c00000000030000390000000103002039000000000131013f0000000100100190000000010000013b000000ff0220018f00000000072704360000000105500039000000010000013b001300000001001d00000016020000290b6d09fc0000040f0000001301000029000000000010043f000000200200003900000000010000190b6d0acd0000040f000000160200002900000005022002700000000003000019000000010900008a000000010000013b00000017070000290000000076070434001700000007001d000000ff0660018f000000030750021000000000067601cf000000ff0770020f000000000787013f000000000474016f000000000446019f0000000105500039000000010000013b000000ff0280018f00000000072704360000000105500039000000010000013b0000000057050434000000ff0770018f000000030860021000000000078701cf000000ff0880020f000000000898013f000000000484016f000000000447019f0000000106600039000000010000013b000000030860021000000000078701cf000000ff0880020f000000000898013f000000000585016f000000000557019f0000000106600039000000200aa00039000000010000013b000000030970021000000000089801cf000000ff0990020f0000000009a9013f000000000696016f000000000668019f0000000107700039000000200bb00039000000010000013b000000f80220018f000000010300008a000000000223022f000000000232013f0000000003040433000000000223016f000000000021041b000000010000013b00000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000010000013b0000000000130435000000040130003900000020020000390000000000210435000000010000013b000000400200003900000000010000190b6d0acd0000040f000000010000013b000000000201001900000017040000290000000001410049000000200310008a000000010000013b000000000010043f000000200200003900000000010000190b6d0acd0000040f000000010000013b00000b6d0000043200000b6e0001042e00000b6f0001043000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff02000000000000000000000000000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e00200000000000000000000000000000000000020000000800000000000000000914f73c603b3b3971f909c636c872855e0b77692a50f2a2b6999628ee5af66a200000002000000000000000000000000000000400000010000000000000000009936746a4565f9766fa768f88f56a7487c78780ac179562773d1c75c5269537e00000000000000000000000000000000000000000000000000000000117a5b90000000000000000000000000000000000000000000000000000000001b31abda000000000000000000000000000000000000000000000000000000002e0be39a000000000000000000000000000000000000000000000000000000005271ee50000000000000000000000000000000000000000000000000000000006136e82300000000000000000000000000000000000000000000000000000000715018a600000000000000000000000000000000000000000000000000000000744bfe6100000000000000000000000000000000000000000000000000000000884f58c0000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000096696da100000000000000000000000000000000000000000000000000000000a40d8f4800000000000000000000000000000000000000000000000000000000b5cf199a00000000000000000000000000000000000000000000000000000000c9efbee600000000000000000000000000000000000000000000000000000000f2fde38b64647265737300000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f206108c379a0000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000020000000000000000000000000496e76616c696420736572766572206164647265737300000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff44656174685261636547616d653a63726561746547616d650000000000000000000000000000000000000000000000000000000000000000ffffffffffffff8019457468657265756d205369676e6564204d6573736167653a0a33320000000045434453413a20696e76616c6964207369676e6174757265206c656e677468007fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0f7c071fd00000000000000000000000000000000000000000000000000000000106cfcb100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffdf000000000000000000000000000000000000000000000000fffffffffffffebf796b89b91644bc98cd93958e4c9038275d622183e25ac5af08cc6b5d955391325ab4782178ec00656b6f3f3f73d1739ea9d5cba22c641e4b20767fbb571609434e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000045434453413a20696e76616c6964207369676e61747572650000000000000000756500000000000000000000000000000000000000000000000000000000000045434453413a20696e76616c6964207369676e6174757265202773272076616c4f6e6c79207365727665722063616e206d61726b2067616d65206c6f737400007ffcba5a000000000000000000000000000000000000000000000000000000004e27b06662347b2bd7ed6e8bde0a4b793dae7d7d05b102ef743cbd9c8d824e4e6faf77ea000000000000000000000000000000000000000000000000000000009cc7f708afc65944829bd487b90b72536b1951864fbfc14e125fc972a6507f395769746864726177616c206661696c6564000000000000000000000000000000496e73756666696369656e7420636f6e74726163742062616c616e6365000000496e76616c696420726563697069656e74206164647265737300000000000000576974686472617720616d6f756e74206d75737420626520706f7369746976654f6e6c79207365727665722063616e2063617368206f75740000000000000000ca18b3e4c1f4a1342b2e2e8b6c68bd49c1ff679624d67b618db852effe04dcbafa9c4e62000000000000000000000000000000000000000000000000000000005061796f75745a65726f0000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000015265656e7472616e637947756172643a207265656e7472616e742063616c6c004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657202000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ca609108b038ad6e04182ab24431a3694d9bf0ed91a05ead46e6be195921770c"},"methodIdentifiers":{"cashOut(uint256,uint256,uint8[],string)":"6136e823","createGame(string,bytes32,string,uint8[],bytes)":"b5cf199a","gameCounter()":"2e0be39a","games(uint256)":"117a5b90","getGameDetails(uint256)":"1b31abda","getOnChainGameId(string)":"96696da1","markGameAsLost(uint256,uint8[],string)":"884f58c0","owner()":"8da5cb5b","preliminaryToOnChainId(string)":"a40d8f48","renounceOwnership()":"715018a6","serverSignerAddress()":"5271ee50","setServerSignerAddress(address)":"c9efbee6","transferOwnership(address)":"f2fde38b","withdrawFunds(uint256,address)":"744bfe61"}},"hash":"0100031fda98f4d38ec911c010b7fb87b3b4d20ddb09d68dd5ea64262e715a52","factoryDependenciesUnlinked":[],"factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}}}}}