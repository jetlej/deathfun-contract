{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97",
          "withoutMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97",
          "linkedWithoutMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88",
          "withoutMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88",
          "linkedWithoutMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c",
          "withoutMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c",
          "linkedWithoutMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656",
          "withoutMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656",
          "linkedWithoutMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/DeathRaceGame.sol:DeathRaceGame": {
        "src": "contracts/DeathRaceGame.sol:18",
        "version": {
          "withMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471",
          "withoutMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471",
          "linkedWithoutMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createGame(string,bytes32,string,uint8[],bytes)",
          "cashOut(uint256,uint256,uint8[],string)",
          "markGameAsLost(uint256,uint8[],string)",
          "getGameDetails(uint256)",
          "getOnChainGameId(string)",
          "setServerSignerAddress(address)",
          "withdrawFunds(uint256,address payable)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeathRaceGame",
            "src": "contracts/DeathRaceGame.sol:119"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DeathRaceGame",
              "label": "gameCounter",
              "type": "t_uint256",
              "src": "contracts/DeathRaceGame.sol:26"
            },
            {
              "contract": "DeathRaceGame",
              "label": "serverSignerAddress",
              "type": "t_address",
              "src": "contracts/DeathRaceGame.sol:29"
            },
            {
              "contract": "DeathRaceGame",
              "label": "preliminaryToOnChainId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/DeathRaceGame.sol:32"
            },
            {
              "contract": "DeathRaceGame",
              "label": "games",
              "type": "t_mapping(t_uint256,t_struct(Game)1828_storage)",
              "src": "contracts/DeathRaceGame.sol:56"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Game)1828_storage)": {
              "label": "mapping(uint256 => struct DeathRaceGame.Game)"
            },
            "t_struct(Game)1828_storage": {
              "label": "struct DeathRaceGame.Game",
              "members": [
                {
                  "label": "createdAt",
                  "type": "t_uint256"
                },
                {
                  "label": "player",
                  "type": "t_address"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_enum(GameStatus)1803"
                },
                {
                  "label": "payoutAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "gameSeedHash",
                  "type": "t_bytes32"
                },
                {
                  "label": "gameSeed",
                  "type": "t_string_storage"
                },
                {
                  "label": "algoVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "rows",
                  "type": "t_array(t_uint8)dyn_storage"
                },
                {
                  "label": "selectedTiles",
                  "type": "t_array(t_uint8)dyn_storage"
                }
              ]
            },
            "t_enum(GameStatus)1803": {
              "label": "enum DeathRaceGame.GameStatus",
              "members": [
                "Active",
                "Won",
                "Lost"
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97",
          "withoutMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97",
          "linkedWithoutMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88",
          "withoutMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88",
          "linkedWithoutMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c",
          "withoutMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c",
          "linkedWithoutMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656",
          "withoutMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656",
          "linkedWithoutMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/DeathRaceGame.sol:DeathRaceGame": {
        "src": "contracts/DeathRaceGame.sol:18",
        "version": {
          "withMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471",
          "withoutMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471",
          "linkedWithoutMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createGame(string,bytes32,string,uint8[],bytes)",
          "cashOut(uint256,uint256,uint8[],string)",
          "markGameAsLost(uint256,uint8[],string)",
          "getGameDetails(uint256)",
          "getOnChainGameId(string)",
          "setServerSignerAddress(address)",
          "withdrawFunds(uint256,address payable)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeathRaceGame",
            "src": "contracts/DeathRaceGame.sol:119"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DeathRaceGame",
              "label": "gameCounter",
              "type": "t_uint256",
              "src": "contracts/DeathRaceGame.sol:26"
            },
            {
              "contract": "DeathRaceGame",
              "label": "serverSignerAddress",
              "type": "t_address",
              "src": "contracts/DeathRaceGame.sol:29"
            },
            {
              "contract": "DeathRaceGame",
              "label": "preliminaryToOnChainId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/DeathRaceGame.sol:32"
            },
            {
              "contract": "DeathRaceGame",
              "label": "games",
              "type": "t_mapping(t_uint256,t_struct(Game)1828_storage)",
              "src": "contracts/DeathRaceGame.sol:56"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Game)1828_storage)": {
              "label": "mapping(uint256 => struct DeathRaceGame.Game)"
            },
            "t_struct(Game)1828_storage": {
              "label": "struct DeathRaceGame.Game",
              "members": [
                {
                  "label": "createdAt",
                  "type": "t_uint256"
                },
                {
                  "label": "player",
                  "type": "t_address"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_enum(GameStatus)1803"
                },
                {
                  "label": "payoutAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "gameSeedHash",
                  "type": "t_bytes32"
                },
                {
                  "label": "gameSeed",
                  "type": "t_string_storage"
                },
                {
                  "label": "algoVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "rows",
                  "type": "t_array(t_uint8)dyn_storage"
                },
                {
                  "label": "selectedTiles",
                  "type": "t_array(t_uint8)dyn_storage"
                }
              ]
            },
            "t_enum(GameStatus)1803": {
              "label": "enum DeathRaceGame.GameStatus",
              "members": [
                "Active",
                "Won",
                "Lost"
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97",
          "withoutMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97",
          "linkedWithoutMetadata": "47f6d700a17be5278d7b2fef7c60bf03d1cfbd45e021c3bf107f6bf6d3f5fb97"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:14",
        "version": {
          "withMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88",
          "withoutMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88",
          "linkedWithoutMetadata": "d16d72a4fccb9418893fd1422ecf0b0fd70f79962e1b7dc78d66d99597996f88"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c",
          "withoutMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c",
          "linkedWithoutMetadata": "ca8e49f8252c42f1d28fdcefaa022e7eac32e1b098ebf0f4fc76cea7870f8a4c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656",
          "withoutMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656",
          "linkedWithoutMetadata": "4aa83a37738723acdd0ab075804a7b8cb8ae19736c7a7754fa42cea9c9e37656"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      },
      "contracts/DeathRaceGame.sol:DeathRaceGame": {
        "src": "contracts/DeathRaceGame.sol:18",
        "version": {
          "withMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471",
          "withoutMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471",
          "linkedWithoutMetadata": "02e4e4d4ab56e2c477cd50c9306b7d92511b9ad27c9572f018fd7f98ea8b1471"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "()",
          "createGame(string,bytes32,string,uint8[],bytes)",
          "cashOut(uint256,uint256,uint8[],string)",
          "markGameAsLost(uint256,uint8[],string)",
          "getGameDetails(uint256)",
          "getOnChainGameId(string)",
          "setServerSignerAddress(address)",
          "withdrawFunds(uint256,address payable)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DeathRaceGame",
            "src": "contracts/DeathRaceGame.sol:119"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DeathRaceGame",
              "label": "gameCounter",
              "type": "t_uint256",
              "src": "contracts/DeathRaceGame.sol:26"
            },
            {
              "contract": "DeathRaceGame",
              "label": "serverSignerAddress",
              "type": "t_address",
              "src": "contracts/DeathRaceGame.sol:29"
            },
            {
              "contract": "DeathRaceGame",
              "label": "preliminaryToOnChainId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/DeathRaceGame.sol:32"
            },
            {
              "contract": "DeathRaceGame",
              "label": "games",
              "type": "t_mapping(t_uint256,t_struct(Game)1828_storage)",
              "src": "contracts/DeathRaceGame.sol:56"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(Game)1828_storage)": {
              "label": "mapping(uint256 => struct DeathRaceGame.Game)"
            },
            "t_struct(Game)1828_storage": {
              "label": "struct DeathRaceGame.Game",
              "members": [
                {
                  "label": "createdAt",
                  "type": "t_uint256"
                },
                {
                  "label": "player",
                  "type": "t_address"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_enum(GameStatus)1803"
                },
                {
                  "label": "payoutAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "gameSeedHash",
                  "type": "t_bytes32"
                },
                {
                  "label": "gameSeed",
                  "type": "t_string_storage"
                },
                {
                  "label": "algoVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "rows",
                  "type": "t_array(t_uint8)dyn_storage"
                },
                {
                  "label": "selectedTiles",
                  "type": "t_array(t_uint8)dyn_storage"
                }
              ]
            },
            "t_enum(GameStatus)1803": {
              "label": "enum DeathRaceGame.GameStatus",
              "members": [
                "Active",
                "Won",
                "Lost"
              ]
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_array(t_uint8)dyn_storage": {
              "label": "uint8[]"
            },
            "t_uint8": {
              "label": "uint8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.24"
      }
    }
  ]
}